# ------------------------------------------------------------------------------------------------ #
# Karta pro správu pečounů vybrané akce                                                            #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2011 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

var the_duakce_local: number    // zobrazená akce - pokud se liší od the_duakce, je třeba překreslit
var zalozka: text               // evid | akce | foto
var the_pobyt: number           // klíč společného pobytu pečounů
var back: object
var ukazovat_ceny= 0            // zobrazit rozklad cen - lze měnit kontextovým menu

use header: form _header   [  4,  0,,]
use up:     form _pece     [  6, 25,,]
use p_oso:  form _osoba    [400, 10,,]       { tag:'p_oso' }
use cmd:    form _cmd      [400,420,,]       { tag:'p_oso' }
use p_act:  form _aktivity [400, 10,,]       { tag:'p_act' }
//# use alb:    form _album    [400, 10,,]       { tag:'p_fot' }
use alb:    form foto._alb [410, 30,570,]       { tag:'p_fot' }
use p_str:  form _strava   [400, 10,,]       { tag:'p_str' }
use page:   form _page     [400, 10,,]

# -----------------------------------------------------------------------------==> inicializace
func onstart() {
}

func onfocus() {
  if (!dirty) akce_onstart();
  if (the_duakce_local!=the_duakce) {
    if (the_soubeh==2) 
      alert("pro evidenci pečounů použijte prosím kartu z kurzu")
    else {
      init_pece();
      the_duakce_local= the_duakce;
    }
  }
}
# -------------------------------------------------------==> reakce na změny rozměrů okna prohlížeče
const min_h=540           // minimální výška (nelze jednoduše měnit - jsou k ní vztaženy souřadnice)
var   curr_h: number      // výška nad základní výšku

func onresize(w,h) {  // echo('pece onresize(',w,',',h,')');
  if (h < min_h && curr_h!=min_h) {
      curr_h= 0; h_change_all()
  }
  elseif (h>min_h && h!=curr_h+min_h.get) {
    curr_h= h-min_h; h_change_all()
  }
}

# změna výšky oproti základní min_h
func h_change_all() {
  cmd.property({down:curr_h});            // posunutí proti původnímu - omezeno na min_h
  page.frame.property({stretch:curr_h});  // protažení proti původnímu
  p_str.rozklad.property({stretch:curr_h});  // protažení proti původnímu
  h_change_b();
}
# změna počtu řádků browse oproti aktuálním řádkům
func h_change_b() { var r:number, h:number
  h= sys('screen','height');
  r= (h-175)/17;
  if (r!=up.b.rows) {
    up.b.set_attrib('rows',max(5,r-1));
    p_oso.d.set_attrib('rows',max(4,r-22));
    p_act.akc.set_attrib('rows',max(5,r-2));
  }
}
# -------------------------------------------------------------------------------==> globální funkce
func init_pece() { 
  page.page_init();
  if (the_cenik_verze==2) {
    p_oso.display(0,'cv1');
    p_oso.display(1,'cv2');
    page.str.display(1);
  }
  else { // bez ceníku nebo verze 1
    p_oso.display(0,'cv2');
    p_oso.display(1,'cv1');
    p_oso.od_init(); p_oso.do_init();
    page.str.display(0);
  }
  header.fill(the_title);
  reload(0);
  page.evd.onclick();
}
# ukázání dnů aktuálního pečouna
func pece_dny(_ids) { 
  if (DnySpolu.ukaz(_ids)) {
    up.b.reload_pecoun();
    up.b.browse_row();
  }
}
# ukázání dnů všech pečounů
func pece_dny_all(_ids) { 
  if (DnySpolu.ukaz(_ids)) {
    p_str.strava_init();
    reload(_ids);
  }
}
# ukázání rozkladu ceny - bez speciálních slev
func pece_cena(_ids)  { var cena: object
  cena= php.akce2_vzorec2_pobyt(0,_ids,{funkce_slevy:0});
  alert(cena.navrh);
}
# nastavení pro akci v hnízdech
proc pece_hnizda() { var opts:object
  echo("pece HNIZDA=",the_hnizda.get);
  { the_hnizda.get; 
    header.hnizdo.set_attrib('options','ms_akce_hnizda_plus.nazev');
    up.b.xhnizdo.set_attrib('map_pipe','ms_akce_hnizda.zkratka');
    p_oso.hnizdo.set_attrib('options','ms_akce_hnizda.zkratka');
    header.hnizdo.key(99);
    header.hnizdo.display(1);
    p_oso.hnizdo.display(1);
    up.b._pfunkce.width(40); up.b.xhnizdo.width(20);
  | header.hnizdo.display(0);
    p_oso.hnizdo.display(0);
    up.b._pfunkce.width(60); up.b.xhnizdo.width(0);
    [ up.b.get_query; up.b.init_queries(1) ]
  };
}
func akce_show(xakce,xspolu,xnadpis,xback) {
  page.page_init();
  back= {ida: the_duakce,
    idp: up.b.browse_count() ? up.b.key_pobyt : 0,
    tit: the_title, bck: xback};
  header.expl.display(0);
  header.zpet.display(1);
  panel.focus(1); // bez vyvolání onfocus
  the_duakce= xakce;
  header.fill(`<i>${xback}: ${xnadpis}</i>`);
  reload(xspolu);
}
func akce_back() {
  the_duakce= back.ida;
  the_title= back.tit; header.fill(the_title);
  reload(back.idp);
  switch(back.bck) {
    case 'AKTIVITA': page.jin.onclick(); break;
    case 'EVIDENCE': evi.focus(1); break;
  }
  header.expl.display(1);
}
proc reload(id_spolu) {  //==> reload pečounů
  the_duakce.get;
  // the_pobyt = společný pobyt pečounů (mimo osobních a pomocných)
  the_pobyt.set(ask('select','id_pobyt','pobyt',conc("funkce=99 AND id_akce=",the_duakce.get)));
  [ the_pobyt.get
  | the_pobyt.set(pobyt.insert_record(object('id_akce',the_duakce.get,'funkce',99))) ];
  up.b.browse_load(cconc(up.nevlastni.get,
    conc("(p.funkce=99 OR s.pfunkce IN (4,5,8)) AND p.id_akce=",
      the_duakce.get),  // vyloučení dědečků ap. mají s_role=5 ale pfunkce=0
    conc("(p.funkce=99) AND p.id_akce=",the_duakce.get)));
  up.b.browse_focus;
  { id_spolu; up.b.browse_seek(conc('s.id_spolu=',id_spolu)); up.b.reload_pecoun
  | up.b.raise('onrowclick') }
| p_oso.init; p_oso.d.browse_init;
  p_oso.o.key(0); p_oso.s.key(0);
}
var pall: object
proc pecouni_add(p,i) {  // používají panely PridaniJmenem a PridaniAkce
  var pk: number
  var id: number
  var pou: number
  p.chck.get;
  pall.set(p.all.get); id.set(pall.get('id'));
  // přidání pečouna na akci
  spolu.insert_record(object('id_osoba',id.get,'id_pobyt',the_pobyt.get));
  reload(0);
}
# ---------------------------------------------------------------------------------------==> _header
form _header [,,380,50] {
  proc fill(x) {
    head.set(conc("<div class='karta'>",x,"</div>"))
  }
  label head [0,2,*,50]  { title:'' }
  select hnizdo [-8,7,80,] { format:'t' type:'map' options:ms_akce_hnizda_plus.nazev
    func onchanged() {
      if (this.key()==99) // všichni=default
        up.b.init_queries(1)
        elseif (this.key()==0) // nezařazení
        up.b.xhnizdo.set_query(1,'?',1)
      else 
        up.b.xhnizdo.set_query(1,substr(this,0,1),1)
  }}
  button zpet [-2,6,,] { title:'Zpět', help:'Navrátí zobrazení účastníků původní akce', format:'n'
    func onclick() { this.display(0); akce_back() }
  }
  button expl [-2,6,,] { title:'[fa-question] Vysvětlivky pro úpravy', help:'popis barev a karet'
    func onclick() { Vysvetlivky.show('akce2.pece'); }
  }
}
# -----------------------------------------------------------------------------------------==> _page
form _page [,,580,20] {
  # --------------------------- záložky
  proc tags(a,on,off) {
    form.set_css('ae_butt_off','ae_butt_on','p');
    a.set_css('ae_butt_on','ae_butt_off');
    panel.display(1,on); panel.display(0,off);
  }
  proc page_init() {
    zalozka.set('evid'); tags(evd,'p_oso','p_act|p_fot|p_str');
  }
  label evd [ 12,0,120,20] {tag:'p', title:'<b>Evidenční karta</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'p_oso','p_act|p_fot|p_str');
      zalozka.set('evid'); up.b.reload_pecoun;
    }
  }
  label jin [152,0,120,20] {tag:'p', title:'<b>Přehled aktivit</b>', format:'c',
    proc onclick() { tags(this,'p_act','p_oso|p_fot|p_str');
      zalozka.set('akce'); up.b.reload_pecoun;
    }
  }
  label plt [292,0,120,20] {tag:'p', title:'<b>Fotky</b>', format:'c',
    proc onclick() { tags(this,'p_fot','p_oso|p_act|p_str');
      zalozka.set('foto'); up.b.reload_pecoun;
    }
  }
  label str [432,0,120,20] {tag:'p', title:'<b>Strava</b>', format:'c',
    func onclick() { tags(&this,'p_str','p_oso|p_act|p_fot');
      zalozka= 'strava'; p_str.strava_init();
    }
  }
  label frame [0,16,582,430] { css:'ae_work'}
  # -------------------------==> kontextové_menu
  menu { type:'context', join:frame
    item { title:'ukázat změny', func onclick () { track.back_show('osoba',up.b.key_osoba) } }
    item { title:'ukázat/skrýt ceny', func onclick () { ukazovat_ceny= 1-ukazovat_ceny; } }
    item { title:'sjednotit kopie osob', skill:'fad|fad;yad|yad'
      func onclick () { elim.osoby(up.b.key_osoba,up.b.jmeno,up.b.prijmeni); }}
    item { title:'-ukázat data', skill:'m', 
      func onclick() { 
        js.call_root_func_par('syst_tab_rec_show',array('spolu',up.b.key_spolu),&this,'onclick_')}
      func onclick_() {}
    }
  }
}
# -------------------------------------------------------------------==> _aktivity
form _aktivity [,,580,] {
  var ido: number
  field jme [10,25,200,] { format:'o' }
  button [300,25,,] { title:'^evidence', css:'db_evidence',
    proc onclick() { evi.evid_osoba(ido.get) } }
  edit pozn [390,52,175,250] { format:'o', title:'^poznámka k té akci' }
  view a: table akce
  view p: table pobyt { join:'ON a.id_duakce=p.id_akce' }
  view s: table spolu { join:'USING(id_pobyt)' }
  view o: table osoba { join:'USING (id_osoba)' }
  browse akc [10,53,,] { rows:26, qry_rows:1, css_rows:"sty,1:neucast,2:jakodite"
    show ida { data:a.id_duakce }
    show idp { data:p.id_pobyt }
    show ids { data:s.id_spolu }
    show org { data:a.access }
    show sty { expr:"IF(a.zruseno,1,IF(FLOOR(IF(MONTH(o.narozeni),DATEDIFF(a.datum_od,o.narozeni)/365.2425,YEAR(a.datum_od)-YEAR(o.narozeni)))<18,2,0))" }
    show spozn { data:s.poznamka }
    show rok  [,, 30,] { title:'rok', expr:"YEAR(a.datum_od)", format:'q*s-' 
      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db'  }
    show akce [,,220,] { title:'název', data:a.nazev, format:'q*s' }
    show fce  [,, 60,] { title:'fce', data:p.funkce, map_pipe:ms_akce_funkce.zkratka, format:'q*s' }
    show jak  [,, 30,] { title:'jak', help:"'dítě' znamená věk pod 18 let"
      expr:"IF(FLOOR(IF(MONTH(o.narozeni),DATEDIFF(a.datum_od,o.narozeni)/365.2425,YEAR(a.datum_od)-YEAR(o.narozeni)))<18,IF(s.s_role=4,'pom.p','dítě'),'')" }
    proc onrowclick() { pozn.set(spozn.get) }
    proc onsubmit() {
      akce_show(ida.get,idp.get,conc(akce.get,' ',rok.get),'AKTIVITA') }
  }
  proc ucasti(id_osoba,_prijmeni,_jmeno) {
    id_osoba; ido.set(id_osoba);
    jme.set(conc(_prijmeni,' ',_jmeno));
    akc.browse_load(conc('a.spec=0 AND a.zruseno=0 AND s.id_osoba=',id_osoba),"datum_od DESC")
  | akc.browse_init
  }
}
# ----------------------------------------------------------------------------------------==> _osoba
form _osoba [,,580,] { tag:'a',
  # ------------------------ osoba
  view o: table osoba,
  const L=0; T=5
  field key_osoba [L+517,T+13,50,] { data:o.id_osoba, format:'ro', css:'Label' }
  field key_spolu [L+517,T+25,50,] { format:'ro', style:'color:white', css:'Label' }
  field access { data:o.access }
#   field _n        [L+517,T+25,50,] { format:'ro', style:'color:white', css:'Label' }
  field key_pobyt [L+517,T+37,50,] { format:'ro', style:'color:white', css:'Label' }
  # skoky do evidence, pobyty
  button go_evi [L+474,T+14,,] {title:'^evidence', css:'db_evidence'
    proc onclick() { evi.evid_osoba(key_osoba.get) } }
  button go_pob [L+474,T+35,,] {title:'^rodina', css:'db_evidence'
    proc onclick() { ucast.ucast_pobyt(up.b.rod_pobyt.get) } }
  # osobní údaje
  field prijmeni [L+5,T+30,89,] {data:o.prijmeni, help:'příjmení',title:'^příjmení'}
  field jmeno    [L+109,T+30,79,] {data:o.jmeno,title:'^jméno'}
  radio sex [L+200,T+15,50,35] { data:o.sex, value:'1'
    case [0,2,50,] { title:'muž', expr:'1' }
    case [0,17,50,] { title:'žena', expr:'2' }
//    proc onchange() { echo('sex=',this.get) }
  }
  field narozeni [L+255,T+32,85,] {type:'date', data:o.narozeni, format:'rR:e',title:'^narození'}
//  field rc       [L+345,T+32,45,] {tag:'o', format:'d', title:'^rodné číslo'}
//  field rodne    [L+400,T+32,37,] {data:o.rc_xxxx, format:'r:e',title:'/'}
  field obcanka  [L+255,T+69,99,] {data:o.obcanka, format:'',title:'^občanka'}
  select cirkev  [L+377,T+69,96,] {type:'map', data:o.cirkev, options:ms_akce_cirkev.zkratka,title:'^církev'}
  select dieta   [L+489,T+69,80,] {type:'map', data:o.dieta, options:ms_akce_dieta.zkratka,title:'^dieta'}
  // adresa - rodinná=0, osobní=1.
  label [L+0,T+92,582,12] { css:'db_hr' }
  label [L+7,T+94,500,12] { title:'adresa je' }
  radio adresa [L+22,T+92,189,18] { value:'0', data:o.adresa
    case [34,0,70,] { title:'osobní', expr:'1' }
    case [90,0,70,] { title:'rodinná:', expr:'0' }
    proc onchange() { var r:object
      r.set(ask('akce2_osoba2x',key_osoba.get)); // varianty adres
      [ this.get; copy_by_name(r.o_adresa,form,'',1) | copy_by_name(r.r_adresa,form,'',1) ];
      form.enable(this.get,'aa');
    }
  }
  field ulice    [L+29,T+111,162,] {tag:'aa', data:o.ulice, title:'ulice'}
  field psc      [L+220,T+111,44,] {tag:'aa', data:o.psc, title:'psč'
    proc onchanged() { this.let(replace(this.get,' ','')) }
  }
  field obec     [L+297,T+111,135,] {tag:'aa', data:o.obec, title:'obec'}
  // kontakt - rodinný=0, osobní=1
  label [L+0,T+134,581,12] { css:'db_hr' }
  label [L+8,T+137,50,] {title:'kontakt je' }
  radio kontakt [L+23,T+134,185,18] { value:'0', data:o.kontakt
    case [34,0,70,] { title:'osobní', expr:'1' }
    case [90,0,70,] { title:'rodinný:', expr:'0' }
    proc onchange() { var r:object
      r.set(ask('akce2_osoba2x',key_osoba.get)); // varianty kontaktu
      [ this.get; copy_by_name(r.o_kontakt,form) | copy_by_name(r.r_kontakt,form) ];
      form.enable(this.get,'ak');
    }
  }
  field telefon  [L+41,T+152,212,] { tag:'ak', data:o.telefon, title:'telefon'}
  field email    [L+290,T+152,277,] { tag:'ak', data:o.email, title:'e-mail'}
  label [L+0,T+175,581,12] { css:'db_hr' }
  edit  pozn     [L+5,T+192,216,84] {data:o.note,title:'^osobní poznámka'}
  # ------------------------ akce
  view s: table spolu
  select pfunkce [L+5,T+69,173,] {type:'map', data:s.pfunkce, options:ms_akce_pfunkce.zkratka,
    title:'^typ pečovatele'
    proc onchanged() {
      eq(the_pobyt.get,up.b.key_pobyt.get);
      [ eq(this.key,4,5,8);
        this.key(up.b.pfunkce.get); this.plain;
        alert("typ 'pomocný', 'osobní' a 'člen G' je možné nastavit jen na kartě Účastníci u rodiny")
      ]
    | this.key(up.b.pfunkce.get); this.plain;
      alert("typ pečovatele s rodiči na kurzu je třeba změnit na kartě Účastníci na kartě dítěte")
  }}
  edit  pozn_akce [L+229,T+192,336,84] {data:s.poznamka,title:'^/ poznámka k pobytu na této akci'}
  select hnizdo [L+160,T+284,37,] {type:'map', data:s.s_hnizdo, format:'un', 
    options:ms_akce_hnizda.zkratka, title:'hnízdo' }
  // strava 
  check p_kc_strava  [L+5,T+305,181,] {data:s.p_kc_strava, title:'místo stravy hotovost' }
  check s_rodici  [L+5,T+281,210,] { data:s.s_rodici, title:'stravu platí rodiče - účastníci akce', format:'d' }
  check pulstrava [L+464,T+279,99,] {tag:'cv1', data:s.pulstrava, title:'poloviční strava', format:'d' }
  
  # ==> částečný pobyt

  // rozklad ceny podle ceníku verze 2
  label [L+236,T+291,336,14] { tag:'cv2', 
      title:'Kliknutím na jméno uprav stravu a dobu pobytu. Viz popis na Strava.' }
  label rozklad [L+230,T+311,340,50] {tag:'cv2', css:'karta_info' }
  
  // ------------------- ošetření položek od-*
  var od_strava_default: number,
      od_pobyt_default: text
  func od_init() {
    od_x= 0;
    od_pobyt_default= sql2date(the_datum_od,'.'); 
    switch (the_strava_oddo) {
      case 'oo': od_strava_default= 2; break;
      case 'vo': od_strava_default= 3; break;
    }
    od_strava.key(od_strava_default);
    od_pobyt= od_pobyt_default; 
    form.enable(0,'od');
  }
  func od_show() {
    od_init(); 
    if (up.b.od_strava) { od_x= 1; od_strava.key(up.b.od_strava); }
    if (up.b.od_pobyt)  { od_x= 1; od_pobyt= js.add_days(sql2date(the_datum_od,'.'),up.b.od_pobyt); }
    form.enable(od_x,'od');
  }
  func od_save() {
    if (od_pobyt.changed()) {
      p_od_pobyt= js.diff_days(od_pobyt,od_pobyt_default); p_od_pobyt.change();
    }
    if (od_strava.changed() && od_strava.key()==od_strava_default) {
      od_strava.key(0); od_strava.change();
    }
  }
  field p_od_pobyt { data:s.p_od_pobyt }
  check od_x [L+226,T+309,100,] { tag:'cv1', title:'přijede později', value:'0' 
    func onchange() { 
      if (this) form.enable(1,'od'); 
      else {
        od_strava.key(od_strava_default); od_strava.change();
        od_pobyt= od_pobyt_default; od_pobyt.change();
        p_od_pobyt= 0; p_od_pobyt.change();
    } }
  }
  field p_od_pobyt { tag:'cv1', data:s.p_od_pobyt }
  field od_pobyt   [L+344,T+311,85,] {tag:'cv1,od', type:'date', format:'drR:e',title:'kdy'
    func onchanged() { 
      if (!js.between_days(this,od_pobyt_default,do_pobyt_default)) 
        alert("nelze zadat datum mimo čas konání akce ");
  } }
  select od_strava [L+460,T+311,85,] {tag:'cv1,od', type:'map', options:jidla.nazev, title:'sní', 
      format:'d', data:s.p_od_strava}
  
  // ------------------- ošetření položek do_*
  var do_strava_default: number,
      do_pobyt_default: text
  func do_init() {
    do_x= 0;
    do_pobyt_default= sql2date(the_datum_do,'.'); 
    switch (the_strava_oddo) {
      case 'oo': do_strava_default= 2; break;
      case 'vo': do_strava_default= 2; break;
    }
    do_strava.key(do_strava_default);
    do_pobyt= do_pobyt_default; 
    form.enable(0,'do');
  }
  func do_show() {
    do_init(); 
    if (up.b.do_strava) { do_x= 1; do_strava.key(up.b.do_strava); }
    if (up.b.do_pobyt)  { do_x= 1; do_pobyt= js.add_days(sql2date(the_datum_do,'.'),-up.b.do_pobyt); }
    form.enable(do_x,'do')
  }
  func do_save() {
    if (do_pobyt.changed()) {
      p_do_pobyt= js.diff_days(do_pobyt,do_pobyt_default); p_do_pobyt.change();
    }
    if (do_strava.changed() && do_strava.key()==do_strava_default) {
      do_strava.key(0); do_strava.change();
    }
  }
  check do_x [L+226,T+339,100,] { tag:'cv1', title:'odjede dříve', value:'0'
    func onchange() { 
      if (this) form.enable(1,'do'); 
      else {
        do_strava.key(do_strava_default); do_strava.change();
        do_pobyt= do_pobyt_default; do_pobyt.change();
        p_do_pobyt= 0; p_do_pobyt.change();
    } }
  }
  field p_do_pobyt { tag:'cv1', data:s.p_do_pobyt }
  field do_pobyt   [L+344,T+341,85,] {tag:'cv1,do', type:'date', format:'drR:e',title:'kdy'
    func onchanged() { 
      if (!js.between_days(this,od_pobyt_default,do_pobyt_default)) 
        alert("nelze zadat datum mimo čas konání akce ");
  } }
  select do_strava [L+460,T+341,85,] {tag:'cv1,do', type:'map', options:jidla.nazev, title:'sní', 
      format:'d', data:s.p_do_strava}

  // ------------------- přidané položky do tabulky SPOLU
  //  number p_od_pobyt   // pro pečouny: počet dnů pozdějšího příjezdu
  //  number p_od_strava  // pro pečouny: první jídlo, 0=default, 1=snídaně, 2=oběd, 3=večeře
  //  number p_do_pobyt   // pro pečouny: počet dnů dřívějšího odjezdu
  //  number p_do_strava  // pro pečouny: poslední jídlo, 0=default, 1=snídaně, 2=oběd, 3=večeře
  
  # ==> seznam dětí
  field skupinka  [L+70,T+284+68,30,] {data:s.skupinka, format:'r:e',title:'skupinka č.'}
  browse d [L+5,T+306+68,,] {type:'smart', rows:5
    show id_osoba
    show id_spolu
    show prijmeni [,,80,] { title:'příjmení' }
    show jmeno    [,,70,] { title:'jméno' }
    show vek      [,,35,] { title:'věk', js_pipe:'roku', format:'r' }
    show narozeni
//    show rc_xxxx
    show note     [,,350,] { title:'osobní poznámka / poznámka k akci' }
#     proc onsubmit() {
#       Dite.key_dite.set(id_osoba.get); Dite.key_spolu.set(id_spolu.get);
#       Dite.modal(260,130)
#     }
  }
}
# -----------------------------------------------------------------------------------------==> _pece
form _pece [,,400,] { css:'ds_form'
#   label         [4,516,,] {title:'pobyt - vývojářské údaje', skill:'m'}
#   label develop [0,530,380,106] { skill:'m', style:'border:1px solid #bbb;padding:3px' }
  // legenda
  label leg [20,6,400,17] { title:"<span class='yellow'>zobrazit (pom.peč, os.peč., člen G), zapsané u rodičů na kartě Účastníci</span>"}
  // omezení browse
  check nevlastni [0,2,15,15] { title:' ', value:'1', format:'t'
    proc onchange() { reload(0) }}
  // definice pohledů
  view s: table spolu
  view p: table pobyt  { join:'ON p.id_pobyt=s.id_pobyt' }
  view a: table akce   { join:'ON a.id_duakce=p.id_akce' }
  view o: table osoba  { join:'ON s.id_osoba=o.id_osoba' }
  view t: table tvori  { join_type:'LEFT', join:'ON t.id_osoba=o.id_osoba' }
  view r: table rodina { join_type:'LEFT', join:'ON r.id_rodina=t.id_rodina' }
  view c: table osoba  { join_type:'LEFT', join:'ON c.id_osoba=s.pecovane' }
  view x: table pobyt  { join_type:'LEFT', 
          join:'ON x.i0_rodina=r.id_rodina AND x.id_akce=a.id_duakce AND x.hnizdo=s.s_hnizdo' }
  // ==> seznam pečounů
  browse b [0,22,,] {type:'smart', buf_rows:120, rows:27, qry_rows:1, group_by:"s.id_osoba"
//       ?     hlavoun  pomocny  osobni   mimořádný team   skupina G
//   css_rows:'pfunkce,0:nic,1:nic,4:zluty,5:zluty,6:nic,7:nic,8:zluty'
    css_rows:'funkce,0:,1:zluty'
    optimize:{qry:'noseek'},
    // klíče
    show key_spolu  {data:s.id_spolu}
    show key_pobyt  {data:p.id_pobyt}
    show key_akce   {data:a.id_duakce}
    show key_osoba  {data:o.id_osoba}
    show            {data:t.id_tvori}
    show key_rodina {data:r.id_rodina}
    show            {data:c.id_osoba}
    show rod_pobyt  {expr:"IFNULL(x.id_pobyt,0)"}
    // barvy: zjištění rodiny na kurzu - vyjma:nepřijel,náhradník,odhlášen
    show rod_nakurzu {expr:"IF(ISNULL(x.id_pobyt),0,x.funkce NOT IN (9,10,13,14,15))"}
    show jen_oddo  { expr:"IF(s.p_od_pobyt OR s.p_od_strava OR s.p_do_pobyt OR s.p_do_strava,1,0)"}
    show neuplne   { expr:
        "IF(o.narozeni='0000-00-00' OR o.obcanka='' OR (ISNULL(r.id_rodina) AND (o.kontakt=0 OR o.adresa=0)),1,0)"}
    // data
    show role      { data:t.role}
    show pecovane  { data:s.pecovane}   // jde-li o chůvu
    show fotka     { data:o.fotka }
    show prijmeni  { data:o.prijmeni }
    show jmeno     { data:o.jmeno }
    show sex       { data:o.sex }
    show narozeni  { data:o.narozeni }
    show cirkev    { data:o.cirkev }
    show dieta     { data:o.dieta }
    show obcanka   { data:o.obcanka }
    show adresa    { data:o.adresa }
    show ulice     { expr:"IF(o.adresa,o.ulice,CONCAT('®',r.ulice))" }
    show psc       { expr:"IF(o.adresa,o.psc,CONCAT('®',r.psc))" }
    show obec      { expr:"IF(o.adresa,o.obec,CONCAT('®',r.obec))" }
    show stat      { expr:"IF(o.adresa,o.stat,CONCAT('®',r.stat))" }
    show kontakt   { data:o.kontakt }
    show telefon   { expr:"IF(o.kontakt,o.telefon,CONCAT('®',r.telefony))" }
    show email     { expr:"IF(o.kontakt,o.email,CONCAT('®',r.emaily))" }
    show pozn      { data:o.note }
    show pozn_akce { data:s.poznamka }
    show s_rodici  { data:s.s_rodici }
    show p_kc_strava  { data:s.p_kc_strava }
    show funkce    { expr:"IF(p.funkce=99,0,1)" }
    show pfunkce   { data:s.pfunkce }
    show pulstrava { data:s.pulstrava }
    show od_pobyt  { data:s.p_od_pobyt }
    show od_strava { data:s.p_od_strava }
    show do_pobyt  { data:s.p_do_pobyt }
    show do_strava { data:s.p_do_strava }
    show hnizdo    { data:s.s_hnizdo }
    // zobrazení
    show _nazev    [,,110,] { title:'příjmení jméno', format:'s+q*', css_cell:"funkce,0:,1:zluty"
                              expr:"CONCAT(o.prijmeni,' ',o.jmeno)" 
                              css_cell:'neuplne,0:,1:fialovy' }
    show _pfunkce  [,,40,]  { title:'funkce', data:s.pfunkce, map_pipe:ms_akce_pfunkce.zkratka,
                              format:'q#s', css_cell:'rod_nakurzu,0:,1:oranzovy' }
    show skupinka  [,,20,]  { title:'sk.', data:s.skupinka, format:'rqs:e'}
    show _vek      [,,0,]  { title:'věk', expr:"TIMESTAMPDIFF(YEAR,o.narozeni,datum_od)", format:'rsq*' }
    show _poznamka [,,160,] { title:'osobní pozn. / pozn. k akci', format:'qs', expr:"CONCAT
                             (IF(pecovane,CONCAT('chůva pro ',c.jmeno,' ',c.prijmeni,' / '),''),
                              IF(o.note='' AND s.poznamka='','',CONCAT(o.note,' / ',s.poznamka)))",
                              css_cell:'jen_oddo,0:,1:blue' }
    show xhnizdo [,,20,] { title:'h.', format:'rq#s:e', map_pipe:ms_akce_hnizda.zkratka, data:s.s_hnizdo,
      help:'pořadí hnízda nebo 0' css_cell:"hnizdo,0:,1:oranzovy,2:zluty,3:zeleny,4:modry,5:azurovy,6:fialovy"}
    // skupinka
    show skup     { expr:"
      IF(s.skupinka=0,'',
         (SELECT GROUP_CONCAT(osoba.id_osoba,'|',id_spolu,'|',prijmeni,'|',jmeno,'|',
            narozeni,'|',narozeni,'|'/*,rc_xxxx,'|'*/,
            IF(note='' AND spolu.poznamka='','',CONCAT(note,' / ',spolu.poznamka))
          ORDER BY IF(pobyt.funkce=99,0,1),prijmeni SEPARATOR '|')
        FROM osoba
        JOIN spolu USING(id_osoba)
        JOIN pobyt USING(id_pobyt)
        WHERE pobyt.id_akce=p.id_akce AND skupinka=s.skupinka
      ))"
    }
    proc onclick() {
      _vek.width; _vek.width(0); _poznamka.width(160)
    | _vek.width(29); _poznamka.width(130)
    }
    func onrowclick() { reload_pecoun() }
    // ==> změna pečouna
    func reload_pecoun() { var cena:object, parms:object #==> . načtení pečouna
      // ochrana proti neuložené změně, pokud je možné údaje měnit
      if (!p_oso.same()) {
        warning('neuložené změny pro pečouna <b>',p_oso.prijmeni,'</b> použij [Zpět] nebo [Uložit]');
        return;
      }
      if (!b.browse_count()) {
        p_oso.init(); p_oso.d.browse_init(); return;
      }
      switch (zalozka) {
        case 'evid':
          // přechod na jiného pečouna
          copy_by_name(b,p_oso); p_oso.o.key(key_osoba); p_oso.s.key(key_spolu);
          p_oso.enable(adresa,'aa'); // správné zobrazení adresy
          p_oso.enable(kontakt,'ak'); // a kontaktu
          p_oso.go_pob.enable(rod_pobyt);
          p_oso.d.browse_fill(skup);
          if (the_cenik_verze==2) {
            // zjisti náklady
            parms= {prijmeni:0,cena:0,jako:0,back_dny:'akce2.pece.pece_dny'};
            if (ukazovat_ceny) {
              parms.cena= 1;
              parms.back_cena= 'akce2.pece.pece_cena';
            }
            cena= php.akce2_vzorec2_pobyt(key_pobyt,key_spolu,parms);
            p_oso.rozklad= cena.tabulka;
          }
          else { // starý ceník
            p_oso.od_show(); p_oso.do_show();
          }
          break;
        case 'akce':
          p_act.ucasti(key_osoba,prijmeni,jmeno);
          break;
        case 'foto':
          if (key_osoba) alb.galery('osoba',key_osoba);
      }
    }
    # ------------------------==> kontextové_menu
    menu { type:'context', join:b
      item { title:'zrušit označení', skill:'m', proc onclick () { b.selected('clear') } }
    }
  }
}
# ---------------------------------------------------------------------------------------==> _strava
form _strava [,,580,] {
  func strava_init() { var cena:object, parms:object
    parms= {prijmeni:1,cena:0,jako:0,back_dny:'akce2.pece.pece_dny_all'};
    if (ukazovat_ceny) {
      parms.cena= 1;
      parms.back_cena= 'akce2.pece.pece_cena';
    }
    cena= php.akce2_vzorec2_pobyt(the_pobyt,0,parms);
    rozklad= cena.tabulka;
  }
  label [10,40,155,] { title:`<h3>Stravování a ubytování</h3>
      Aby všichni pečouni dostali najíst je zaptřebí pečlivě zapsat 
      kdy přijedou, kdy odjedou a co budou jíst - pokud nebudou na celé akci.<br><br>
      Nastavit to lze v tabulce, která se objeví po kliknutí na jméno,<br><br>
      Ubytování prosím nastavit na <b>Z</b> a zvolit <b>C</b> pro celou stravu 
      případně <b>P</b> pro poloviční.<br><br>
      U jídla jsou velká písmena S,O,V (snídaně, oběd, večeře), pokud pečoun jí všechna jídla 
      - pokud jen některá, je písmeno malé. Dieta k dispozici je pouze BL - bezlepková.<br><br>
      Pokud je jméno žluté, je třeba doplnit hodnoty. Jinak nebude objednána strava.
  ` }
  label rozklad [179,50,390,380] { title:'Stravování a ubytování', 
      style:"overflow-x:hidden;overflow-y:auto;max-height:fit-content", css:'karta_info' }
}
# ------------------------------------------------------------------------------------------==> _cmd
form _cmd [,,200,32] { css:'ds_form'
  const Tc=0
  // Nový
  button [6,Tc+5,,] {title:'Nový', skill:'yaap+|yaap+;faa+|faa+;caa+|caa+',
    help:'Vytvoření nového pečouna a vložení jako účastníka'
    proc onclick() {   // založení
      p_oso.init(1); p_oso.d.browse_init; p_oso.o.key(0); p_oso.s.key(0);
      p_oso.access.set(the_org.get); p_oso.access.change;
      b_display(0);
  } }
  // Zpět
  label  [478,Tc+0,98,30] { css:'ae_parm', skill:'yaap+;faa+;caa+' }
  button [484,Tc+5,,] {title:'Zpět',  help:'Neukládat změněná data',
    skill:'yaap+|yaap+;faa+|faa+;caa+|caa+'
    proc onclick() {
      p_oso.plain;
      b_display(1);
      up.b.browse_row; up.b.reload_pecoun
#       reload(up.b.browse_key);
  } }
  // Uložit
  button [530,Tc+5,,] {title:'Uložit',  help:'Uložit změněná data',
    skill:'yaap+|yaap+;faa+|faa+;caa+|caa+'
    func onclick() { var ok: number
      if (p_oso.same()) return;
      if (!p_oso.pfunkce.key()) { alert("položka typ pečovatele je povinná"); return }
      if (p_oso.o.key()) { // oprava
        p_oso.od_save(); p_oso.do_save();
        p_oso.o.save(); p_oso.s.save();  p_oso.plain();
        up.b.browse_row(); up.b.reload_pecoun();
      }
      else { // přidání
        p_oso.o.insert();
        p_oso.s.key(spolu.insert_record({id_osoba:p_oso.o.key(),id_pobyt:the_pobyt}));
        p_oso.s.save();
        p_oso.plain();
        b_display(1);
        reload(0);
      }
    }
  }
  // PŘIDAT z pečounů
  button [100,Tc+5,,] {title:'Přidat jménem', skill:'yaap+|yaap+;faa+|faa+;caa+|caa+',
    help:'Přidání pečouna podle jména - výběr z EVIDENCE'
    proc onclick() {
      PridaniJmenem3.fl.jmena.set_attrib('par.fce','akce2_auto_jmena1');
      PridaniJmenem3.modal(240,50)
  } }
  // PŘIDAT z evidence
  button [228,Tc+5,,] {title:'... jménem pečouna', skill:'yaap+|yaap+;faa+|faa+;caa+|caa+',
    help:'Přidání pečouna podle jména - výběr z pečounů'
    proc onclick() {
      PridaniJmenem3.fl.jmena.set_attrib('par.fce','akce2_auto_jmena3');
      PridaniJmenem3.modal(240,50)
  } }
  // VYŘADIT a VYMAZAT
  button [357,Tc+5,,] {title:'Vyřadit', skill:'yaap+|yaap+;faa+|faa+;caa|caa+',
    help:'Vyřazení pečouna z účasti na akci'
    proc onclick() {
      confirm("Opravdu vyřadit ",up.b.prijmeni.get,' (',up.b.jmeno.get,") z této akce?");
      spolu.delete_record(conc('id_spolu=',up.b.key_spolu.get),1);
      reload(0);
  } }
  button [409,Tc+5,,] {title:'Vymazat', skill:'yaap+|yaap+;faa+|faa+;caa+|caa+',
    help:'Vymazání informací o pečounovi z evidence'
    proc onclick() {
      confirm("Opravdu vymazat z evidence ",up.b.prijmeni.get,' ',up.b.jmeno.get,"z evidence?");
      alert('není hotovo - tady bude ještě jedno varování s výčtem akcí, kterých se zúčastnil');
      reload(0);
  } }
  // procedury
  proc b_display(on) { up.b.display(on);  }
}
# ================================================================================> Přidání jménem 3
panel PridaniJmenem3 [,,320,280] {type:'popup', title:'Přidání známých pečounů jménem'
  use fl: form _fl [12,10,,]
  proc onfocus() { fl.jmena.init; fl.vse.init; fl.L.init; fl.jmena.focus }
  form _fl [,,300,200] {
    var last: number
    var rod: object
    var popis: text
    button [0,250,,] { title:'přidat do pečounů akce', proc onclick() {
      each(L,pecouni_add); reload(0); panel.hide(0)
    } }
    button [144,250,,] { title:'jiná jména', proc onclick() {
      jmena.init; vse.init; L.init } }
    button [230,250,,] { title:'konec', proc onclick() {
      jmena.init; vse.init; L.init; panel.hide(0) } }
    // výběr z databáze MS
    select jmena [100,0,200,17] { type:'auto', format:'t',
      par:{fce:'akce2_auto_jmena3',patt:'whole',cond:'funkce=99',save:'key_only'},
      // par.cond je měněno při volání
      proc onchanged() {
        rod.set(ask('akce2_auto_jmena3L',this.key));
        each(rod.get,jmenovci); // nesmí volat asynchronní operace
      }
    }
    proc jmenovci(p,i) {
      last.set(L.add);
      popis.set(p.nazev);
      L.part(last.get).part('info').set(popis.get);
      L.part(last.get).part('all').set(p);
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t'
      proc onchange() { each(L,nastav) }
      proc nastav (x,i) { x.chck.set(form.vse.get) }
    }
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t', value:'1' }
      label info [23,4,300,16] {style:'white-space:nowrap', format:'t'}
      var all: object
    }
  }
}
# ================================================================================> Vysvětlivky
panel Vysvetlivky [,,500,500] {type:'popup', title:'Vysvětlivky pro práci s kartou Pečouni'
  func show(topic) { var hlp:text
      h.hlp= php.select('help','ezer_answer._help',`topic='${topic}' AND kind='h'`);
      return(panel.modal(200,100,'',0,0,1));
  }
  use h:form {
    label hlp [0,0,*,*] { style:"overflow-x:auto;padding:0" css:'ContextHelp' }
  }
}
# ------------------------------------------------==> .. maps
map jidla= "i,zkratka,nazev;1:s:snídani,2:o:oběd,3:v:večeři" 
