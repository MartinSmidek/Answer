#pragma library
# ------------------------------------------------------------------------------------------------ #
# Modul pro Dům setkání                                                                            #
#                                                                                                  #
# Ans(w)er/Ezer                                          (c) 2024 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

# ======================================================================================> VYÚČTOVÁNÍ
form _vyuctovani [,,623,400] {
  const left_hos=200
  var mode='', // obj|pob   ... '' znamená neiniciovaný modul
    akce:object, id_akce:number, akce_od:text, akce_do:text, 
    udaje_pobyt: object,
    id_pobyt: number
  
  func start() { var pokoje:text
    pokoje= php.select1('GROUP_CONCAT(number)','tx_gnalberice_room',"version=1 AND hidden=0",'setkani');
    ds_pokoj.selects(conc('0,',sort(pokoje,',','n')));
  }
  func load_obj(ido) {
    if (!mode) start();
    mode= 'obj';
    clear();
    form.init();
    hos.browse_init();
    form.display(1,'p');
    pob.browse_load(`uid=${ido}`);
    akce= php.select_object('id_akce,kod_akce,od,do,note','objednavka',`id_order=${ido}`);
    akce_od= akce.od;
    akce_do= akce.do;
    akce_info= `<b>${sql2date(akce.od)} - ${sql2date(akce.do)} kód=${akce.kod_akce}</b>
        <br><br>${akce.note}`;
    pob.raise('onrowclick');
  }
  func load_pob(idp) { var x:object, fak:text
    if (!mode) start();
    mode= 'pob'; id_pobyt= idp;
    form.property({aside:-left_hos},'h');
    pob.browse_init();
    form.display(0,'p');
    id_akce= php.select('id_akce','pobyt',`id_pobyt=${idp}`);
    akce_od= php.select('datum_od','akce',`id_duakce=${id_akce}`);
    akce_do= php.select('datum_do','akce',`id_duakce=${id_akce}`);
    fak= php.select1("IFNULL(nazev,'')",'faktura',`id_pobyt=${idp} AND deleted='' `);
    vystavena= `<b>${fak}</b>`;
    hos.browse_load(`id_pobyt=${idp}`);
    pob.Load(idp);
  }
  func refresh(idp,ids) {
    switch (mode) {
      case 'obj': pob.browse_refresh(); 
        pob.browse_focus(idp); 
        pob.onrowclick();
        hos.browse_focus(ids); 
        hos.onrowclick();
        break;
      case 'pob': 
        hos.browse_refresh(); 
        hos.browse_focus(ids); 
        hos.onrowclick();
        pob.Load(id_pobyt);
        break;
    }
  }
  label akce_info [0,20,190,50] {tag:'p', title:'^parametry pobytu' }
  browse pob [0,80,,] { tag:'p', rows:10, key_id:'idp', 
      optimize:{ask:'dum_browse_order'}
    show idp
    show fak
    show nazev [,,60,] { title:'pobyt' }
    show cena [,,50,] { title:'cena', format:'r', css_cell:'pokoje,0:zluty'  }
    show cleni
    show nx [,,10,] { title:'*', format:'c' }
    show zaplaceno [,,50,] { title:'platba', format:'r' }
    show platby
//    show datum_od
//    show datum_do
    show pokoje
//    show vzorec
    func onrowclick() { 
//      clear();
      vystavena= `<b>${fak}</b>`;
      hos.browse_fill(cleni,'~');
      hos.onrowclick();
      form.platby= `${zaplaceno} = ${platby}`;
      id_pobyt= idp;
      Load(idp);
    }
    func Load(idp) { 
      udaje_pobyt= php.dum_browse_pobyt({cmd:'suma',cond:`id_pobyt=${idp}`});
//      echo(debug(udaje_pobyt,'udaje_pobyt'));
      vzorec_pob= udaje_pobyt.vzorec;
      copy_by_name(udaje_pobyt.abbr,form);
      celkem= udaje_pobyt.celkem;
    }
  }
  var zamek:number
  button zamek_ikona [left_hos+10,55,20,20] {tag:'h', title:'' 
    func onclick() { var curr_pobyt:number, curr_spolu:number
      if (mode=='obj') curr_pobyt= pob.idp;
      curr_spolu= hos.ids;
      zamek= !zamek;
      ds_vzorec.enable(!zamek);
      zamek_ikona= replace_fa(zamek ? '[fa-lock fa-red]' : '[fa-unlock]');
      js.set_elem_backround(&ds_vzorec,{background: zamek ? '#ff7777' : '#ffffff'});
      php.query(`UPDATE spolu SET ds_vzorec="${zamek?ds_vzorec:''}" WHERE id_spolu=${hos.ids}`);
      refresh(curr_pobyt,curr_spolu);
    }
  }
//  field key_spolu [left_hos+545,0,50,] {data:s.id_pobyt, format:'ro',
//    style:'color:white', css:'Label', help:' ', tabindex:0 }
  field vzorec_pob [left_hos+35,20,469,] {tag:'h', title:'^položky pro účtování ceny pobytu rodiny', format:'d' }
  field ds_vzorec [left_hos+35,55,469,] {tag:'h', title:'^položky pro účtování ceny pobytu hosta' }
  // úpravy řádku hostů
  func Ok(fld,val) { var ok:number
    ok= 1;
    if (hos.zamek_spolu) { alert('nelze měnit zamknutou cenu'); ok= 0; }
    echo(akce_od,'',val);
    if (ok && fld=='ds_od' && js.cmp(val,akce_od)<0) { 
      alert('příjezd před začátkem akce'); ok= 0; 
    }
    if (ok && fld=='ds_do' && js.cmp(val,akce_do)>0) { 
      alert('odjezd po ukončení akce'); ok= 0; 
    }
    if (!ok) hos.onrowclick();
    return ok;
  }
  func Update(fld,val,kazdy_clen) { var curr_pobyt:number, curr_spolu:number, cond:text
    if (!hos.browse_count()) return;
    if (hos.zamek_spolu) { alert('nelze měnit zamknutou cenu'); return; }
    cond= kazdy_clen ? `id_pobyt=${id_pobyt}` : `id_spolu=${hos.ids}`;
    php.query(`UPDATE spolu SET ${fld}="${val}" WHERE ${cond}`);
    if (mode=='obj') curr_pobyt= pob.idp;
    curr_spolu= hos.ids;
    refresh(curr_pobyt,curr_spolu);
  } 
  label [left_hos+565,58,100,] {tag:'h', title:'UPRAVIT'}
  select ds_pokoj [left_hos+565,81,40,] {tag:'h', help:'pokoj pro nastavenou osobu'
    func onchanged() { Update(this._id,this,0); php.dum_refresh_pokoj(id_pobyt); }}
  label [left_hos+607,86,50,] {tag:'h', title:'pokoj' }
  check kazdy [left_hos+565,101,100,] {tag:'h', title:'-"- každému', format:'t', help:'pokoj pro každou osobu'
    func onchange() { if (this) Update('ds_pokoj',ds_pokoj,1); php.dum_refresh_pokoj(id_pobyt); }}
  check ds_pristylka [left_hos+565,121,100,] {tag:'h', title:'přistýlka', help:'přidaná přistýlka'
    func onchange() { if (Ok(this._id,this)) Update(this._id,this,0) }}
  check ds_dotace [left_hos+565,154,100,] {tag:'h', title:'dotace', help:'bude započtena snížená cena'
    func onchange() { if (Ok(this._id,this)) Update(this._id,this,0) }}
  check ds_postylka [left_hos+565,174,100,] {tag:'h', title:'postýlka', help:'poplatek za půjčení'
    func onchange() { if (Ok(this._id,this)) Update(this._id,this,0) }}
  check ds_zvire [left_hos+565,194,100,] {tag:'h', title:'zvíře', help:'poplatek za noc zvířete'
    func onchange() { if (Ok(this._id,this)) Update(this._id,this,0) }}
  check ds_zdarma [left_hos+565,214,100,] {tag:'h', title:'zdarma', help:'lektor za akci nic neplatí'
    func onchange() { if (Ok(this._id,this)) Update(this._id,this,0) }}
  field ds_od [left_hos+565,244,85,] {tag:'h', type:'date', format:'r', title:'- příjezd', 
      help:'odlišné datum příjezdu'
    func onchanged() { var v:text v= date2sql(this); if (Ok(this._id,v)) Update(this._id,v,0) }}
  field ds_do [left_hos+565,269,85,] {tag:'h', type:'date', format:'r', title:'- odjezd', 
      help:'odlišné datum odjezdu'
    func onchanged() { var v:text v= date2sql(this); if (Ok(this._id,v)) Update(this._id,v,0) }}
  // seznam členů pobytu
  browse hos [left_hos+10,80,,] {tag:'h', rows:10, key_id:'ids', 
      optimize:{ask:'dum_browse_pobyt'}
    show ids
//    show fak
    show prijmeni [,,70,] { title:'příjmení', css_cell:'zamek_spolu,0:,1:cerveny' }
    show jmeno [,,40,] { title:'jméno', css_cell:'ds_dotace,0:,1:zeleny' }
    show vek [,,30,] { title:'věk', format:'c' }
    show noci [,,30,] { title:'noci', format:'c' }
    show ds_od
    show ds_do
    show ds_pokoj [,,30,] { title:'pok.', format:'c', css_cell:'ds_pokoj,0:zluty' }
    show ds_vzorec
    show ds_zdarma [,,20,] { title:'lektor', format:'c' }
    show ds_dotace [,,20,] { title:'dotace', format:'c' }
    show ds_pristylka [,,20,] { title:'přistýlka', format:'c' }
    show ds_postylka [,,20,] { title:'postýlka', format:'c' }
    show ds_zvire [,,20,] { title:'zvíře', format:'c' }
    show cena [,,50,] { title:'cena = ', format:'r' }
    show ubyt [,,40,] { title:'ubyt.', format:'r' }
    show str  [,,40,] { title:'str.', format:'r' }
    show popl [,,40,] { title:'popl.', format:'r' }
    show prog [,,40,] { title:'prog.', format:'r' }
    show zamek_spolu // fixovaný vzorec použitý místo spočítaného
    func onrowclick() {
      copy_by_name(&hos,form);
      kazdy= 0;
      ds_vzorec.enable(!zamek_spolu);
      zamek_ikona= replace_fa(zamek_spolu ? '[fa-lock fa-red]' : '[fa-unlock]');
      js.set_elem_backround(&form.ds_vzorec,{background: zamek_spolu ? '#ff7777' : '#ffffff'});
    }
  }
  check strucna[240,308, 60,] { tag:'h', title:'stručná', format:'t' }
  field celkem [430, 310, 50,] {tag:'h', title:'^CELKEM' format:'dr' }
  field ubyt   [490, 310, 50,] {tag:'h', title:'^ubytování' format:'dr' }
  field stra   [550, 310, 50,] {tag:'h', title:'^stravování' format:'dr' }
  field popl   [610, 310, 50,] {tag:'h', title:'^poplatek' format:'dr' }
  field prog   [670, 310, 50,] {tag:'h', title:'^program' format:'dr' }
  
  // rodinná faktura
  var faktura: object, fakt_num=0, fakt_zal= 0, fakt_vs='', fakt_ss='', fakt_kdo=''
  label vystavena [300,297,100,18] {tag:'h'}
  button [300,310,,] {tag:'h', title:'[fa-credit-card] Faktura za rodinu' 
    func onclick() { var udaje:object, uf:object, adresa:text, vyrizuje:text, nadpis:text, je:text
      clear();
      je= php.select('nazev','faktura',`id_pobyt=${id_pobyt} AND deleted='' `);
      if (je) {
        alert(`pro tento pobyt již byla vystavena faktura ${je} - opravit ji lze v záložce Faktury`);
        return;
      }
      vyrizuje= sys('user','options','vyrizuje');
      nadpis= `Za pobyt v Domě setkání ve dnech ${udaje_pobyt.oddo} Vám fakturujeme:`;
      udaje= php.dum_objednavka(udaje_pobyt.order); uf= udaje.fld;
      if (udaje_pobyt.neubytovani) {
        alert(`Fakturu není možné vystavit, protože hosté ${udaje_pobyt.neubytovani} nejsou ubytováni`); 
        return;
      }
      adresa= php.dum_spolu_adresa(hos.ids);
      faktura= php.dum_faktura({typ:3,show:1,save:1,strucna:strucna,vystavena:fdate('Y-m-d'),
          adresa:adresa,ds_vzorec:vzorec_pob,id_pobyt:udaje_pobyt.pobyt,
          oddo:udaje_pobyt.oddo,rok:udaje_pobyt.rok,id_order:udaje_pobyt.order,nadpis:nadpis,
          num:uf.fakt_num,ubyt_zal:0,stra_zal:0,vs:uf.fakt_num,ss:udaje_pobyt.pobyt,vyrizuje:vyrizuje});
      if (faktura.err) { alert(faktura.err); return }
      call_func(`$.${sys('root')}.A4.preview`,{html:faktura.html,ref:faktura.ref},
          {block:&this,func:'ulozeno',title:'[fa-save] Uložit mezi faktury a posunout číslování'});
    }
    func ulozeno() { var msg:text
      msg= php.dum_faktura_save(faktura);
      alert(`${msg}<br>K vytištění nebo poslání emailem je ${faktura.ref}
            <br>Je třeba ji poslat i našemu ekonomovi.`);
    }
  }
  field platby [340,340,525,] { tag:'h', title:'Platby: ', format:'o' }
}
# ======================================================================================> OBJEDNÁVKA
panel Objednavka [,,760,510] { type:'popup' title:"Objednávka pobytu v Domě setkání"
  func Delete(id_order) { 
    php.dum_objednavka_delete(id_order); // tvrdé smazání bez dotazu
  }
  func Show(ida) { 
    panel.title= `Objednávka a vyúčtování pobytu v Domě setkání`;
    obj.the_akce= ida;
    obj.the_order= php.dum_objednavka_akce(ida); //php.select('id_order','akce',`id_duakce=${ida}`);
    if (!obj.the_order) { alert(`Akce YMCA ještě není propojena s objednávkou`); return; }
    obj.load_objednavka(obj.the_order);
    obj.plain();
    panel.modal();
  }
  // zaregistruje funkci pro refresh po změně objednávky
  func RegRefresh(blok:ezer,fce:text) { obj.refresh_reg(blok,fce)} 
  use obj: form _obj
}

# ---------------------------------------------------------------==> objednavka
form _obj {
  const left_oso= 450, top_zal= 370, top_fakt= 410 // top_dan= 410, 
  var the_akce: number,
      //the_order: number, = field
      udaje: object,        // počítaná v obj.load_objednavka
      faktura: object,      // parametry pro fakturu
      doklad: object,       // parametry daňového dokladu
      objs_count: number,
      blok_fce= [0,'']      // slouží k volání blok_fce[0].call(blok_fce[1])
  // funkce
  func refresh_reg(blok:ezer,fce:text) { blok_fce= [blok,fce]; }
  func refresh() { js.call_block_method(blok_fce[0],blok_fce[1]); }
//  button [200,175,,] { title:'au?' func onclick() { refresh(); }}
  func load_objednavka(id_order) { var x:object
    form.key(id_order); // kvůli copy_by_name - viz jeho popis
    form.init(); plan.Init('plan'); stav.Init('stav');
    the_order= id_order; 
    udaje= php.dum_objednavka(id_order);
    the_akce= udaje.fld.id_akce;
    copy_by_name(udaje.fld,form,'',1); 
    copy_by_name(udaje.fld,plan,'',1); 
    copy_by_name(udaje.cena.rozpis,plan,'',1); 
    // označení objednaných pokojů
    js.rooms_check(plan.rooms1,plan,'q');
    helps();
    // vyúčtování celé objednávky
    vyuzito= 'Využito ... ' + (udaje.ucet.neubytovani 
      ? `<span style='background:yellow'>&nbsp; ${udaje.ucet.neubytovani} </span>&nbsp; nejsou ubytováni` 
      : '');
    js.rooms_check(udaje.ucet.pokoje,stav,'q');
    copy_by_name(udaje.ucet.hoste,stav,'',1); 
    copy_by_name(udaje.vyuziti,stav,'',1); 
    // a faktur
//    echo(debug(udaje.faktura,'udaje.faktura'));
    copy_by_name(udaje.faktura,form,'',1); 
    fakt_vyjimka.change();
    form.enable(0,'zal|dan|fakt|vyj|closed'); 
    plan.enable(0,'.*'); 
//    dan_send= 'Daňový doklad';
    if (udaje.faktura.fakt_idf==0 && udaje.faktura.vyj_idf==0) {
      // konečná faktura
      fakt_vystavena= now();
      fakt_num= udaje.fld.fakt_num;
      fakt_vs= udaje.fld.fakt_num;
      fakt_ss= id_order;
      fakt_zal_ubyt= zal_ubyt;
      fakt_zal_stra= zal_stra;
      fakt_castka= udaje.ucet.celkem2 - zal_ubyt - zal_stra; // po odečtení rodinných podfaktur a zálohy
      fakt_nadpis= `Za pobyt v Domě setkání ve dnech ${udaje.fld.oddo} Vám fakturujeme:`;
      form.enable(1,'fakt|closed'); 
      plan.enable(1,'.*'); 
      if (udaje.faktura.zal_idf==0) {
        // zálohová faktura
        zal_num= udaje.fld.zal_num;
        zal_vs= udaje.fld.zal_num;
        zal_ss= id_order;
        zal_castka= udaje.cena.celkem;
        form.enable(1,'zal'); 
      }
//      else { // byla vydána zálohová faktura
//        dan_num= udaje.fld.dan_num;
//        if (zal_zaplacena) {
//          dan_send.enable(1); 
//          dan_send= dan_vystavena 
//            ? '[fa-check] Daň.doklad odeslán' : '[fa-exclamation fa-red] Poslat daň.doklad';
//        }
//      }
    }
  }
  func helps() { var x:object, fld: ezer
    for (x of php.dum_rooms_help()) {
      fld= plan.part(x.fld);
      fld.help= x.hlp;                 // -- atribut nemůže být vlevo
      fld.enable(x.on);
    };
  }
  // položky 
  field access
  field the_order [0,15,50,] { tag:'obj', title:'^objednávka', format:'rd' }
  field nazev [60,15,268,] { tag:'obj', title:'^editovatelné upřesnění názvu ' }
  button [342,15,,] { title:'[fa-copy] Udělej kopii' 
    func onclick() { var obj: number
    clear();
    obj= the_order;
    if (!confirm(`Mám k objednávce ${obj} udělat kopii v nové akci? Bude mít prázdný seznam pobytů.`)) return;
    alert(php.dum_objednavka_clone(obj));
  }}
  select state [0,55,155,] {tag:'obj,closed', title:'^stav objednávky' type:'map', options:ds_stav.hodnota }
  field id_akce [162,55,38,] {tag:'obj,closed', title:'^akce YMCA', format:'r' }
  field od [214,55,85,] {tag:'obj,closed', title:'^příjezd', type:'date', format:'r' }
  field do [304,55,85,] {tag:'obj,closed', title:'^odjezd', type:'date', format:'r' }
  field noci [396,55,30,] {tag:'obj', title:'^nocí', format:'rd' }
  edit note [0,95,424,55] {tag:'obj', title:'^poznámka k pobytu' }

  select board [4,175,117,] {tag:'obj,closed', title:'^typ stravy' type:'map', options:ds_strava.hodnota }
  button [320,175,,] { tag:'obj', title:'[fa-save] Uložit změny' 
    func onclick() { var saved:object, elem:ezer, rooms:text
      if (objs_count>1 && (od.changed()||do.changed())) {
        // pokud již jsou hosté
        alert('pokud nastala změna v datu příjezdu či odjezdu je zapotřebí pobyt "osamostatnit"');
        return;
      }
      // kontrola konzistence mezi state=akce_YMCA a access=1
      saved= {};
      if (eq(state.key(),3,5) && access!=1) saved.access= 1;
      if (!eq(state.key(),3,5) && access!=64) saved.access= 64;
      // uložení ostatních položek
      rooms= js.dum_rooms_get(plan,'q');
      if (plan.rooms1!=rooms) saved.rooms1= rooms;
      copy_by_name(form,saved,'obj|adr',1); // vyber změněné 
      copy_by_name(plan,saved,'obj',1); // vyber změněné 
//      echo(debug(saved));
      if (array_length(saved)>0) {
        php.dum_objednavka_save(the_order,saved);
        refresh();
        load_objednavka(the_order);
      }
      else warning("nebyla provedena žádná změna")
  }}

  // objednáno a využito
  label [10,206,100,10] { title:'Objednáno ...' }  
  use plan: form _pokoje [0,220,,]
          
  label vyuzito [10,276,330,10] { title:'Využito ...' }  
  button [340,267,,] { tag:'fakt', title:'Oprava ubytování' 
    func onclick() { 
      if (confirm(`Mám "ubytovat" neubytované z objednávky ${the_order} na pokoj 25?`)) {
        alert(php.dum_pokoj_25(the_order));
        load_objednavka(the_order);
      }
  }}
  use stav: form _pokoje [0,290,,]
  
  // kontakt na objednatele
  field org   [left_oso+  0, 15,210,] { tag:'adr', title:'^název organizace (plátce faktury)' }
  field ic    [left_oso+220, 15, 80,] { tag:'adr', title:'^IČ' }
  field name [left_oso+  0, 55,120,] { tag:'adr', title:'^příjmení' }
  field firstname [left_oso+130, 55, 80,] { tag:'adr', title:'^jméno' }
  field dic   [left_oso+220, 55, 80,] { tag:'adr', title:'^DIČ' }
  field email [left_oso+  0, 95,210,] { tag:'adr', title:'^e-mail' }
  field telephone [left_oso+220, 95, 80,] { tag:'adr', title:'^telefon' }
  field address [left_oso+0,135,210,] { tag:'adr', title:'^ulice' }
  field zip   [left_oso+  0,175, 50,] { tag:'adr', title:'^psč' }
  field city  [left_oso+ 60,175,150,] { tag:'adr', title:'^obec' }
  
  button [left_oso+223,161,,] { title:'[fa-times fa-red] Smazat<br>objednávku?'
    func onclick() { var ret:object
    ret= php.dum_objednavka_safe_delete(the_order);
    if (ret.safe) {
      if (confirm(ret.msg)) {
        php.dum_objednavka_delete(the_order);
        refresh();
        alert("Objednávka byla smazána.")
      }
    }
    else alert(ret.msg);
  }}

  // parametry zálohy 
  field zal_idf
  field zal_vystavena [10,top_zal,90,] { tag:'zal', type:'date', 
      title:'^datum vystavení', format:'r'  }
  field zal_num [111,top_zal,40,] { tag:'zal', title:'^číslo faktury', format:'r'  }
  field zal_vs  [166,top_zal,50,] { tag:'zal', title:'^VS', format:'r'  }
  field zal_ss  [231,top_zal,33,] { tag:'zal', title:'^SS', format:'r'  }
  field zal_castka [280,top_zal,50,] { tag:'zal', title:'^odhad ceny', format:'r' }
  field zal_ubyt [347,top_zal,50,] { tag:'zal', title:'^záloha ubyt.', format:'r'  
    func onchange() { fakt_zal_ubyt= this; }
  }
  field zal_stra [415,top_zal,50,] { tag:'zal', title:'^záloha stravy', format:'r'  
    func onchange() { fakt_zal_stra= this; }
  }
  field zal_vyrizuje [481,top_zal,40,] { tag:'zal', title:'^kdo vyřizuje' }
  field zal_zaplacena [673,top_zal,90,] { tag:'zal', type:'date', sql_pipe:'sql_date1', 
      title:'^datum úhrady', format:'r'  }
  
  // zálohová faktura
  button [541,top_zal,,] { tag:'zal', title:'[fa-shopping-basket] Zálohová faktura' 
    func onclick() { var uf:object
      clear(); uf= udaje.fld;
      if (!(zal_ubyt+zal_stra)) {
        alert('Je zapotřebí stanovit výši zálohy'); return;
      }
      faktura= php.dum_faktura({typ:1,strucna:1,show:1,save:1,vystavena:zal_vystavena,
          adresa:udaje.adresa,ds_vzorec:udaje.vzorec_zal,
          ic:uf.ic,dic:uf.dic,oddo:uf.oddo,rok:uf.rok,
          id_order:uf.id_order,
          num:zal_num,ubyt_zal:zal_ubyt,stra_zal:zal_stra,vs:zal_vs,ss:zal_ss,vyrizuje:zal_vyrizuje});
      if (faktura.err) { alert(faktura.err); return }
      call_func(`$.${sys('root')}.A4.preview`,{html:faktura.html,ref:faktura.ref},
          {block:&this,func:'ulozeno',title:'[fa-save] Uložit mezi faktury a posunout číslování'});
    }
    func ulozeno() { var uf:object, msg:text
      clear(); uf= udaje.fld;
      msg= php.dum_faktura_save(faktura);
      alert(`${msg}<br>K vytištění nebo poslání emailem je ${faktura.ref}
            <br>Je třeba ji poslat i našemu ekonomovi.
            <hr>Jakmile bude záloha uhrazena, je zapotřebí ve Faktury vystavit "daňový doklad"`);
//      doklad= php.dum_faktura({typ:2,strucna:1,show:1,save:1,vystavena:'',
//          adresa:udaje.adresa,ds_vzorec:udaje.vzorec_zal,
//          ic:uf.ic,dic:uf.dic,oddo:uf.oddo,rok:uf.rok,id_order:uf.id_order,
//          num:dan_num,zaloha:zal_zaloha,vs:zal_vs,ss:zal_ss,vyrizuje:zal_vyrizuje});
//      msg= php.dum_faktura_save(doklad);
//      alert(`Byl také vytvořen daňový doklad, který je zapotřebí po zaplacení zálohové faktury, 
//              poslat plátci a našemu ekonomovi. Je dostupný mezi fakturami.`);
      load_objednavka(uf.id_order);
    }
  }

//  // parametry daňového dokladu
//  field dan_idf
//  field dan_num [111,top_dan,40,] { tag:'dan', title:'^číslo dokladu', format:'r'  }
//  field dan_vystavena [670,top_dan,90,] { tag:'dan', type:'date', title:'^datum odeslání', format:'r'}
//  button dan_send [544,top_dan,,] { tag:'zal', title:'[fa-exclamation fa-red] Daňový doklad' 
//    func onclick() { 
//      if (!zal_zaplacena) alert('lze provést až po zaplacení zálohy')
//      else { // fa-check 
//        
//      }
//    }
//  }

  // parametry vyúčování
  field fakt_idf
  field fakt_vystavena [10,top_fakt,90,] { tag:'fakt', type:'date', 
      title:'^datum vystavení', format:'r'  }
  field fakt_num [111,top_fakt,40,] { tag:'fakt', title:'^číslo faktury', format:'r' }
  field fakt_vs  [166,top_fakt,50,] { tag:'fakt', title:'^VS', format:'r'  }
  field fakt_ss  [231,top_fakt,33,] { tag:'fakt', title:'^SS', format:'r'  }
  field fakt_castka [280,top_fakt,50,] { tag:'fakt,-vyj', title:'^částka', format:'r' }
  field vyj_celkem [284,top_fakt,50,] { tag:'vyj', title:'^částka', format:'ron' }
  field fakt_zal_ubyt [347,top_fakt,50,] { tag:'fakt', title:'^záloha ubyt.', format:'ro'  }
  field fakt_zal_stra [415,top_fakt,50,] { tag:'fakt', title:'^záloha stravy', format:'ro'  }
  field fakt_vyrizuje [481,top_fakt,40,] { tag:'fakt', title:'^kdo vyřizuje' }
  check fakt_strucna [543,top_fakt+-20,59,] { tag:'fakt', title:'stručná' }
  field fakt_zaplacena [673,top_fakt,90,] { tag:'fakt', type:'date', title:'^datum úhrady', format:'r'}
  field fakt_nadpis  [10,top_fakt+70,450,] { tag:'fakt', title:'^řádek popisující účtovanou částku' }
  
  // konečná faktura
  button [543,top_fakt,,] { tag:'fakt', title:'[fa-credit-card] Konečná faktura' 
    func onclick() { var uf:object
      clear(); uf= udaje.fld;
      if (fakt_vyjimka) { // ds_vzorec má výjimečný formát: ubyt|strav|popl
        faktura= php.dum_faktura({typ:4,strucna:1,show:1,save:1,vystavena:fakt_vystavena,
            ubyt:vyj_ubyt,ubyt_zal:vyj_ubyt_zal,stra:vyj_stra,stra_zal:vyj_stra_zal,prog:vyj_prog,popl:vyj_popl,
            adresa:udaje.adresa,nadpis:fakt_nadpis,
            ic:uf.ic,dic:uf.dic,oddo:uf.oddo,rok:uf.rok,id_order:uf.id_order,
            num:fakt_num,vs:fakt_vs,ss:fakt_ss,vyrizuje:fakt_vyrizuje});
        if (faktura.err) { alert(faktura.err); return }
      }
      else {
        if (udaje.ucet.neubytovani) {
          alert(`Fakturu není možné vystavit, protože hosté ${udaje.ucet.neubytovani} nejsou ubytováni`); 
          return;
        }
        if ((fakt_zal_ubyt+fakt_zal_stra)>0 && !fakt_strucna) {
          alert(`Fakturu se zálohou je možné vystavit pouze jako stručnou.`); 
          return;
        }
        faktura= php.dum_faktura({typ:3,strucna:fakt_strucna,show:1,save:1,vystavena:fakt_vystavena,
            adresa:udaje.adresa,ds_vzorec:udaje.vzorec_fak,nadpis:fakt_nadpis,
            ic:uf.ic,dic:uf.dic,oddo:uf.oddo,rok:uf.rok,id_order:uf.id_order,
            num:fakt_num,ubyt_zal:fakt_zal_ubyt,stra_zal:fakt_zal_stra,vs:fakt_vs,ss:fakt_ss,vyrizuje:fakt_vyrizuje});
        if (faktura.err) { alert(faktura.err); return }
      }
      call_func(`$.${sys('root')}.A4.preview`,{html:faktura.html,ref:faktura.ref},
          {block:&this,func:'ulozeno',title:'[fa-save] Uložit mezi faktury a posunout číslování'});
    }
    func ulozeno() { var msg:text
      msg= php.dum_faktura_save(faktura);
      alert(`${msg}<br>K vytištění nebo poslání emailem je ${faktura.ref}
            <br>Je třeba ji poslat i našemu ekonomovi.`);
      load_objednavka(udaje.fld.id_order);
    }
  }
  // parametry výjimečného vyúčtování
  field vyj_idf
  func vyj_soucet() { 
    vyj_celkem= vyj_ubyt + vyj_stra + vyj_popl + vyj_prog + vyj_ubyt_zal + vyj_stra_zal; 
    if (vyj_ubyt_zal) fakt_zal_ubyt= vyj_ubyt_zal; 
    if (vyj_stra_zal) fakt_zal_stra= vyj_stra_zal; 
  }
  check fakt_vyjimka [600,top_fakt+-20,70,] { tag:'fakt', title:'výjimečná', format:'t' 
    func onchange() { 
      if (this) {
        form.display(1,'vyj'); form.display(0,'-vyj'); fakt_strucna= 1; form.enable(vyj_idf==0,'vyj'); 
      }
      else {
        form.display(0,'vyj'); form.display(1,'-vyj'); fakt_strucna= 0;
      }
  }}
  field vyj_ubyt_zal [354,top_fakt+40,50,] { tag:'vyj', title:'^záloha ubyt.', format:'rn' 
    func onchange() {vyj_soucet() }}
  field vyj_stra_zal [424,top_fakt+40,50,] { tag:'vyj', title:'^záloha stravy', format:'rn' 
    func onchange() {vyj_soucet() }}
  field vyj_ubyt   [491,top_fakt+40,50,] { tag:'vyj', title:'^ubytováni', format:'rn' 
    func onchange() {vyj_soucet() }}
  field vyj_stra   [561,top_fakt+40,50,] { tag:'vyj', title:'^stravu', format:'rn' 
    func onchange() {vyj_soucet() }}
  field vyj_popl   [631,top_fakt+40,50,] { tag:'vyj', title:'^popl. obci', format:'rn' 
    func onchange() {vyj_soucet() }}
  field vyj_prog   [701,top_fakt+40,50,] { tag:'vyj', title:'^program', format:'rn' 
    func onchange() {vyj_soucet() }}
# ---------------------------------------------------------------==> pokoje
  form _pokoje [,,750,40] { style:'border:1px solid grey'
//    func onchanged(x:ezer) { echo(`změna ${x._id}=${x.get()}`); }
    func Init(ps) {
      form.init();
      switch (ps) {
        case 'plan': form.display(0,'no'); form.enable(1,'obj|r'); break;
        case 'stav': form.display(1,'no'); form.set_css('notouch','','r|obj|comp|no'); break;
      }
    }
    // osoby
    field adults      [10,15,25,] {tag:'obj', title:'^dospělí, děti:', format:'c' }
    field kids_10_15  [69,15,23,] {tag:'obj', title:'^ 10+ ', format:'c' }
    field kids_3_9    [97,15,23,] {tag:'obj', title:'^  9-3 ', format:'c' }
    field kids_3      [124,15,23,] {tag:'obj', title:'^ 3- ', format:'c' }
    // strava - vypočítá se... v plan disabled
    field strava_CC [160,15,24,] {tag:'comp', title:'^penze', format:'c', help:'plná penze' }
    field strava_CD [190,15,24,] {tag:'comp', title:'^.../2', format:'c', help:'plná penze - dětská porce'  }
    field strava_PC [220,15,24,] {tag:'comp', title:'^polo.', format:'c', help:'polopenze'  }
    field strava_PD [250,15,24,] {tag:'comp', title:'^.../2', format:'c', help:'polopenze - dětská porce'  }
    // zvíře, postýlka, ... v plan hidden
    field zvire    [285,15,13,] {tag:'no', title:'^zvíře', format:'c', help:'příplatek za noc se zvířetem' }
    field postylka [312,15,13,] {tag:'no',  title:'^pos.', format:'c', help:'zapůjčení postýlky' }
    // pokoje
    const PL=340, QT=6
    field rooms1
    check   q1  [PL+  0, QT,14,] {tag:'r', title:'1',  format:'c', css:'CheckT' }
    check   q2  [PL+ 20, QT,14,] {tag:'r', title:'2',  format:'c', css:'CheckT' }
    check   q11 [PL+ 40, QT,14,] {tag:'r', title:'11', format:'c', css:'CheckT' }
    check   q12 [PL+ 60, QT,14,] {tag:'r', title:'12', format:'c', css:'CheckT' }
    check   q13 [PL+ 80, QT,14,] {tag:'r', title:'13', format:'c', css:'CheckT' }
    check   q14 [PL+100, QT,14,] {tag:'r', title:'14', format:'c', css:'CheckT' }
    check   q15 [PL+120, QT,14,] {tag:'r', title:'15', format:'c', css:'CheckT' }
    check   q16 [PL+140, QT,14,] {tag:'r', title:'16', format:'c', css:'CheckT' }
    check   q17 [PL+160, QT,14,] {tag:'r', title:'17', format:'c', css:'CheckT' }
    check   q21 [PL+180, QT,14,] {tag:'r', title:'21', format:'c', css:'CheckT' }
    check   q22 [PL+200, QT,14,] {tag:'r', title:'22', format:'c', css:'CheckT' }
    check   q23 [PL+220, QT,14,] {tag:'r', title:'23', format:'c', css:'CheckT' }
    check   q24 [PL+240, QT,14,] {tag:'r', title:'24', format:'c', css:'CheckT' }
    check   q25 [PL+260, QT,14,] {tag:'r', title:'25', format:'c', css:'CheckT' }
    check   q26 [PL+280, QT,14,] {tag:'r', title:'26', format:'c', css:'CheckT' }
    check   q27 [PL+300, QT,14,] {tag:'r', title:'27', format:'c', css:'CheckT' }
    check   q28 [PL+320, QT,14,] {tag:'r', title:'28', format:'c', css:'CheckT' }
    check   q29 [PL+340, QT,14,] {tag:'r', title:'29', format:'c', css:'CheckT' }
    check   q9  [PL+360, QT,14,] {tag:'r', title:'9',  format:'c', css:'CheckT' }
    check   q10 [PL+380, QT,14,] {tag:'r', title:'10', format:'c', css:'CheckT' }
  }
}
// <editor-fold defaultstate="collapsed" desc="# ==================================================================== form _right +++ tables, maps ">
  
# ===================================================================================> tabulky, mapy

table ds_cena {  db:'setkani', key_id:'id_cena'
  number id_cena
  number rok
  text polozka         { sql_pipe:'wu' }
  text druh            { sql_pipe:'wu' }
  text typ             { sql_pipe:'wu' }
  number od
  number do
  number cena
  number dph
}
table tx_gnalberice_room { db:'setkani', key_id:'uid'
  number uid
  number deleted
  number hidden
  number number
  text   category
  number bads
  number addbeds
  number etage
  text   note         { sql_pipe:'wu' }
}
table tx_gnalberice_order { db:'setkani', key_id:'uid'
  number uid
  number crdate       { sql_pipe:'stamp_date' }
  number deleted
  number hidden
  text   name         { sql_pipe:'wu' }
  number room
  number fromday      { sql_pipe:'stamp_date' }
  number untilday     { sql_pipe:'stamp_date' }
  number confirmed
  number state
  number akce         { help:"akce|číslo akce z číselníku akcí" }
  text   note         { sql_pipe:'wu' }
  text   rooms        { sql_pipe:'wu' }
  text   rooms1       { sql_pipe:'wu' }
  number adults       { help:'?|počet dospělých podle objednávky' }
  number kids_10_15   { help:'?|počet dětí ve věku 10-18 let podle objednávky' }
  number kids_3_9     { help:'?|počet dětí ve věku 3-9 let podle objednávky' }
  number kids_3       { help:'?|počet dětí do 3 let podle objednávky' }
  number board
  number prog_cely
  number prog_polo
  text   address      { sql_pipe:'wu' }
  text   zip
  text   city         { sql_pipe:'wu' }
  text   telephone
  text   email
  number fe_user_id
  // přidané polozky
  text   firstname    { sql_pipe:'wu' }
  text   org          { sql_pipe:'wu' }
  number ic
  text   dic
  number ucast        // 1 => účastní se pobytu
  number sleva        { help:'%|případná sleva v procentech' }
  number skoleni      // 1 => školení, neplatí se rekreační poplatek
//  text   ds_vzorec
}
table _cis { key_id:'id_cis'
# --------------------------------------------------------------------------------==> číselníky,mapy
  number id_cis, text druh, text data, text hodnota, text zkratka, number poradi, text barva, text ikona
}
# --------------------------------------------------------------------------------==> mapy
map ds_stav:   table _cis {where:"druh='ds_stav'", order:'poradi', key_id:'data'}
map ds_strava: table _cis {where:"druh='ds_strava'", order:'poradi', key_id:'data'}
map ds_luzko:  table _cis {where:"druh='ds_luzko'", order:'poradi', key_id:'data'}
// </editor-fold>
