# ------------------------------------------------------------------------------------------------ #
# Systém Ans(w)er - modul Dům setkání - verze 2                                                    #
#                                                                                                  #
#                                                   (c) 2008-2020 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

var the_order: number

proc order_load (ord) {
  the_order.set(ord); precti; compare
}
proc show_order (ord) {
  the_order.set(ord); order_load(ord)
}

menu mo {type:'left'
  proc onclick(x) { show_order(x.par.uid) }
}
proc onstart() {
  var mn: object
  mn.set(ask('ds_obj_menu','202001,202006')); //debug(mn.get);
  mo.attach_code(mn.cd.get);
  Upravy.Init;
  mo.part(mn.th.get).click(1);
  page.ucast.onclick;
}

// zobrazení objednávky
proc precti  {
  obj.load(the_order.get);
  popis.tit.set(conc('<h3>Objednávka číslo ',the_order.get,
      cconc(obj.deleted.get,' -- je smazaná!'),'</h3>')); 
  obj.deleted.get; fak.init; obj.init
| fak.load(the_order.get); fak.faktura.display(0); cti(obj.rooms1.get)
}
// účast objednatele na pobytu
proc objednavatel_save() {
  fak.save; fak.load;
  obnova; compare
}
// vystavení zálohy na objednávku
proc make_zaloha () {
  fak.faktura.set(ask('ds_xls_zaloha',the_order.get)); fak.faktura.display(1)
}
// vystavení faktur pro rodiny na objednávce
proc make_faktury () {
  fak.faktura.set(ask('ds_xls_faktury',the_order.get)); fak.faktura.display(1)
}
// porovnání objednávky se seznamem účastníků
var comp: text
var fields: text
proc compare () {
  comp.set(ask('ds_compare',the_order.get));
  form_set(obj.get,comp.get('form')); obj.info.set(comp.get('html'))
}
# =========================================================================================> záložky
const PQ=50             // posun pro nové pokoje
//group pobyt {

use page:   form _page    [ 10, 10,,] 
use popis:  form _objed1  [ 10, 20,,] { tag:'objed' format:'n' }
use obj:    form _objed   [ 20, 50,,] { tag:'objed' format:'n' }
use fak:    form _fakt    [410, 50,,] { tag:'objed' format:'n' }

use popis2: form zahlavi2 [ 10, 20,,] { tag:'ucast' format:'n' }
use akc:    form _akce    [ 20, 60,,] { tag:'ucast' format:'n' }
use osoba:  form _osoba   [410, 60,,] { tag:'ucast' format:'n' }
use kniha:  form _kniha   [ 20,380,,] { tag:'ucast' format:'n' }

use ucet:   form _kniha   [ 20, 50,,] { tag:'ucet' format:'n' }

# -----------------------------------------------------------------------------------------==> _page
# formulář se záložkami
form _page {
  proc start() { cvak(objed) } // inicializace - zobrazení první záložky
  # ------------------------- obsluha záložek
  proc cvak(i) {
    form.set_css('ae_butt_off','ae_butt_on','_'); i.set_css('ae_butt_on','ae_butt_off');
    panel.display(0,i.par.off); panel.display(1,i.par.on)
  }
  # ------------------------- záložky - v par jsou tagy pro zapnutí vypnutí elementů
  label objed [ 12,0,100,20] { tag:'_' title:'<b>Objednávka</b>', par:°{on:'objed',off:'ucast|ucet'}
    proc onclick() { cvak(this) } }
  label ucast [132,0,100,20] { tag:'_' title:'<b>Účastníci</b>', par:°{on:'ucast',off:'objed|ucet'}
    proc onclick() { cvak(this) } }
  label ucet  [252,0,100,20] { tag:'_' title:'<b>Vyúčtování</b>', par:°{on:'ucet',off:'objed|ucast'}
    proc onclick() { cvak(this) } }
  # ------------------------- pozadí pro elementy musí být před obsahem záložek
  label frame [0,16,717,480] { css:'ae_work'}
}

# ======================================================================================> OBJEDNÁVKA
form _objed1 [,,600,30] { css:'ds_form'
  label tit [ 10,  0,300,] { title:'<h3>Objednávka pobytu</h3>' }
  label [400,  0,300,] { title:'<h3>Fakturační adresa objednavatele</h3>' }
}
// ------------------------------------------------------------------==> data objednávky
form _objed { css:'ds_form'
  const PL=0; PT=92; QT=PT+PQ-4; FT=120+PQ
  field deleted { data:tx_gnalberice_order.deleted }
  select      [  0, 15,120,] { title:'^stav objednávky' type:'map', data:tx_gnalberice_order.state, options:ds_stav.hodnota }
  field       [130, 15, 40,] { title:'^akce YS' data:tx_gnalberice_order.akce, format:'r' }
  edit        [180,15,164,57] { title:'^poznámka k objednávce' data:tx_gnalberice_order.note  }
  field       [  0, 55, 85,] { title:'^příjezd' type:'date', data:tx_gnalberice_order.fromday }
  field       [ 90, 55, 85,] { title:'^odjezd' type:'date', data:tx_gnalberice_order.untilday }
  check skoleni [218,72,65,9] { title:'školení', data:tx_gnalberice_order.skoleni, value:'0', help:"účastníci školení neplatí rekreační poplatek" }
  field sleva [321,79,20,] { title:'sleva' data:tx_gnalberice_order.sleva, format:'r' }
  label       [346,79,5,] { title:'%' }
  // staré pokoje
  label       [  0,PT-14,150,] { title:'staré pokoje:' }
  check   p1  [PL+  0, PT,14,] { title:'1',  format:'c', css:'CheckT', help:"1 - 2 lůžka jednoduchá (V podkrovní pokojíček se střešním oknem)" }
  check   p2  [PL+ 20, PT,14,] { title:'2',  format:'c', css:'CheckT', help:"2 - 2 lůžka jako patrová postel (V pokojíček vedle sprchy, má svoje umyvadlo)" }
  check   p3  [PL+ 40, PT,14,] { title:'3',  format:'c', css:'CheckT', help:"3 - 2 lůžka jednoduchá (JZ pokojíček v rohu)" }
  check   p4  [PL+ 60, PT,14,] { title:'4',  format:'c', css:'CheckT', help:"4 - 2 lůžka jednoduchá a 2 lůžka jako patrová postel (Z pokoj se dvěma okny)" }
  check   p5  [PL+ 80, PT,14,] { title:'5',  format:'c', css:'CheckT', help:"5 - 1 lůžko jednoduché a 2 lůžka jako patrová postel (Z pokoj s jedním oknem)" }
  check   p6  [PL+100, PT,14,] { title:'6',  format:'c', css:'CheckT', help:"6 - 2 lůžka jednoduchá a 4 lůžka jako patrová postel (S pokoj velký)" }
  check   p7  [PL+120, PT,14,] { title:'7',  format:'c', css:'CheckT', help:"7 - palanda a lůžko, nový pokoj vedle koupelny" }
  check   p8  [PL+140, PT,14,] { title:'8',  format:'c', css:'CheckT', help:"8 - komfortní pokoj se sprchou a WC, dvoulůžko" }
  check   p9  [PL+160, PT,14,] { title:'9',  format:'c', css:'CheckT', help:"9 - komfortní pokoj se sprchou a WC, dvoulůžko" }
  check   p10 [PL+180, PT,14,] { title:'10', format:'c', css:'CheckT', help:"10 - 2 postele jednoduché (Z pokoj mezi kaplí a sprchami)" }
  check   p11 [PL+200, PT,14,] { title:'11', format:'c', css:'CheckT', help:"11 - 2 jednoduché postele a 2 patrové postele a 1 rozkládací gauč (S pokoj velký)" }
  check   p12 [PL+220, PT,14,] { title:'12', format:'c', css:'CheckT', help:"12 - 4 lůžka jednoduchá (SZ pokoj s vlastním umyvadlem a el.průtokovým ohřívačem)" }
  check   p13 [PL+240, PT,14,] { title:'13', format:'c', css:'CheckT', help:"13 - komfortní pokoj se sprchou a WC, 2 samostatné postele" }
  check   p14 [PL+260, PT,14,] { title:'14', format:'c', css:'CheckT', help:"14 - komfortní pokoj se sprchou a WC, 2 samostatné postele" }
  check   p15 [PL+280, PT,14,] { title:'15', format:'c', css:'CheckT', help:"15 - apartmán; 2 místnosti a sociálka bezbariérová: 2 lůžka jednoduchá" }
  check   p16 [PL+300, PT,14,] { title:'16', format:'c', css:'CheckT', help:"16 - apartmán; 2 místnosti a sociálka bezbariérová: 1 lůžko jednoduché a 2 lůžka jako patrová postel" }
  // nové pokoje
  label       [0,QT+-14,356,42] { title:'nové pokoje:', css:'jemna' }
  check   q1  [PL+  0, QT,14,] { title:'1',  format:'c', css:'CheckT' }
  check   q2  [PL+ 20, QT,14,] { title:'2',  format:'c', css:'CheckT' }
  check   q11 [PL+ 40, QT,14,] { title:'11', format:'c', css:'CheckT' }
  check   q12 [PL+ 60, QT,14,] { title:'12', format:'c', css:'CheckT' }
  check   q13 [PL+ 80, QT,14,] { title:'13', format:'c', css:'CheckT' }
  check   q14 [PL+100, QT,14,] { title:'14', format:'c', css:'CheckT' }
  check   q15 [PL+120, QT,14,] { title:'15', format:'c', css:'CheckT' }
  check   q16 [PL+140, QT,14,] { title:'16', format:'c', css:'CheckT' }
  check   q17 [PL+160, QT,14,] { title:'17', format:'c', css:'CheckT' }
  check   q21 [PL+180, QT,14,] { title:'21', format:'c', css:'CheckT' }
  check   q22 [PL+200, QT,14,] { title:'22', format:'c', css:'CheckT' }
  check   q23 [PL+220, QT,14,] { title:'23', format:'c', css:'CheckT' }
  check   q24 [PL+240, QT,14,] { title:'24', format:'c', css:'CheckT' }
  check   q25 [PL+260, QT,14,] { title:'25', format:'c', css:'CheckT' }
  check   q26 [PL+280, QT,14,] { title:'26', format:'c', css:'CheckT' }
  check   q27 [PL+300, QT,14,] { title:'27', format:'c', css:'CheckT' }
  check   q28 [PL+320, QT,14,] { title:'28', format:'c', css:'CheckT' }
  check   q29 [PL+340, QT,14,] { title:'29', format:'c', css:'CheckT' }

  label       [344,101,5,] { title:'?' }
  field noroom [PL+324,PT+9,17,] { format:'or:e', help:'?|počet neubytovaných podle seznamu' }
  field rooms0  { data:tx_gnalberice_order.rooms }
  field rooms1 { data:tx_gnalberice_order.rooms1 }

  label       [0,FT+0,50,] { title:'dospělí' }
  field       [0,FT+15,17,] { data:tx_gnalberice_order.adults, format:'r:e'}
  field adults [24,FT+16,17,] { format:'or:e', help:'?|počet dospělých podle seznamu' }
  label       [50,FT+0,55,] { title:'děti 10-15' }
  field       [54,FT+15,17,] { data:tx_gnalberice_order.kids_10_15, format:'r:e' }
  field kids_10_15 [78,FT+16,17,] { format:'or:e', help:'?|počet dětí podle seznamu' }
  label       [110,FT+0,45,] { title:'děti 3-9' }
  field       [111,FT+15,17,] { data:tx_gnalberice_order.kids_3_9, format:'r:e' }
  field kids_3_9 [135,FT+16,17,] { format:'or:e', help:'?|počet dětí ve věku 3-9 let podle seznamu' }
  label       [165,FT+0,50,] { title:'děti do 3' }
  field       [165,FT+15,17,] { data:tx_gnalberice_order.kids_3, format:'r:e' }
  field kids_3 [190,FT+16,17,] { format:'or:e', help:'?|počet dětí do 3 let podle seznamu'  }
  label       [220,FT+0,17,] { title:'??' }
  field nevek [220,FT+15,17,] { format:'or:e', help:'?|počet osob v seznamu bez udaného věku' }
  select      [250,FT+15,100,] { title:'^typ stravy' type:'map', data:tx_gnalberice_order.board, options:ds_strava.hodnota }
  button save_pobyt [249,FT+71,,] { title:'zapsat změny', type:'submit' 
    proc onclick() {
      form.save; order_load(the_order.get)
  }}
  label info  [1,FT+39,238,53] { title:'' }
  label       [239,FT+36,128,] { title:'program: dospělý / dítě' }
  field prog_cely [251,FT+49,30,] { data:tx_gnalberice_order.prog_cely, format:'r', help:'cena programu na akci pro dospělého' }
  label       [290,FT+50,5,] { title:'/' }
  field prog_dite [302,FT+49,30,] { data:tx_gnalberice_order.prog_polo, format:'r', help:'cena programu na akci pro dítě' }
  label       [338,FT+49,5,] { title:'Kč' }
  proc onload () { rooms_check(rooms0,form,'p'); rooms_check(rooms1,form,'q') }
  proc onsave () { check_rooms(rooms0,form,'p'); check_rooms(rooms1,form,'q') }
  proc onstart() { foreach(ask('ds_rooms_help'),set_help_enable) }
  proc set_help_enable(x) { 
    form.part(x.fld).set_attrib('help',x.hlp);
    form.part(x.fld).enable(x.on);
  }
}
// ------------------------------------------------------------------==> objednatel
form _fakt { css:'ds_form'
  field       [  0, 15,210,] { title:'^název organizace (plátce faktury)' data:tx_gnalberice_order.org }
  field       [220, 15, 80,] { title:'^IČ' data:tx_gnalberice_order.ic }
  field       [  0, 55,120,] { title:'^příjmení' data:tx_gnalberice_order.name }
  field       [130, 55, 80,] { title:'^jméno' data:tx_gnalberice_order.firstname }
  field       [220, 55, 80,] { title:'^DIČ' data:tx_gnalberice_order.dic }
  field       [  0, 95,210,] { title:'^e-mail' data:tx_gnalberice_order.email  }
  field       [220, 95, 80,] { title:'^telefon' data:tx_gnalberice_order.telephone}
  field       [0,135,210,] { title:'^ulice' data:tx_gnalberice_order.address }
  field       [  0,175, 50,] { title:'^psč' data:tx_gnalberice_order.zip}
  field       [ 60,175,150,] { title:'^obec' data:tx_gnalberice_order.city}
  label faktura [223,117,120,] { title:'...' }
  button      [220,132,,] { title:'vystavit zálohu'  proc onclick() { make_zaloha } }
  button      [220,159,,] { title:'vystavit faktury' proc onclick() { make_faktury } }
  button      [220,185,,] { title:'zapsat změny'     proc onclick() { objednavatel_save } }
}

# =======================================================================================> ÚČASTNÍCI
// zobrazení účastníků akce a volba jejich položek
// vnější proměnná the_order obsahuje číslo objednávky

proc cti (pokoje) {
  osoba.init;
  osoba.spokoj.selects(conc('0,',sort(pokoje,',','n')));
  akc.seznam.browse_load(conc('id_order=',the_order.get));
  akc.seznam.raise('onrowclick')
}
// obnoví seznam po vnější změně
proc obnova {
  akc.seznam.browse_seek
}
# ------------------------------------------------------------------==> záhlaví
form zahlavi2 [,,600,30] { css:'ds_form'
  label [ 10,20,300,] { title:"<h3 style='margin:0'>Seznam účastníků pobytu</h3>"  }
  label [400,20,300,] { title:"<h3 style='margin:0'>Údaje vybraného účastníka</h3>" }
  button [196,14,,] { title:'Načtení akce YMCA Setkání'
    proc onclick() { var ret:object
      ret.set(ask('ds_import_ys',the_order.get));
      [ ret.conf; confirm(ret.conf); 
        ret.set(ask('ds_import_ys',the_order.get,1)) 
      ];
      alert(ret.html);
      akc.seznam.browse_refresh;
  }}
}
# ------------------------------------------------------------------==> AKCE
form _akce { css:'ds_form'
  button [  0,0,,] { title:'+ rodina', help:'výběr rodiny z databází MS'
    proc onclick () { Rodina.PridejRodinu } }
  button [ 72,0,,] { title:'+ hosté', help:'výběr hostů z objednávek DS'
    proc onclick () { Rodina.PridejKlienta } }
  button [138,0,,] { title:'+ 1 účastník', help:'přidání zcela nového hosta'
    proc onclick () { osoba_new} }
  button [230,0,,] { title:'+ dítě', help:'přidání hosta se stejným příjmením a bydlištěm'
    proc onclick () { osoba_new_child} }
  button [287,0,,] { title:'- účastník', help:'odebrání hosta označeného oranžovou šipkou'
    proc onclick () { osoba_del(seznam.id_osoba.get)} }
  browse seznam [0,30,,] { type:'smart', rows:14, //css_rows:'ys_osoba,0:nic,:zelenkavy'
    show rodina [,,24,] { title:'rod', data:ds_osoba.rodina, format:'s+' }
    show prijmeni [,,69,] { title:'příjmení', data:ds_osoba.prijmeni, format:'s' }
    show jmeno    [,,49,]  { title:'jméno', data:ds_osoba.jmeno, format:'s' }
    show vek  [,,19,]  { title:'věk',
      expr:"if(ds_osoba.narozeni,year(now())-year(ds_osoba.narozeni),'??')", format:'r' }
    show pokoj [,,19,]  { title:'P',
      data:ds_osoba.pokoj, format:'rs:e' }  // :e zobrazí 0 jako nic
    show [,,19,]  { title:'L',
      data:ds_osoba.luzko, map_pipe:ds_luzko.zkratka, format:'rs' }
    show [,,19,]  { title:'p',
      data:ds_osoba.postylka, format:'rs:e' }
    show [,,19,]  { title:'S',
      data:ds_osoba.strava, map_pipe:ds_strava.zkratka, format:'rs' }
    show [,,34,]  { title:'od', data:ds_osoba.fromday, format:'rs:d.m' }
    show pob_until [,,34,]  { title:'do', data:ds_osoba.untilday, format:'rs:d.m' }
    show pob_pozn [,,19,]  { title:'?', data:ds_osoba.pozn, format:'ts' }
    // nezobrazené
    show id_osoba { data:ds_osoba.id_osoba }
    show ulice { data:ds_osoba.ulice }
    show psc { data:ds_osoba.psc }
    show obec { data:ds_osoba.obec }
    proc onrowclick() { var x:object
      osoba_load(id_osoba.get); 
      kniha.kniha_load(id_osoba.get); 
    } 
  }
}
# ====================================================================> Rodina
panel Rodina [,,320,300] { type:'popup'
  var novi: object
  proc PridejRodinu() {
    fl.rodiny.display(1); fl.klienti.display(0);
    panel.set_attrib('title','Výběr rodiny z databází Setkání a Familia');
    novi.set(Rodina.modal(550,250)); 
  }
  proc PridejKlienta() {
    fl.rodiny.display(0); fl.klienti.display(1);
    panel.set_attrib('title','Výběr osob z databáze Domu setkání');
    novi.set(Rodina.modal(550,250)); 
  }
  use fl: form _fl [12,10,,]
  form _fl [,,300,200] {
    var last: number
    var rod: object
    var popis: text
    field znacka [0,225,50,16]
    label [55,225,300,16] {title:'značka rodiny na fakturách (bude bez diakritiky)'}
    button [0,250,,] { title:'přidat do účastníků', proc onclick() {
      znacka_rodiny.set(ask('cz2ascii',znacka.get));
      rodina_add(L) } }
    button [130,250,,] { title:'jiná rodina', proc onclick() {
      rodiny.init; klienti.init; vse.init; znacka.init; L.init } }
    button [220,250,,] { title:'konec', proc onclick() {
      rodiny.init; klienti.init; vse.init; znacka.init; L.init; panel.hide(0) } }
    // výběr z databáze MS
    select rodiny [100,0,200,17] { type:'auto', par:°{fce:'lide_ms'}, format:'t'
      proc onchanged() {
        rod.set(ask('rodina',this.key));
        znacka.init;
        each(rod.get,rodina); // nesmí volat asynchronní oosobaace
        znacka.set(ask('cz2ascii',znacka.get))
      }
    }
    // výběr z databáze DS
    select klienti [100,0,200,17] { type:'auto', par:°{fce:'lide_ds'}, format:'t'
      proc onchanged() {
        rod.set(ask('klienti',this.key));
        znacka.init;
        each(rod.get,rodina); // nesmí volat asynchronní oosobaace
        znacka.set(ask('cz2ascii',znacka.get))
      }
    }
    // procedury
    proc rodina(p,i) {
      last.set(L.add);
      [ eq(znacka.get,''); znacka.set(substr(p.prijmeni,0,3)) ];
      popis.set(conc(p.prijmeni,' ',p.jmeno,', ',p.mesto,', ',p.stari));
      L.part(last.get).part('info').set(popis.get);
      L.part(last.get).part('all').set(p);
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t' 
      proc onchange() { each(L,nastav) }
      proc nastav (x,i) { x.chck.set(form.vse.get) }
    }
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t' }
      label info [23,4,300,16] {style:'white-space:nowrap'}
      var all: object
    }
  }
  // ==> přidání rodiny
  var znacka_rodiny: text
  proc rodina_add(seznam) {
    each(seznam,rodina_add1);
  }
  var pall: object
  proc rodina_add1(p,i) {
    p.chck.get; //echo("rodina=",p.info.get);
    pall.set(p.all.get); //echo('-----------------',pall.get('jmeno'));
    osoba.init;
    osoba.id_order.set(the_order.get);            osoba.id_order.change;
    osoba.rodina.set(znacka_rodiny.get);          osoba.rodina.change;
    osoba.jmeno.set(pall.get('jmeno'));           osoba.jmeno.change;
    osoba.prijmeni.set(pall.get('prijmeni'));     osoba.prijmeni.change;
    osoba.ulice.set(pall.get('ulice'));           osoba.ulice.change;
    osoba.psc.set(pall.get('psc'));               osoba.psc.change;
    osoba.obec.set(pall.get('mesto'));            osoba.obec.change;
    osoba.telefon.set(pall.get('telefon'));       osoba.telefon.change;
    osoba.email.set(pall.get('email'));           osoba.email.change;
    osoba.narozeni.set(pall.get('narozeni'));     osoba.narozeni.change;
    osoba.insert;
    akc.seznam.browse_seek(conc('id_osoba=',osoba.key));
    akc.seznam.browse_focus; compare
  }
}
# ------------------------------------------------------------------==> OSOBA
# zobrazení účastníka
proc osoba_load (id_osoba) {
  osoba.load(id_osoba);
  osoba.spokoj.selects(conc('0,',sort(obj.rooms1.get,',','n')));
  osoba.spokoj.set(akc.seznam.pokoj.get)
}
# ==> přidání osoby
proc osoba_new {
  osoba.init; osoba.id_order.set(the_order.get); osoba.id_order.change;
  osoba.insert;
  akc.seznam.browse_seek(conc('id_osoba=',osoba.key));
  akc.seznam.browse_focus; compare
}
# ==> vložení nového dítěte účastníka
proc osoba_new_child () {
  osoba.init;
  osoba.id_order.set(the_order.get);            osoba.id_order.change;
  osoba.rodina.set(akc.seznam.rodina.get);      osoba.rodina.change;
  osoba.prijmeni.set(akc.seznam.prijmeni.get);  osoba.prijmeni.change;
  osoba.ulice.set(akc.seznam.ulice.get);        osoba.ulice.change;
  osoba.psc.set(akc.seznam.psc.get);            osoba.psc.change;
  osoba.obec.set(akc.seznam.obec.get);          osoba.obec.change;
  osoba.insert;
  akc.seznam.browse_seek(conc('id_osoba=',osoba.key));
  akc.seznam.browse_focus; compare
}
# ==> zápis opravy účastníka
proc osoba_save {
  osoba.rodina.set(ask('cz2ascii',osoba.rodina.get)); osoba.rodina.change;
  osoba.save; osoba.load; akc.seznam.browse_seek;
  akc.seznam.browse_focus; compare
}
# ==> zrušení účastníka
proc osoba_del (id_osoba) {
  confirm('Opravdu smazat ',akc.seznam.prijmeni.get,' ',akc.seznam.jmeno.get,' ze seznamu?');
  ds_osoba.delete_record(conc('id_osoba=',id_osoba));
  akc.seznam.browse_load(conc('id_order=',the_order.get));
  akc.seznam.browse_focus; compare
}
form _osoba /*[,,300,100]*/ { css:'ds_form'
  field id_osoba { data:ds_osoba.id_osoba }
  field id_order { data:ds_osoba.id_order }
  field oprava { data:ds_osoba.oprava }
  // zobrazení
  field rodina   [  0, 15, 40,] { title:'^rodina' data:ds_osoba.rodina }
  field prijmeni [ 50, 15, 70,] { title:'^příjmení' data:ds_osoba.prijmeni }
  field jmeno [130, 15, 80,] { title:'^jméno' data:ds_osoba.jmeno }
  field narozeni [220,15,86,] { title:'^narozen/a' type:'date', data:ds_osoba.narozeni }
  field email [  0, 55,210,] { title:'^e-mail' data:ds_osoba.email  }
  field telefon [220, 55, 80,] { title:'^telefon' data:ds_osoba.telefon}
  field ulice [  0, 95,210,] { title:'^ulice' data:ds_osoba.ulice}
  field psc   [  0,135, 50,] { title:'^psč' data:ds_osoba.psc
    proc onchanged() { this.let(replace(this.get,' ','')) }
  }
  field obec [ 60,135,150,] { title:'^obec' data:ds_osoba.obec}
  label       [  0,160,300,] { title:'--- <i>upřesnění údajů o pobytu</i>' }
  select spokoj [  0,190, 50,] { title:'^pokoj' data:ds_osoba.pokoj, format:':e' }
  select luzka [ 60,190,150,] { title:'^typ lůžka' type:'map', data:ds_osoba.luzko, options:ds_luzko.hodnota }
  check postylka [220,180,150,] { title:'postýlka', css:'CheckT', data:ds_osoba.postylka }
  field       [  0,230,210,] { title:'^poznámka' data:ds_osoba.pozn }
  button      [220,229,,] { title:'zapsat změny' proc onclick() { 
    osoba_save 
  }}
  // specifické údaje
  button [220,95,,] { title:'Init'  proc onclick() {
    Upravy.Init
  }}
  button [220,120,,] { title:'Load'  proc onclick() {
    Upravy.Load(id_order.get,id_osoba.get)
  }}
  label       [0,255,330,] { title:'--- <i>údaje o pobytu (pokud se liší od údajů v objednávce)</i> ---' }
  field   od  [0,287,83,] { title:'^příjezd' type:'date', data:ds_osoba.fromday }
  field   do  [90,287,83,] { title:'^odjezd' type:'date', data:ds_osoba.untilday }
  select      [181,287,133,] { title:'^typ stravy' type:'map', data:ds_osoba.strava, options:ds_strava.hodnota }
}
// ==================================================================================> ÚPRAVY CENÍKU
panel Upravy [,,350,400] { type:'popup' title:"Účtované položky z ceníku"
  use c: form _c
  var n= 0, 
      polozky: object,
      oprava: text
  proc Init() { var ceny:array
    ceny.set(ask('ds_cenik_list'));
    kniha.cenik_roku.set(ceny.cenik_roku);
    foreach(ceny.list,Init_do);
  }
  proc Init_do(a) { 
    n.set(c.L.add);
    c.L.part(n.get).part('typ').set(a.typ);
    c.L.part(n.get).part('nazev').set(a.txt);
  }
  proc Load(order,host) { 
    polozky.set(ask('ds_cenik_list',kniha.cenik_roku.get,order,host));
    polozky.get('err'); alert(polozky.get('err'))
  | c.celkem.set(polozky.get('cen.celk'));
    c.za.set(conc('Kč za pobyt hosta ',osoba.prijmeni.get,' ',osoba.jmeno.get));
    foreach(c.L,Load_do);
    Suma; c.celkem.plain;
    panel.modal;
  }
  proc Load_do(row) { var typ:text, pol:number, opr:number, one:number
    // uložená položka číselníku
    typ.set(row.part('typ').get);
    // převzetí hodnot k této položce
    pol.set(polozky.get(conc('pol.',typ)));
    opr.set(polozky.get(conc('opr.',typ)));
    one.set(polozky.get(conc('one.',typ)));
    // uložení hodnot
    row.part('pocet').set(pol);
    row.part('oprava').set(opr); row.part('oprava').plain;
    row.part('one').set(one);
    // výpočet ceny a sumy
    row.part('cena').set(multiply(one,cconc(eq(opr,'-'),pol,opr)));
  }
  proc Suma() { 
    c.celkem.set(0);
    foreach(c.L,Suma_do);
  }
  proc Suma_do(row) {
    c.celkem.set(sum(c.celkem.get,row.part('cena').get));
    c.celkem.change;
  }
  proc Uloz() { 
    oprava.set('');
    foreach(c.L,Uloz_do);
    c.plain;
    [ oprava.get;
      osoba.oprava.set(conc(kniha.cenik_roku.get,oprava.get)); 
      osoba.oprava.change;
      osoba.save; osoba.load;
    ]
  }
  proc Uloz_do(row) {
    eq(row.part('oprava').get,'-');
  | oprava.set(conc(oprava.get,',',row.part('typ').get,':',row.part('oprava').get));
  }
  form _c [,,350,400] { style:"overflow:auto"
    field celkem [90,2,40,] { title:'PLATBA' format:'rd' }
    label za [140,7,200,20] 
    label [49,28,40,14] { title:'oprava' }
    button [140,21,,] { title:'Ulož opravu' proc onclick() { Uloz }}
    button [223,21,,] { title:'Zruš opravu' proc onclick() { 
      osoba.oprava.set(''); osoba.oprava.change;
      osoba.save; osoba.load;
      Load(osoba.id_order.get,osoba.id_osoba.get)
    }}
    list L [0,40,350,360] { rows:22 
      field typ
      field one // ceníková položka 
      field pocet [0,2,30,] { format:'rd' }
      field oprava [40,2,40,] { format:'rf' proc onchange() {
        cena.set(multiply(one.get,cconc(eq(oprava.get,'-'),pocet.get,oprava.get)));
        cena.change;
        Suma;
      }}
      field cena  [90,2,40,] { format:'rd' }
      label nazev [140,6,200,20] { style:"white-space:nowrap" }
    }
  }
}
// =====================================================================================> VYÚČTOVÁNÍ
form _kniha /*[,,300,100]*/ { css:'ds_form'
  // parametry
  var cenik_roku= 0  // defaultní ceník se bere z roku konání akce
  // nadpis
  label [ 10,0,694,] { title:'<hr>' }
  label [ 10,20,400,] { title:"<h3 style='margin:0'>Cena pro vybraného účastníka, rodinu, objednávku</h3>"  }
  // host
  field jmeno   [ 10, 50, 80,] { title:'^jméno' data:ds_osoba.jmeno }
  field prijmeni[100, 50, 80,] { title:'^příjmení' data:ds_osoba.prijmeni }
  field ubyt1   [190, 50, 50,] { title:'^ubytování' format:'r' }
  field strav1  [250, 50, 50,] { title:'^stravování' format:'r' }
  field popl1   [310, 50, 50,] { title:'^poplatek' format:'r' }
  field prog1   [370, 50, 50,] { title:'^program' format:'r' }
  field celk1   [430, 50, 50,] { title:'^CELKEM' format:'r' }
  // rodina
  field rodina  [140, 75, 40,] { title:'rodina' }
  field ubyt2   [190, 75, 50,] { format:'r' }
  field strav2  [250, 75, 50,] { format:'r' }
  field popl2   [310, 75, 50,] { format:'r' }
  field prog2   [370, 75, 50,] { format:'r' }
  field celk2   [430, 75, 50,] { format:'r' }
  // pobyt
  label         [100,104, 84,] { title:'celá objednávka' format:'r' }
  field ubyt3   [190,100, 50,] { format:'r' }
  field strav3  [250,100, 50,] { format:'r' }
  field popl3   [310,100, 50,] { format:'r' }
  field prog3   [370,100, 50,] { format:'r' }
  field celk3   [430,100, 50,] { format:'r' }
  // ==> výpočet pro Knihu hostí
  var cena:object
  proc kniha_load(idos) { 
    cena.set(ask('ds_cena_pobytu',idos,cenik_roku.get));
    copy_by_name(cena.get('fields'),form);
  }
}

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  