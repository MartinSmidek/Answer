# ------------------------------------------------------------------------------------------------ #
# Systém Ans(w)er - modul Dům setkání - verze 2                                                    #
#                                                                                                  #
#                                                   (c) 2008-2024 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

var the_order=0

# -------------------------------------------------------------------------==> . inicializace panelu
func onfirstfocus() {
//func onfocus() {
  var mn: object, it: ezer
  mn= php.ds2_obj_menu('202401,202402,202403,202404,202405,202406');
  mo.attach_code(mn.cd);
  obj.Init();
  Upravy.Init();
  it= mo.part(mn.th);
  it.click(1);
  page.ucast.onclick();
} // vytvoření menu pobytů

# --------------------------------------------------------------------------==> . globální procedury
# informace o aktuálních záznamech
func curr() {
  return {dum:{order:the_order,celkem:kniha.celk3}}; 
}

# zobraz danou objednavku
func seek_order(ord) { var myo: text, it: ezer, stamp:number
  stamp= php.select('fromday',' tx_gnalberice_order',`uid=${ord}`,'setkani');
  myo= php.date('mY',stamp);
  echo('click to:',myo);
  it= mo.part(conc(myo,ord));
  it.click(1);
}

func order_load (ord) {
  the_order= ord; precti(); compare()
}
func show_order (ord) {
  the_order= ord; order_load(ord)
}

# --------------------------------------------------------------------------==> . menu
menu mo {type:'left'
  func onclick(x:ezer) { show_order(x.par.uid) }
}

// zobrazení objednávky
func precti  {
  obj.load(the_order);
  akc.Load(); osoba.Load(); // zobrazení hodnot z objednávky
  popis.tit= `<h3>Objednávka číslo ${the_order} ${obj.deleted?' -- je smazaná!':''}</h3>`; 
  if ( obj.deleted ) {
    fak.init(); obj.init();
  }
  else {
    fak.load(the_order); 
//    fak.faktura.display(0); 
    cti(obj.rooms1)
  }
}
// účast objednatele na pobytu
func objednavatel_save() {
  fak.save(); fak.load();
  obnova(); compare()
}
// vystavení zálohy na objednávku
func make_zaloha () {
//  fak.faktura= php.ds2_xls_zaloha(the_order); 
//  fak.faktura.display(1)
}
// vystavení faktur pro rodiny na objednávce
func make_faktury () {
//  fak.faktura= php.ds_xls_faktury(the_order); 
//  fak.faktura.display(1)
}
// porovnání objednávky se seznamem účastníků
//var comp: text
var fields: text
func compare() { var comp: object
  comp= php.ds2_compare(the_order);
  copy_by_name(comp.form,obj);
  obj.info= comp.html
}
# =========================================================================================> záložky
const PQ=50             // posun pro nové pokoje
//group pobyt {

use page:   form _page    [ 10, 10,,] 
use popis:  form _objed1  [ 10, 20,,] { tag:'objed' format:'n' }
use obj:    form _objed   [ 20, 50,,] { tag:'objed' format:'n' }
use fak:    form _fakt    [410, 50,,] { tag:'objed' format:'n' }

use popis2: form zahlavi2 [ 10, 20,,] { tag:'ucast' format:'n' }
use akc:    form _akce    [ 20, 60,,] { tag:'ucast' format:'n' }
use osoba:  form _osoba   [410,  0,,] { tag:'ucast' format:'n' }
use kniha:  form _kniha   [ 20,400,,] { tag:'ucast' format:'n' }

use ucet:   form _kniha   [ 20, 50,,] { tag:'ucet' format:'n' }

# -----------------------------------------------------------------------------------------==> _page
# formulář se záložkami
form _page {
  func start() { cvak(objed) } // inicializace - zobrazení první záložky
  # ------------------------- obsluha záložek
  func cvak(i:ezer) {
    form.set_css('ae_butt_off','ae_butt_on','_'); 
    i.set_css('ae_butt_on','ae_butt_off');
    panel.display(0,i.par.off); 
    panel.display(1,i.par.on)
  }
  # ------------------------- záložky - v par jsou tagy pro zapnutí vypnutí elementů
  label objed [ 12,0,100,20] { tag:'_' title:'<b>Objednávka</b>', par:{on:'objed',off:'ucast|ucet'}
    func onclick() { cvak(&this) } }
  label ucast [132,0,100,20] { tag:'_' title:'<b>Účastníci</b>', par:{on:'ucast',off:'objed|ucet'}
    func onclick() { cvak(&this) } }
  label ucet  [252,0,100,20] { tag:'_' title:'<b>Vyúčtování</b>', par:{on:'ucet',off:'objed|ucast'}
    func onclick() { cvak(&this) } }
  # ------------------------- pozadí pro elementy musí být před obsahem záložek
  label frame [0,16,717,510] { css:'ae_work'}
  // text faktury
  label faktura [17,540,640,]
}

# ======================================================================================> OBJEDNÁVKA
form _objed1 [,,600,30] { css:'ds_form'
  label tit [ 10,  0,300,] { title:'<h3>Objednávka pobytu</h3>' }
  label [400,  0,300,] { title:'<h3>Fakturační adresa objednavatele</h3>' }
}
// ------------------------------------------------------------------==> data objednávky
form _objed { css:'ds_form'
  view objednavka: table tx_gnalberice_order
  const PL=0; PT=92; QT=PT+PQ-4; FT=120+PQ
  field deleted { data:objednavka.deleted }
  select      [  0, 15,120,] { title:'^stav objednávky' type:'map', data:objednavka.state, options:ds_stav.hodnota }
  field       [130, 15, 40,] { title:'^akce YS' data:objednavka.akce, format:'r' }
  edit        [180,15,164,57] { title:'^poznámka k objednávce' data:objednavka.note  }
  field o_beg [  0, 55, 85,] { title:'^příjezd' type:'date', data:objednavka.fromday }
  field o_end [ 90, 55, 85,] { title:'^odjezd' type:'date', data:objednavka.untilday }
  check skoleni [218,72,65,9] { title:'školení', data:objednavka.skoleni, value:'0', help:"účastníci školení neplatí rekreační poplatek" }
  field sleva [321,79,20,] { title:'sleva' data:objednavka.sleva, format:'r' }
  label       [346,79,5,] { title:'%' }
  // nové pokoje
  label       [0,QT+-14,356,42] { title:'nové pokoje:', css:'jemna' }
  check   q1  [PL+  0, QT,14,] { title:'1',  format:'c', css:'CheckT' }
  check   q2  [PL+ 20, QT,14,] { title:'2',  format:'c', css:'CheckT' }
  check   q11 [PL+ 40, QT,14,] { title:'11', format:'c', css:'CheckT' }
  check   q12 [PL+ 60, QT,14,] { title:'12', format:'c', css:'CheckT' }
  check   q13 [PL+ 80, QT,14,] { title:'13', format:'c', css:'CheckT' }
  check   q14 [PL+100, QT,14,] { title:'14', format:'c', css:'CheckT' }
  check   q15 [PL+120, QT,14,] { title:'15', format:'c', css:'CheckT' }
  check   q16 [PL+140, QT,14,] { title:'16', format:'c', css:'CheckT' }
  check   q17 [PL+160, QT,14,] { title:'17', format:'c', css:'CheckT' }
  check   q21 [PL+180, QT,14,] { title:'21', format:'c', css:'CheckT' }
  check   q22 [PL+200, QT,14,] { title:'22', format:'c', css:'CheckT' }
  check   q23 [PL+220, QT,14,] { title:'23', format:'c', css:'CheckT' }
  check   q24 [PL+240, QT,14,] { title:'24', format:'c', css:'CheckT' }
  check   q25 [PL+260, QT,14,] { title:'25', format:'c', css:'CheckT' }
  check   q26 [PL+280, QT,14,] { title:'26', format:'c', css:'CheckT' }
  check   q27 [PL+300, QT,14,] { title:'27', format:'c', css:'CheckT' }
  check   q28 [PL+320, QT,14,] { title:'28', format:'c', css:'CheckT' }
  check   q29 [PL+340, QT,14,] { title:'29', format:'c', css:'CheckT' }
  check   q9  [PL+360, QT,14,] { title:'9',  format:'c', css:'CheckT' }
  check   q10 [PL+380, QT,14,] { title:'10', format:'c', css:'CheckT' }

  label       [344,101,5,] { title:'?' }
  field noroom [PL+324,PT+9,17,] { format:'or:e', help:'?|počet neubytovaných podle seznamu' }
  field rooms0  { data:objednavka.rooms }
  field rooms1 { data:objednavka.rooms1 }

  label       [0,FT+0,50,] { title:'dospělí' }
  field       [0,FT+15,17,] { data:objednavka.adults, format:'r:e'}
  field adults [24,FT+16,17,] { format:'or:e', help:'?|počet dospělých podle seznamu' }
  label       [50,FT+0,55,] { title:'děti 10-15' }
  field       [54,FT+15,17,] { data:objednavka.kids_10_15, format:'r:e' }
  field kids_10_15 [78,FT+16,17,] { format:'or:e', help:'?|počet dětí podle seznamu' }
  label       [110,FT+0,45,] { title:'děti 3-9' }
  field       [111,FT+15,17,] { data:objednavka.kids_3_9, format:'r:e' }
  field kids_3_9 [135,FT+16,17,] { format:'or:e', help:'?|počet dětí ve věku 3-9 let podle seznamu' }
  label       [165,FT+0,50,] { title:'děti do 3' }
  field       [165,FT+15,17,] { data:objednavka.kids_3, format:'r:e' }
  field kids_3 [190,FT+16,17,] { format:'or:e', help:'?|počet dětí do 3 let podle seznamu'  }
  label       [220,FT+0,17,] { title:'??' }
  field nevek [220,FT+15,17,] { format:'or:e', help:'?|počet osob v seznamu bez udaného věku' }
  select o_str[250,FT+15,100,] { title:'^typ stravy' type:'map', data:objednavka.board, options:ds_strava.hodnota }
  button save_pobyt [249,FT+71,,] { title:'zapsat změny', type:'submit' 
    func onclick() {
      form.save(); order_load(the_order)
  }}
  
//  button [654,428,,] { title:'* TEST' func onclick() {  }} // nic
  button [249,FT+91,,] { title:'* INIT' func onclick() {Init() }} // obnoví pokoje
  
  label info  [1,FT+39,238,53] { title:'' }
  label       [239,FT+36,128,] { title:'program: dospělý / dítě' }
  field prog_cely [251,FT+49,30,] { data:objednavka.prog_cely, format:'r', help:'cena programu na akci pro dospělého' }
  label       [290,FT+50,5,] { title:'/' }
  field prog_dite [302,FT+49,30,] { data:objednavka.prog_polo, format:'r', help:'cena programu na akci pro dítě' }
  label       [338,FT+49,5,] { title:'Kč' }
  func onload () { js.rooms_check(&rooms0,form,'p'); js.rooms_check(&rooms1,form,'q') }
  func onsave () { js.check_rooms(&rooms0,form,'p'); js.check_rooms(&rooms1,form,'q') }
  func Init() { var x:object, fld: ezer
//    set_trace('m',1,'set_attrib,enable');
    for (x of php.ds2_rooms_help()) {
      fld= form.part(x.fld);
      fld.help= x.hlp;                 // -- atribut nemůže být vlevo
      fld.enable(x.on);
    };
//    set_trace('m',0);
  }
}
// ------------------------------------------------------------------==> objednatel
form _fakt { css:'ds_form'
  view objednavka: table tx_gnalberice_order
  field       [  0, 15,210,] { title:'^název organizace (plátce faktury)' data:objednavka.org }
  field       [220, 15, 80,] { title:'^IČ' data:objednavka.ic }
  field       [  0, 55,120,] { title:'^příjmení' data:objednavka.name }
  field       [130, 55, 80,] { title:'^jméno' data:objednavka.firstname }
  field       [220, 55, 80,] { title:'^DIČ' data:objednavka.dic }
  field       [  0, 95,210,] { title:'^e-mail' data:objednavka.email  }
  field       [220, 95, 80,] { title:'^telefon' data:objednavka.telephone}
  field       [0,135,210,] { title:'^ulice' data:objednavka.address }
  field       [  0,175, 50,] { title:'^psč' data:objednavka.zip}
  field       [ 60,175,150,] { title:'^obec' data:objednavka.city}
  button      [220,185,,] { title:'zapsat změny'     func onclick() { objednavatel_save() } }
  // parametry faktury
  field fakt_num [91,424,40,] { title:'^fakt.číslo' }
  field fakt_zal [141,424,50,] { title:'^zálohou' }
  field fakt_vs  [200,424,50,] { title:'^VS' }
  field fakt_ss  [260,424,33,] { title:'^SS' }
  button [93,454,145,] { title:'Zálohová faktura' 
    func onclick() { var f:object
      clear();
      f= php.ds2_faktura({typ:'záloha',obj:the_order,cenik:kniha.cenik_roku,show:1,save:0,
          num:fakt_num,zaloha:fakt_zal,vs:fakt_vs,ss:fakt_ss});
      page.faktura= f.html;
      form.plain();
      if (f.err) alert(f.err);
  }}
  button [261,454,,] { title:'PDF' 
    func onclick() { var f:object
      clear();
      f= php.ds2_faktura({typ:'záloha',obj:the_order,cenik:kniha.cenik_roku,show:1,save:1,
          num:fakt_num,zaloha:fakt_zal,vs:fakt_vs,ss:fakt_ss});
      page.faktura= f.html;
      form.plain();
      if (f.err) alert(f.err);
  }}
}

# =======================================================================================> ÚČASTNÍCI
// zobrazení účastníků akce a volba jejich položek
// vnější proměnná the_order obsahuje číslo objednávky

func cti (pokoje) {
  osoba.init();
  osoba.spokoj.selects(conc('0,',sort(pokoje,',','n')));
  akc.seznam.browse_load(`id_order=${the_order}`);
  akc.seznam.raise('onrowclick')
}
// obnoví seznam po vnější změně
func obnova {
  akc.seznam.browse_seek()
}
# ------------------------------------------------------------------==> záhlaví
form zahlavi2 [,,600,30] { css:'ds_form'
  label [ 10,20,300,] { title:"<h3 style='margin:0'>Seznam účastníků pobytu</h3>"  }
  button [196,14,,] { title:'Načtení akce YMCA Setkání', format:'d'
    func onclick() { var ret:object
      ret= php.ds2_import_ys(the_order);
      if ( ret.conf ) {
        confirm(ret.conf); 
        ret= php.ds2_import_ys(the_order,1) 
      }
      alert(ret.html);
      akc.seznam.browse_refresh();
  }}
}
# ------------------------------------------------------------------==> AKCE
form _akce { css:'ds_form'
  func Load() { var zkratka: array
    zkratka= ['','C','P',''];
    o_beg= substr(obj.o_beg,0,-5);
    o_end= substr(obj.o_end,0,-5);
    o_uby1= 'L';
    o_str1= zkratka[obj.o_str.key()];
  }

  button [  0,0,,] { title:'+ rodina', help:'výběr rodiny z databází MS'
    func onclick () { Rodina.PridejRodinu() } }
  button [ 72,0,,] { title:'+ hosté', help:'výběr hostů z objednávek DS'
    func onclick () { Rodina.PridejKlienta() } }
  button [138,0,,] { title:'+ 1 účastník', help:'přidání zcela nového hosta'
    func onclick () { osoba_new() } }
  button [230,0,,] { title:'+ dítě', help:'přidání hosta se stejným příjmením a bydlištěm'
    func onclick () { osoba_new_child() } }
  button [287,0,,] { title:'- účastník', help:'odebrání hosta označeného oranžovou šipkou'
    func onclick () { osoba_del(seznam.id_osoba) } }

  // nad sloupci se zobrazuje hodnota z objednávky
  label o_uby1 [206,32,20,15]
  label o_str1 [243,32,20,15]
  label o_beg [271,32,26,21] 
  label o_end [306,32,24,15]

  browse seznam [0,50,,] { type:'smart', rows:14, //css_rows:'ys_osoba,0:nic,:zelenkavy'
    show rodina [,,24,] { title:'rod', data:ds_osoba.rodina, format:'s+' }
    show prijmeni [,,69,] { title:'příjmení', data:ds_osoba.prijmeni, format:'s' }
    show jmeno    [,,49,]  { title:'jméno', data:ds_osoba.jmeno, format:'s' }
    show vek  [,,19,]  { title:'věk',
      expr:"if(ds_osoba.narozeni,year(now())-year(ds_osoba.narozeni),'??')", format:'r' }
    show pokoj [,,19,]  { title:'P',
      data:ds_osoba.pokoj, format:'rs:e' }  // :e zobrazí 0 jako nic
    show [,,19,]  { title:'L',
      data:ds_osoba.luzko, map_pipe:ds_luzko.zkratka, format:'rs' }
    show [,,19,]  { title:'p',
      data:ds_osoba.postylka, format:'rs:e' }
    show [,,19,]  { title:'S',
      data:ds_osoba.strava, map_pipe:ds_strava.zkratka, format:'rs' }
    show [,,34,]  { title:'od', data:ds_osoba.fromday, format:'rs:d.m' }
    show pob_until [,,34,]  { title:'do', data:ds_osoba.untilday, format:'rs:d.m' }
    show pob_pozn [,,19,]  { title:'?', data:ds_osoba.pozn, format:'ts' }
    // nezobrazené
    show id_osoba { data:ds_osoba.id_osoba }
    show ulice { data:ds_osoba.ulice }
    show psc { data:ds_osoba.psc }
    show obec { data:ds_osoba.obec }
    func onrowclick() { var x:object
      osoba_load(id_osoba); 
      kniha.kniha_load(id_osoba); 
    } 
  }
}
# ====================================================================> Rodina
panel Rodina [,,320,300] { type:'popup'
  var novi: object
  func PridejRodinu() {
    fl.rodiny.display(1); fl.klienti.display(0);
    panel.title= 'Výběr rodiny z databází Setkání a Familia';
    novi= Rodina.modal(550,250); 
  }
  func PridejKlienta() {
    fl.rodiny.display(0); fl.klienti.display(1);
    panel.title= 'Výběr osob z databáze Domu setkání';
    novi= Rodina.modal(550,250); 
  }
  use fl: form _fl [12,10,,]
  form _fl [,,300,200] {
    var last: number
    var rod: object
    var popis: text
    field znacka [0,225,50,16]
    label [55,225,300,16] {title:'značka rodiny na fakturách (bude bez diakritiky)'}
    button [0,250,,] { title:'přidat do účastníků', func onclick() {
      znacka_rodiny= php.cz2ascii(znacka);
      rodina_add(L) } }
    button [130,250,,] { title:'jiná rodina', func onclick() {
      rodiny.init(); klienti.init(); vse.init(); znacka.init(); L.init() } }
    button [220,250,,] { title:'konec', func onclick() {
      rodiny.init(); klienti.init(); vse.init(); znacka.init(); L.init(); panel.hide(0) } }
    // výběr z databáze MS
    select rodiny [100,0,200,17] { type:'auto', par:{fce:'ds2_lide_ms'}, format:'t'
      func onchanged() { var p:object, Lx: object
        rod= php.ds2_rodina(this.key());
        znacka.init();
        for (p of rod) {
          last= L.add();
          if ( znacka=='' ) znacka= substr(p.prijmeni,0,3);
          popis= `${p.prijmeni} ${p.jmeno}, ${p.mesto}, ${p.stari}`;
          Lx= L[last];
          Lx.info= popis;
          Lx.all= p;
        };
        znacka= php.cz2ascii(znacka)
      }
    }
    // výběr z databáze DS
    select klienti [100,0,200,17] { type:'auto', par:{fce:'ds2_lide_ds'}, format:'t'
      func onchanged() { var p:object, Lx: object
        rod= php.ds2_klienti(this.key());
        znacka.init();
        for (p of rod) {
          rodina(p);
        }
        znacka= php.cz2ascii(znacka)
      }
    }
    // procedury
    func rodina(p:object) { var Lx:ezer
      last= L.add();
      if ( znacka=='' ) znacka= substr(p.prijmeni,0,3);
      popis= `${p.prijmeni} ${p.jmeno}, ${p.mesto}, ${p.stari}`;
      Lx= L[last];
      Lx.info= popis;
      Lx.all= p;
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t' 
      func onchange() { var x:ezer
        for (x of L) {
          x.chck= form.vse 
        }
    }}
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t' }
      label info [23,4,300,16] {style:'white-space:nowrap'}
      var all: object
    }
  }
  // ==> přidání rodiny
  var znacka_rodiny: text
  func rodina_add(seznam:ezer) { var clen:ezer
    for (clen of seznam) {
      rodina_add1(clen);
    }
  }
  var pall: object
  func rodina_add1(p:ezer) {
    if ( p.chck ) {
      pall= p.all;
      osoba.init();
      osoba.id_order= the_order;         osoba.id_order.change();
      osoba.rodina= znacka_rodiny;       osoba.rodina.change();
      osoba.jmeno= pall.jmeno;           osoba.jmeno.change();
      osoba.prijmeni= pall.prijmeni;     osoba.prijmeni.change();
      osoba.ulice= pall.ulice;           osoba.ulice.change();
      osoba.psc= pall.psc;               osoba.psc.change();
      osoba.obec= pall.mesto;            osoba.obec.change();
      osoba.telefon= pall.telefon;       osoba.telefon.change();
      osoba.email= pall.email;           osoba.email.change();
      osoba.narozeni= pall.narozeni;     osoba.narozeni.change();
      osoba.insert();
      akc.seznam.browse_seek(`id_osoba=${osoba.key()}`);
      akc.seznam.browse_focus(); compare()
    }
  }
}
# ------------------------------------------------------------------==> OSOBA
# zobrazení účastníka
func osoba_load (id_osoba) {
  osoba.load(id_osoba);
  osoba.spokoj.selects(conc('0,',sort(obj.rooms1,',','n')));
  osoba.spokoj= akc.seznam.pokoj
}
# ==> přidání osoby
func osoba_new {
  osoba.init(); osoba.id_order= the_order; osoba.id_order.change();
  osoba.insert();
  akc.seznam.browse_seek(`id_osoba=${osoba.key()}`);
  akc.seznam.browse_focus(); compare()
}
# ==> vložení nového dítěte účastníka
func osoba_new_child () {
  osoba.init();
  osoba.id_order= the_order;            osoba.id_order.change();
  osoba.rodina= akc.seznam.rodina;      osoba.rodina.change();
  osoba.prijmeni= akc.seznam.prijmeni;  osoba.prijmeni.change();
  osoba.ulice= akc.seznam.ulice;        osoba.ulice.change();
  osoba.psc= akc.seznam.psc;            osoba.psc.change();
  osoba.obec= akc.seznam.obec;          osoba.obec.change();
  osoba.insert();
  akc.seznam.browse_seek(`id_osoba=${osoba.key()}`);
  akc.seznam.browse_focus(); compare()
}
# ==> zápis opravy účastníka
func osoba_save {
  osoba.rodina= php.cz2ascii(osoba.rodina); osoba.rodina.change();
  osoba.save(); osoba.load(); akc.seznam.browse_seek();
  akc.seznam.browse_focus(); compare()
}
# ==> zrušení účastníka
func osoba_del (id_osoba) {
  if ( confirm(`Opravdu smazat ${akc.seznam.prijmeni} ${akc.seznam.jmeno} ze seznamu?`) ) {
    ds_osoba.delete_record(`id_osoba=${id_osoba}`);
    akc.seznam.browse_load(`id_order=${the_order}`);
    akc.seznam.browse_focus(); compare()
  }
}
form _osoba /*[,,300,100]*/ { css:'ds_form'
  func Load() {
    o_beg= obj.o_beg;
    o_end= obj.o_end;
    o_str= obj.o_str;
  }
  label [0,38,258,] { title:"<h3 style='margin:0'>Údaje vybraného účastníka</h3>" }
  field id_osoba [256,38,50,] { data:ds_osoba.id_osoba, format:'or', css:'Label', style:'color:white'}
  field id_order { data:ds_osoba.id_order }
  field oprava { data:ds_osoba.oprava }
  // zobrazení
  field rodina   [  0, 75, 40,] { title:'^rodina' data:ds_osoba.rodina }
  field prijmeni [ 50, 75, 70,] { title:'^příjmení' data:ds_osoba.prijmeni }
  field jmeno [130, 75, 80,] { title:'^jméno' data:ds_osoba.jmeno }
  field narozeni [220,75,86,] { title:'^narozen/a' type:'date', data:ds_osoba.narozeni }
  field email [  0,115,210,] { title:'^e-mail' data:ds_osoba.email  }
  field telefon [220,115, 80,] { title:'^telefon' data:ds_osoba.telefon}
  field ulice [  0,155,210,] { title:'^ulice' data:ds_osoba.ulice}
  field psc   [  0,195, 50,] { title:'^psč' data:ds_osoba.psc
    func onchanged() { this.let(replace(this.get(),' ','')) }
  }
  field obec [ 60,195,150,] { title:'^obec' data:ds_osoba.obec}
  label       [  0,220,300,] { title:'--- <i>upřesnění údajů o pobytu</i>' }
  select spokoj [  0,250, 50,] { title:'^pokoj' data:ds_osoba.pokoj, format:':e' }
  select luzka [ 60,250,150,] { title:'^typ lůžka' type:'map', data:ds_osoba.luzko, options:ds_luzko.hodnota }
  check postylka [220,240,90,] { title:'postýlka', css:'CheckT', data:ds_osoba.postylka }
  check zvire [280,240,15,] { title:'zvíře', css:'CheckT', data:ds_osoba.zvire }
  field       [  0,290,210,] { title:'^poznámka' data:ds_osoba.pozn }
  button      [220,289,,] { title:'zapsat změny' func onclick() { 
    osoba_save()
  }}
  // specifické údaje
  button [220,155,,] { title:'Init'  func onclick() {
    Upravy.Init()
  }}
  button [220,180,,] { title:'Load'  func onclick() {
    Upravy.Load(id_order,id_osoba)
  }}
  label       [0,315,330,] { title:'--- <i>údaje o pobytu (pokud se liší od údajů v objednávce)</i> ---' }
  field   od  [0,347,83,] { title:'^příjezd' type:'date', data:ds_osoba.fromday }
  field   do  [90,347,83,] { title:'^odjezd' type:'date', data:ds_osoba.untilday }
  select      [181,347,133,] { title:'^typ stravy' type:'map0', data:ds_osoba.strava, options:ds_strava.hodnota }
  // pod tím se zobrazuje hodnota z objednávky
  label o_beg [4,370,60,16] 
  label o_end [94,370,60,16] 
  label o_str [185,370,60,16] 
}
// ==================================================================================> ÚPRAVY CENÍKU
panel Upravy [,,350,400] { type:'popup' title:"Účtované položky z ceníku"
  use c: form _c
  var n: number, 
      polozky: object,
      oprava: text
 func Init() { var ceny:object, cena:object, row: ezer
    n= 0;
   c.polozky.init();
    ceny= php.ds2_cenik_list();
    kniha.cenik_roku= ceny.cenik_roku;
    for (cena of ceny.list) {
      n= c.polozky.add();
      row= c.polozky.part(n);
      row.typ= cena.typ;
      row.nazev= cena.txt;
    }
  }

  func Load(ord,host) { var row:ezer, typ:text, pol:number, opr:number, one:number
    polozky= php.ds2_cenik_list(kniha.cenik_roku,ord,host);
    if ( polozky.err ) 
      alert(polozky.err)
    else {
      c.celkem= polozky.cen.celk;
      c.za= `Kč za pobyt hosta ${osoba.prijmeni} ${osoba.jmeno}`;
      for (row of c.polozky) {
//        Load_do(row);
        typ= row.typ;
        // převzetí hodnot k této položce
        pol= polozky[conc('pol.',typ)];
        opr= polozky[conc('opr.',typ)];
        one= polozky[conc('one.',typ)];
        // uložení hodnot
        row.pocet= pol;
        row.oprava= opr; row.oprava.plain();
        row.one= one;
        // výpočet ceny a sumy
        row.cena= one*((opr=='-') ? pol : opr);
      };
      Suma(); 
      c.celkem.plain();
      panel.modal();
    }
  }
  func Suma() { var polozka:ezer
    c.celkem= 0;
    for (polozka of c.polozky) {
      c.celkem= c.celkem + polozka.cena;
      c.celkem.change();
    }
  }
  func Uloz() { var polozka:ezer
    oprava= '';
    for (polozka of c.polozky) {
      if (polozka.oprava!='-') {
        oprava= `${oprava},${polozka.typ}:${polozka.oprava}`;
      }
    }
    c.plain();
    if (oprava) {
      osoba.oprava= `${kniha.cenik_roku}${oprava}`;
      osoba.oprava.change();
      osoba.save(); osoba.load();
    }
  }
  
  form _c [,,350,400] { style:"overflow:auto"
    field celkem [90,2,40,] { title:'PLATBA' format:'rd' }
    label za [140,7,200,20] 
    label [49,28,40,14] { title:'oprava' }
    button [140,21,,] { title:'Ulož opravu' func onclick() { Uloz() }}
    button [223,21,,] { title:'Zruš opravu' func onclick() { 
      osoba.oprava= ''; osoba.oprava.change();
      osoba.save(); osoba.load();
      Load(osoba.id_order,osoba.id_osoba)
    }}
    list polozky [0,40,350,360] { rows:22 
      field typ
      field one // ceníková položka 
      field pocet [0,2,30,] { format:'rd' }
      field oprava [40,2,40,] { format:'rf' 
        func onchange() {
          cena= one * (oprava=='-' ? pocet : oprava);
          cena.change();
          Suma();
        }
      }
      field cena  [90,2,40,] { format:'rd' }
      label nazev [140,6,200,20] { style:"white-space:nowrap" }
    }
  }
}
// =====================================================================================> VYÚČTOVÁNÍ
form _kniha /*[,,300,100]*/ { css:'ds_form'
  // parametry
  var cenik_roku= 0,  // defaultní ceník se bere z roku konání akce
      idos= 0         // nastavená osoba
  // nadpis
  label [ 10,0,694,] { title:'<hr>' }
  label nadpis [ 10,20,500,] 
  // host
  field jmeno   [ 10, 50, 80,] { title:'^jméno' data:ds_osoba.jmeno }
  field prijmeni[100, 50, 80,] { title:'^příjmení' data:ds_osoba.prijmeni }
  field ubyt1   [190, 50, 50,] { title:'^ubytování' format:'r' }
  field strav1  [250, 50, 50,] { title:'^stravování' format:'r' }
  field popl1   [310, 50, 50,] { title:'^poplatek' format:'r' }
  field prog1   [370, 50, 50,] { title:'^program' format:'r' }
  field celk1   [430, 50, 50,] { title:'^CELKEM' format:'r' }
  // rodina
  field rodina  [140, 75, 40,] { title:'rodina' }
  field ubyt2   [190, 75, 50,] { format:'r' }
  field strav2  [250, 75, 50,] { format:'r' }
  field popl2   [310, 75, 50,] { format:'r' }
  field prog2   [370, 75, 50,] { format:'r' }
  field celk2   [430, 75, 50,] { format:'r' }
  // pobyt
  label         [100,104, 84,] { title:'celá objednávka' format:'r' }
  field ubyt3   [190,100, 50,] { format:'r' }
  field strav3  [250,100, 50,] { format:'r' }
  field popl3   [310,100, 50,] { format:'r' }
  field prog3   [370,100, 50,] { format:'r' }
  field celk3   [430,100, 50,] { format:'r' }
//  // text faktury
//  label faktura [0,140,640,]
  // parametry faktury
  field fakt_num [494,50,40,] { title:'^fakt.číslo' }
  field fakt_zal [544,50,50,] { title:'^zálohou' }
  field fakt_vs  [603,50,50,] { title:'^VS' }
  field fakt_ss  [663,50,33,] { title:'^SS' }
  button [494,76,,] { title:'Faktura za rodinu' 
    func onclick() { var f:object
      clear();
//      f= php.ds2_faktura({typ:'konečná',idos:idos,cenik:cenik_roku,show:1,save:0});
      f= php.ds2_faktura({typ:'konečná',obj:the_order,idos:idos,cenik:cenik_roku,show:1,save:0,
          num:fakt_num,zaloha:fakt_zal,vs:fakt_vs,ss:fakt_ss});
      page.faktura= f.html;
      form.plain();
      if (f.err) alert(f.err);
  }}
  button [637,76,,] { title:'PDF' 
    func onclick() { var f:object
      clear();
      f= php.ds2_faktura({typ:'konečná',obj:the_order,idos:idos,cenik:cenik_roku,show:1,save:1,
          num:fakt_num,zaloha:fakt_zal,vs:fakt_vs,ss:fakt_ss});
      page.faktura= f.html;
      form.plain();
      if (f.err) alert(f.err);
  }}

  // ==> výpočet pro Knihu hostí
  var cena:object
  func kniha_load(_idos) { 
    idos= _idos;
    nadpis= `<h3 style='margin:0'>Cena pro vybraného účastníka, rodinu, objednávku 
        podle ceníku roku ${cenik_roku}</h3>`;
    cena= php.ds2_cena_pobytu(the_order,idos,cenik_roku);
    copy_by_name(cena.fields,form);
  }
}
