#pragma test
# ------------------------------------------------------------------------------------------------ #
# Karta pro výběr akce                                                                             #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2015 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

# ------------------------------------------------------------------------------------------==> stav
var zalozka: text,              // inf | cor | cen
    the_omezeni: text,          // podmínka omezující akce podle druhu - 1,2,3,4 jsou MS
    menu_item:object,           // aktivní menu
    a_title: text               // aktivní (ne nutně pracovní) akce
//    ,the_order: number           // aktivní objednávka DS --- var je v db2akce2
# ----------------------------------------------------------------------------------==> inicializace
# inicializace panelu proběhne po akce.onstart, zobrazí seznam akcí daného roku podle the_source
func re_selects_rok(rok) { var sels:text
  sels= php.select("GROUP_CONCAT(DISTINCT YEAR(datum_od) ORDER BY datum_od DESC)","akce","datum_od!=''");
  info.rok.selects(sels);
  info.rok= rok;
}
func onfirstfocus() {
  echo('------------- lst onfirstfocus begin');
  akce_onstart(); // zavolá akce_work
  // detekce rozměrů
  curr_w= sys('screen','width')<1280 ? 1024 : 1280;
  // zobrazovat mapu?
  info.mapka.enable(sys('options','gmap'));
  // zobrazení akce
  info.fill(the_title);
  // inicializace zobrazení
//g  info.rok.selects(javascript(
//g    `var x='';for(let i=${fdate('Y')+1};i>=1990;i--){x+=i+',';};x+='0'`));
  re_selects_rok(the_rok);
//g  info.rok= the_rok;
  page.cen_copy.selects("neměnit:0");
  zalozka= 'inf';
  // zobrazení vazby na objednávky DS
  if (!has_skill('y')) page.ds_order.set_css('hidden','');
  page.DocInit();
  echo('onfirstfocus the_source=',the_source);
  // zobrazení seznamu akcí
  page.inf.onclick();
  switch (the_source) {
    case 'sey': 
      if (has_skill('y;f;s;crz')) m.g.sey.click();
      elseif (has_skill('caam')) m.c.m.click();
      elseif (has_skill('caar')) m.c.r.click();
      elseif (has_skill('a'))    m.c.a.click();
      break;
//g    case 'google': m.g.goo.click(); break;
    case 'dum': m.d.o.click(); break;
  }
  echo('------------- lst onfirstfocus end');
}
//proc onfirstfocus() {
//#   spinner(1);
//  [ dirty.get | akce_onstart ]; // zavolá akce_work
//  // detekce rozměrů
//  curr_w.set(cconc(lt(sys('screen','width'),1280),1024,1280));
//  // zobrazovat mapu?
//  info.mapka.enable(sys('options','gmap'));
//  // zobrazení akce
//  info.fill(the_title.get);
//  // inicializace zobrazení
//  info.rok.selects(javascript(conc(
//    "var x='';for(let i=",sum(fdate('Y'),1),";i>=1990;i--){x+=i+',';};x+='0'")));
//  info.rok.set(the_rok.get);
//  page.cen_copy.selects("neměnit:0");
//  zalozka.set('inf');
//  // zobrazení seznamu akcí
//  [ has_skill('y;f;s;crz');  m.g.sey.click
//  | has_skill('caam'); m.c.m.click
//  | has_skill('caar'); m.c.r.click
//  | has_skill('a');    m.c.a.click
//  ];
//  // zobrazení vazby na objednávky DS
//  [ has_skill('y') | page.ds_order.set_css('hidden','') ];
//  page.DocInit;
//  page.inf.onclick;
//#   spinner(0);
//}
# -------------------------------------------------------------------------------------------==> use
use info: form _info [12,4,,]
use page: form _page [512,40,,]
# use fil:  form file._fil [512,72,,]  { tag:'file', format:'n' }

# ----------------------------------------------------------------------------==> globální procedury
# zobrazí vyúčtování objednávky Domu setkání nebo její smazání či obnovení
func dum_objednavka(cmd,id) { var row:number
  clear();
  switch (cmd) { 
    case 'show': // id_akce
      if (id==the_duakce) dum.Objednavka.Show(the_duakce);
      else alert('pro zobrazení objednávky musí být pobyt nastaven jako pracovní');
      break;
    case 'del': // id_order
      if (confirm(`Mám smazat objednávku č. ${id}?`)) {
        row= info.dum.browse_active();
        dum.Objednavka.Delete(id);
        info.dum.browse_refresh();
        info.dum.browse_active(row);
      }
      break;
    case 'add': // id_order
      if (confirm(`mám umožnit fakturaci a přidávání hostů?`)) {
        php.dum_objednavka_akce_make(id);
        the_order= id;
        info.dum.Load(the_order);
        info.dum.pracovni();
      }
      break;
  }
}                          
# nastaví akci jako pracovní
func akce_work(id_akce) {
  if (!id_akce) 
    id_akce= php.select('id_duakce','akce',`YEAR(datum_od)='${the_rok}' AND access=${my_org}`);
  info.rok= id_akce && info.volba_akce(id_akce) ? the_rok : fdate('Y');
}
# zobrazí přehled hnízd
func ukaz_hnizda(ida) { 
  HNIZDA.prehled(ida)
}                          
proc reaccess() { #==> . reaccess - změna
//g  # intranet povol jen Setkání
//g  [ m.g.part('goo'); m.g.goo.enable(eq(my_org.get,1)) ];
  # přenastav pracovní akci podle my_org
  { eq(my_org.get,1);
    akce_work(the_akce_ys.get)
  | eq(my_org.get,2);
    akce_work(the_akce_fa.get)
  | akce_work(the_duakce.get)
  };
  # překresli aktivní kartu
  menu_item.get;
  m.onclick(menu_item.get);
  info.sey.pracovni
//g  { eq(the_source.get,'sey'); info.sey.pracovni | info.google.pracovni }
}
# -----------------------------------------------------------------------------==> lokální procedury
# vrátí hodnotu položky z google resp. sey
//g proc akce_get(_fld) { var fld:object
//g  { eq(the_source.get,'sey'); fld.set(info.sey.part(_fld).get) | fld.set(info.google.part(_fld).get) };
//g  return(fld);
//g }
func akce_get(_fld) { 
  return info.sey.part(_fld)
}
# zapíše hodnotu akce.archiv (a zapíše ji i do google resp. sey)
proc akce_set_archiv(cloud,folder) { var path:text
  path.set(conc(cloud,folder));
  ask('query',conc("UPDATE akce SET archiv='",path,"' WHERE id_duakce=",page.a_akce.get));
//g  { eq(the_source.get,'sey'); info.sey.archiv.let(path) | info.sey.google.let(path) };
  info.sey.archiv.let(path)
}
# obnoví zobrazení seznamu
proc lst_refresh() {
  eq(the_source.get,'sey');    [ info.sey.browse_refresh ]
//g | eq(the_source.get,'google'); [ info.google.browse_refresh ]
}
# -----------------------------------------------------==> . reakce na změny rozměrů okna prohlížeče
const min_h=550           // minimální výška (nelze jednoduše měnit - jsou k ní vztaženy souřadnice)
var   curr_h: number      // výška nad základní výšku
var   curr_w: number      // 1024 nebo 1280

proc onresize(w,h) { // echo('lst onresize(',w,',',h,')');
  [ and(lt(h,min_h.get),not(eq(curr_h.get,min_h.get)));
    curr_h.set(0); h_change_all()
  | and(gt(h,min_h.get),not(eq(h,sum(curr_h.get,min_h.get))));
    curr_h.set(minus(h,min_h.get)); h_change_all() ];
  [ lt(w,1220); m.click(2,1) | m.click(1,1) ];
  [ and(lt(w,1280),eq(curr_w.get,1280)); narrow
  | and(gt(w,1279),eq(curr_w.get,1024)); wide ];
}

# změna šířky 1024/1280
proc narrow() { curr_w.set(1024); w_change_all  }
proc wide() { curr_w.set(1280); w_change_all }
proc w_change_all() {}

# změna výšky oproti základní min_h
proc h_change_all() {
//  page.property(object('down',curr_h.get),'b');      // posunutí proti původnímu - omezeno na min_h
  page.frame.property(object('stretch',curr_h.get)); // protažení proti původnímu
//  page.drop.property(object('stretch',curr_h.get));
  h_change_b;
}
# změna počtu řádků browse oproti aktuálním řádkům
func h_change_b() { var r:number, h:number
  h= sys('screen','height');
  r= (h-173)/17;
  if (r!=info.sey.rows) {
//g    info.google.set_attrib('rows',r);
    info.sey.set_attrib('rows',r);
    info.dum.set_attrib('rows',r+1);
    page.c.set_attrib('rows',r-2);
  }
}

# ------------------------------------------------------------------------------------------==> MENU
# Výběr akce má dvě možnosti, uchované v proměnné the_source:
//g #   'google' používá jako primární data spreadsheet v intranetu YS a z něj upravuje tabulku AKCE
#   'sey' používá pouze tabulku AKCE
#   'dum' používá jako primární data tabulku tx_gnalberice_order

menu m {type:'left', format:'f+'
  # it: info.tag
  # s:  source
  # o:  omezeni  org|access
  # a:  rok=akce_roku | akce_vsechny
  # cond
  menu c {title:'Výběr akce',type:'group',                                                 skill:'c#crz;s'
    // jen pro CR
    item m {title:'[MS] program Manželská setkání', skill:'caam', par:°{omez:'da2.druh IN (1,2,3,4)'} }
    item r {title:'[R] programy Rodina mimo MS',    skill:'caar', par:°{omez:'da2.druh NOT IN (1,2,3,4)'} }
    item a {title:'[...] bez omezení',              skill:'a',    par:°{omez:'1'} }
      proc onclick (i) {
        info.rok.display(1); info.sey.display(1); 
//g        info.google.display(0);
        the_omezeni.set(i.par.omez);
        the_source.set('sey'); akce_roku(info.rok.get);
  } }
  menu g {title:'Akce zadaného roku',type:'group',                                 skill:'y;f;s;crz'
//g    item goo {title:'[fa-google] podle číselníku akcí z intranetu',                      skill:'y'
//g      par:{it:'g|r',s:'google',o:'',a:'rok'}}
    item sey {title:'[fa-search] ze seznamu všech našich akcí'
      par:{it:'s|r',s:'sey',o:'org',a:'rok'}}
    item {title:'[fa-search] ze seznamu všech akcí'                                      skill:'#crz;s'
      par:{it:'s|r',s:'sey',o:'access',a:'rok'}}
  }
  menu d {title:'Objednávky Domu setkání',type:'group',                                    skill:'yd2'
    item o {title:'[fa-home] přehled roku'
      func onclick (i:ezer) {
        menu_item= i;
        info.display(2,'d|r'); 
        the_source= 'dum';
        set_cookie(`${sys('root')}_akce_source`,the_source);
        page.ord.onclick(); page.display(0,'x'); page.ord.display(1); 
        echo(`----------- set_cookie ...source=${the_source}, the_order=${the_order}`);
//        info.display(2,'s|r'); the_source= 'sey';
//        the_omezeni= `da2.access & ${org_ds}`;
        akce_roku(info.rok);
        info.dum.Show(the_order);
      }
    }
  }
  menu {title:'Statistika - různé výběry',type:'group',                                        skill:'y;f;c;s'
//    item sey {title:'[fa-search] ze seznamu všech akcí',    par:{it:'s',cond:'da2.druh!=64 '} }
//    item  {title:'[fa-search-plus]... opravdové akce',      par:{it:'s',cond:'da2.spec=0 AND da2.druh!=64 ' } }
//    item  {title:'[fa-search-minus] ... jen různé seznamy', par:{it:'s',cond:'da2.spec=1 AND da2.druh!=64 '} }
//    item  {title:'[fa-search-minus] ... jen pobyty Domu setkání', par:{it:'s',cond:'da2.druh=64 '} }
    item sey {title:'[fa-search] ze seznamu všech akcí',    par:{it:'s',cond:'da2.access!=64 '} }
    item  {title:'[fa-search-plus]... opravdové akce',      par:{it:'s',cond:'da2.spec=0 AND da2.access!=64 ' } }
    item  {title:'[fa-search-minus] ... jen různé seznamy', par:{it:'s',cond:'da2.spec=1 AND da2.access!=64 '} }
    item  {title:'[fa-search-minus] ... jen pobyty Domu setkání', par:{it:'s',cond:'da2.access=64 '} }
  }
  func onclick (i:ezer) {
    menu_item= i;
    info.display(2,i.par.it); 
    page.inf.onclick(); page.display(1,'x'); page.ord.display(0); 
    the_source= i.par.s;
    set_cookie(`${sys('root')}_akce_source`,the_source);
    backtrace();
    echo(`----------- set_cookie ...source=${the_source}`);
//    if (i.par.o) 
//      the_omezeni= `da2.druh!=64 AND da2.access & ${i.par.o=='org' ? my_org : my_access}`;
    if (i.par.o) 
      the_omezeni= `da2.access!=64 AND da2.access & ${i.par.o=='org' ? my_org : my_access}`;
    if (i.par.a) akce_roku(info.rok); else akce_vsechny(i.par.cond);
  }
//  proc onclick (i) {
//    menu_item.set(i);
//    info.display(2,i.par.it); 
//    page.inf.onclick(); page.display(1,'x'); page.ord.display(0); 
//    the_source.set(i.par.s);
//    [ i.par.o; the_omezeni.set(conc('da2.druh!=64 AND ',
//        "da2.access & ",cconc(eq(i.par.o,'org'),my_org.get,my_access.get))) ];
//    { i.par.a; akce_roku(info.rok.get) | akce_vsechny(i.par.cond) }
//  }
}
#==> . akce definovaného roku
func akce_roku(rok) {
  page.init_page();
//g  if (the_source=='google') {
//g    info.google.browse_init();
//g    if (rok>2009)  // intranet YS obsahuje akce od roku 2010 včetně
//g      info.google.browse_load(`g_kat='a' AND g_rok=${rok}`,
//g          '','','','','',`SET @curr:=${the_duakce}`);
//g    else
//g      alert("V intranetu jsou v přesném formátu popsány jen akce od roku 2010")
//g  }
//g  else
  if (the_source=='sey') {
    info.sey.browse_load(`YEAR(da2.datum_od)='${rok}' AND da2.spec=0 AND ${the_omezeni}`,
        '','','','','',`SET @curr:=${the_duakce}`);
    if (info.sey.browse_count())    
      info.sey.raise('onrowclick',info.sey.browse_seek(`da2.id_duakce=${the_duakce}`));
  }
  elseif (the_source=='dum') {
    info.dum.Load(0);
  }
}
//g proc akce_roku(rok) {
//g  page.init_page;
//g  [ eq(the_source.get,'google');
//g    { gt(rok,2009);  // intranet YS obsahuje akce od roku 2010 včetně
//g      info.google.browse_load(conc("g_kat='a' AND g_rok=",rok),
//g      '','','','','',
//g      conc('SET @curr:=',the_duakce.get));
//g    | alert("V intranetu jsou v přesném formátu popsány jen akce od roku 2010") }
//g  | info.google.browse_init];
//g  [ eq(the_source.get,'sey');
//g    info.sey.browse_load(conc("YEAR(da2.datum_od)='",rok,"' AND da2.spec=0 AND ",the_omezeni.get),
//g      '','','','','',
//g      conc('SET @curr:=',the_duakce.get));
//g    info.sey.raise('onrowclick',info.sey.browse_seek(conc("da2.id_duakce=",the_duakce.get)));
//g //    [ has_skill('yas'); page.DocBrowse ]
//g  ]
//g }
proc akce_vsechny(cond) {
  the_source.set('sey');
  [ info.sey.browse_load(cond) ];
}
# ------------------------------------------------------------------------------------------==> AKCE
form _page [,,275,360] {
  var a_akce: number, zmena_web:number
  # ---------------------------==> . ochrana editace více uživateli
  func onchanged() { akce_lock('on') }
  func akce_lock(on) { var lock:object 
    if (key_akce) {
      lock= php.table_lock(on,'akce',key_akce); 
      if ((on=='on') && (!lock.ok)) {
        alert(conc(lock.info,lock.note));
        akce_zpet();
      }
    }
  }
  func akce_zpet() { 
    akce_lock('off'); 
    form.load(page.a_akce); zmena_web= 0; 
  }
  # ---------------------------==> . záložky
  proc tags(a,on,off) {
    form.set_css('ae_butt_off','ae_butt_on','x');
    a.set_css('ae_butt_on','ae_butt_off');
    form.display(0,off); form.display(1,on);
  }
  label ord [ 12,0,80,20] {tag:'x', title:'<b>Pobyt DS</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'ord','inf|cor|cen|pri|syn'); zalozka.set('ord'); 
  } }
  label inf [ 12,0,80,20] {tag:'x', title:'<b>Info</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'inf','cor|cen|pri|syn|ord'); zalozka.set('inf'); show_akce(a_akce.get)
  } }
  label cor [100,0,80,20] {tag:'x', title:'<b>Úprava</b>', format:'c'
    proc onclick() { tags(this,'cor','inf|cen|pri|syn|ord'); zalozka.set('cor'); show_akce(a_akce.get)
  } }
  label cen [188,0,80,20] {tag:'x', title:'<b>Ceník</b>', format:'c',
    proc onclick() { tags(this,'cen','inf|cor|pri|syn|ord'); zalozka.set('cen'); show_akce(a_akce.get)
  } }
  label pri [276,0,80,20] {tag:'x', title:'<b>Přihláška</b>', format:'c', skill:'yo'
    proc onclick() { tags(this,'pri','inf|cor|cen|syn|ord'); zalozka.set('pri'); show_akce(a_akce.get)
  } }
//  label doc [364,0,80,20] {tag:'x', title:'<b>Archiv</b>', format:'c', skill:'xy;xf'
//    proc onclick() { tags(this,'doc','inf|cor|cen|syn'); zalozka.set('doc'); show_akce(a_akce.get)
//  } }
  label syn [364,0,80,20] {tag:'x', title:'<b>Dokumenty</b>', format:'c', skill:'yas'
    proc onclick() { tags(this,'syn','inf|cor|cen|pri|ord'); zalozka.set('syn'); show_akce(a_akce.get)
  } }
  func show_akce(id_akce) {
    page.a_akce= id_akce;
    if (the_source=='sey') { if (info.sey.browse_count()) show_page(id_akce) else init_page() }
//g    if (the_source=='google') { if (id_akce) show_page(id_akce) else init_page() }
    if (the_source=='dum') { show_page(id_akce) }
  }
  func show_page(id_akce) {
    cen_copy.enable(0); cen_copy.key(0); key_akce= id_akce;
    form.load(id_akce); zmena_web= 0; ds_order= 0;
    if (has_skill('y')) ds_order= php.ds_objednavka(id_akce);
    switch (zalozka) {
      case 'ord': 
        clear(); 
        note= php.akce2_info(id_akce,1,1,the_order); 
        break;
      case 'inf': clear(); note= php.akce2_info(id_akce); break;
      case 'cor': 
        is_hnizda= hnizda?1:0; hnizda.display(hnizda?1:0);
        if (has_skill('faan')) {
          form.display(0,'corm|corf'); 
          if (mrop) form.display(1,'corm'); 
          if (firm) form.display(1,'corf'); 
        };
        if (has_skill('f')) soubezna= id_hlavni?1:0;
//        cen_ma.onchange();
        info.sey.browse_focus();
        break;
      case 'pri':
        if (id_akce==1552) p_show();
        break;
      case 'cen': 
        hnizdo.display(hnizda);
        hnizdo.key(0);
        if (hnizda) {
          hnizdo.set_attrib('options','ms_akce_hnizda.nazev');
          hnizdo.key(1);
        }
        c.Load();
        break;
//      case 'doc': archiv.ukaz(akce_get('archiv')); break;
      case 'syn': if (has_skill('yas')) DocShow(akce_get('rok'),akce_get('kod')); break;
    };
    c_show();
  }
//  proc show_page(id_akce) {
//    cen_copy.enable(0); cen_copy.key(0); key_akce.set(id_akce); //fil.display(0);
//    form.load(id_akce); zmena_web.set(0); 
//    [ has_skill('y'); ds_order.set(ask('ds_objednavka',id_akce)) ];
//    switch(zalozka.get,
//    'inf',{ clear; note.set(ask('akce2_info',id_akce));  },
//    'cor',{ //form.load(id_akce);
//            { hnizda.get; is_hnizda.set(1); hnizda.display(1)
//            | is_hnizda.set(0); hnizda.display(0)
//            };
//            [ has_skill('faan'); 
//              form.display(0,'corm|corf'); 
//              [ mrop.get; form.display(1,'corm') ]; 
//              [ firm.get; form.display(1,'corf') ]; 
//            ];
//            [ has_skill('f'); soubezna.set(cconc(id_hlavni.get,1,0)) ];
//            cen_ma.onchange;
//            info.sey.browse_focus },
//    'cen',{ c.browse_load(conc("id_akce=",id_akce)); },
//    'doc',{ archiv.ukaz(akce_get('archiv')) },
//    'syn',{ has_skill('yas'); DocShow(akce_get('rok'),akce_get('kod')) }
//    );
////    echo(id_akce,':',access.get,cen_ver.key);
//    c_show;
//  }
  proc init_page() {
    page.a_akce.set(0);
    cen_copy.enable(0); cen_copy.key(0);
    form.init; zmena_web.set(0); ds_order.set(0);
    note.set(''); key_akce.set(' ');
  }
  # ------------------------==> . informace
  field key_akce [408,19,46,] {format:'or', css:'Label',
    style:'color:white', help:' ', tabindex:0 }
  label note [10,35,455,193] { tag:'inf,ord', title:'', style:'color:black;font-size:12px' }
  # ---------------------------==> . položky akce
  field access { data:akce.access }
  field id_hlavni { data:akce.id_hlavni }
//  field web_online { data:akce.web_online }
  // ------------------------------------- základní údaje o akci
  field nazev [17,49,218,] { tag:'cor,!', title:'^název akce *', data:akce.nazev }
  field [250,49,50,] { tag:'cor', title:'^pro max.účastníků', data:akce.web_maximum, format:':e' }
  field misto [17,89,218,] { tag:'cor', title:'^místo', data:akce.misto }
//  check ds_order_del [250,70,200,] { tag:'cor', title:'objednávka Domu setkání', format:'n' 
//    func onchange() { if (this && misto=='') { misto= 'Albeřice'; misto.change() }}
//  } 
  label [244,73,205,35] { tag:'cor', css:'bily_ram', skill:'y' 
      title:" objednávka Domu setkání" }
  radio ds_order [247,89,205,19] { tag:'cor,!', title:'objednávka Domu setkání'
    case [0,0,130,] { title:'akce v Domě setkání', value:'1'  }
    case [124,0,85,] { title:'akce jinde', value:'0' }
    func onchange() { misto= this==1 ? 'Albeřice' : ''; misto.change() }
  } 
  field datum_od [18,133,83,] { tag:'cor,!', title:'^začátek *', type:'date', data:akce.datum_od }
  field datum_do [118,133,83,] { tag:'cor,!', title:'^ukončení', type:'date', data:akce.datum_do 
    func onfocus() { if (this=='') datum_do= datum_od; this.change(); }
  }
  check [213,157,90,] { tag:'cor', title:'jen seznam', data:akce.spec }
  check [213,177,90,] { tag:'cor', title:'akce zrušena', data:akce.zruseno }
  check mrop [300,157,60,] { tag:'cor', title:'mrop', data:akce.mrop, title:'mrop', skill:'faan|faa:m' }
  check firm [300,177,60,] { tag:'cor', title:'firm', data:akce.firm, title:'firming', skill:'faan|faa:m' }
  select [367,167,89,] { tag:'cor', title:'^statistika muži', type:'map0', data:akce.statistika,
    options:ms_akce_stat.zkratka, format:'n', skill:'f|f' }
  select [71,169,139,] { tag:'cor,!', title:'typ akce *', type:'map', data:akce.druh,
    options:ms_akce_typ.zkratka, format:'n' }
  radio [213,117,86,35] { tag:'cor', data:akce.strava_oddo, value:'vo'
    case [0,2,83,] { title:'večeře-oběd', expr:'vo' }
    case [0,17,76,] { title:'oběd-oběd', expr:'oo' }
    proc onchange() {} //echo('strava=',this.get) }
  }
  // účetní symbol s nápovědou
  field ss [96,202,54,] { tag:'cor,!', title:'účetní symbol:', data:akce.ciselnik_akce }
//    skill:'faa|faa;caa|caa' }
  button ss_help [157,202,,] { tag:'cor', title:'[fa-question]', skill:'yaa+|yaaw', format:'n'
    help:'správný specifický symbol platby akce'
    func onclick() { alert(`
            <b>3xx</b> - akce mimo MS a DS<hr>
            <b>40x</b> - akce MS/VPS (1 - VPS1, 2 - DC, 7 - VPS2)<hr>
            <b>41x</b> - akce MS (1 - JO, 2 - LK, 3 - PO)<hr>
            <b>42x</b> - akce MS/peč. (2,3 - Hadinka I, 2 - LK)<hr>
            <b>5xx</b> - akce DS (3,4 - Arctos, 14,15 - Botanicus, 25,26 - Krakonoš)
    `)
  }}
  // zobrazení a nastavení akce jako souběžné (stejné datum a místo)
  check soubezna [213,200,120,] { tag:'cor', title:'akce je souběžná', skill:'faa|faan',
    proc onchange() {
      { info.sey.id_hlavni.get;
        [ confirm("opravdu zrušit souběh této akce?"); ask('akce2_soubeh_nastav',form.key,0) ]
      | alert(ask('akce2_soubeh_nastav',form.key)) };
      info.sey.browse_seek; show_akce(form.key);
  }}
  // Změna ceníku
  radio cen_ma [13,254,210,19] { tag:'cor', data:akce.ma_cenik, // skill:'yaa|yaan;caa|caan;faa|faan'
    case [0,0,94,] { title:'používat ceník', expr:'1' }
    case [93,0,115,] { title:'ceny DS ==> ', expr:'2' }
  }
  button [198,255,,] { tag:'cor', title:'Objednávka', skill:'yd2|yd2'
    func onclick() {
      clear();
      if (key_akce==the_duakce) dum.Objednavka.Show(the_duakce);
      else alert('pro zobrazení objednávky musí být pobyt nastaven jako pracovní')
  }}
//  check cen_ma [13,254,93,] { tag:'cor', title:'používat ceník', data:akce.ma_cenik,
//                        format:'', skill:'yaa|yaan;caa|caan;faa|faan'
//    proc onchange() { cen_ver.display(this.get) }
//  }
//  select cen_ver [109,254,100,] {tag:'cor', type:'map', data:akce.ma_cenik_verze,
//    help:'verze ceníků', options:ms_cenik_verze.zkratka, format:'n' }
  button [14,230,,] { tag:'cor', title:'Změnit ceník podle', skill:'yaa|yaan;caa|caan;faa|faan'
    func onclick() {
      cen_copy.enable(1);
      cen_copy.selects(php.akce2_select_cenik(form.key()),',:',0,1)
  }}
  select cen_copy [138,232,139,] {tag:'cor', format:'ntd', help:'vzory ceníků'
    func onchanged() { var msg:text
      msg= php.akce2_change_cenik('dotaz',form.key(),cen_copy.key());
      if (substr(msg,-1,1)=='?') {
        if (confirm(msg)) alert(php.akce2_change_cenik('proved',form.key(),cen_copy.key())); 
      }
      else alert(msg);
  }}
  // jednotná cena / dospělý
  check [13,276,93,] { tag:'cor', title:'používat cenu', data:akce.ma_cenu,
                        format:'', skill:'yaa|yaan;caa|caan;faa|faan' }
  field [109,278,43,] { tag:'cor', data:akce.cena, format:'r', skill:'yaa|yaan;caa|caan;faa|faan',
                        help:'pro 1 dospělého' }
  label [159,283,20,] { tag:'cor', title:'Kč' }
  // ------------------------------------- hnízda
  var hnizda_ok=1
  check is_hnizda [292,230,161,] { tag:'cor' title:'akce je v hnízdech' format:'t'
      skill:'yaa|yaan;caa|caan;faa|faan' 
    func onchange() { 
      hnizda.display(is_hnizda); 
      if (!is_hnizda) { 
        hnizda= ''; hnizda.change() 
      }
  }}
  check [292,252,161,] { tag:'cor' title:'akce je mezinárodní', 
      skill:'yaa|yaan;caa|caan;faa|faan', data:akce.mezinarodni}
  edit hnizda [292,262,161,40] { tag:'cor' title:'^jména hnízd oddělená čárkami' 
      data:akce.hnizda format:'n' 
    func onchanged() { var msg:text
      if (is_hnizda) {
        msg= php.akce2_hnizda_test(hnizda);
      }
      else msg= hnizda;
      if (msg) { hnizda_ok= 0; alert(msg); }
      else hnizda_ok= 1;
  }}
  // ------------------------------------- omezený přístup pro členy týmu akce
  select tym [297,280,157,] {tag:'cor', type:'map+', title:'kdo z týmu má přístup:', data:akce.tym,
      help:'členové týmu akce s právem editace', options:akce_tym.surname }
  // ------------------------------------- web setkani.org 
  label [10,309,384,92] { tag:'cor', css:'bily_ram', skill:'yaaw;faaw' 
      title:" součinnost s www.setkani.org" }
  button [381,316,,] { tag:'cor', title:'[fa-question]', skill:'yaa+|yaaw'
    help:'pokyny pro přihlašování na www.setkani.org'
    proc onclick() { alert("V popisu akce na www.setkani.org je zapotřebí vyplnit ID akce=",a_akce.get)
  }}
  field web_url [82,328,287,] { tag:'cor', title:'url pozvánky', data:akce.web_url, skill:'yaa|yaaw;faa|faaw' 
    proc onchanged() {
      match('page=',this.get); 
      warning("odkaz na akci musí být ve formátu pro uživatele nepřihlášeného k editaci webu!",
              "<br>Tzn. ne ve tvaru www.setkani.org/index.php?page=...");
      this.set(''); this.plain;
    | zmena_web.set(1);
  }}
  check web_prihl[16,344,243,] { tag:'cor', data:akce.web_prihlasky,
                        title:"ONLINE <span class='zluty'>přihlašování</span> na www.setkani.org", skill:'yaa+|yaaw' 
    proc onchange() { zmena_web.set(1);
  }}
  select garant [293,355,79,] {tag:'cor', type:'map', title:'garant' , data:akce.poradatel,
      help:'garant akce, příjemce organizačních mailů', options:akce_garant.zkratka 
    proc onchanged() { zmena_web.set(1);
  }}
  check [16,362,214,21] { tag:'cor', title:"<span class='cerveny'>OBSAZENO</span> - další jako náhradníci", data:akce.web_obsazeno,
                        skill:'yaa|yaaw;faa|faaw', help:"a to i tehdy, když akce není ještě naplněná" }
  // online přihlašování přes plugin ve Wordpressu
  check [16,380,243,] { tag:'cor', data:akce.web_wordpress,
                        title:"ONLINE/WordPress na www.setkani.org", skill:'yaa+|m' }
  field web_wordpress [241,383,119,] { tag:'cor', data:akce.web_wordpress }
  // ------------------------------------- web chlapi.online
  label [10,413,383,70] { tag:'cor', css:'bily_ram', skill:'yaaw;faaw' 
      title:" součinnost s chlapi.online" }
  radio [16,429,266,54] { tag:'cor', data:akce.web_kalendar, //skill:'yaa|yaaw;faa|faaw'
    case [0,0,257,14] { title:"akce není v kalendáři chlapi.cz (default)", value:'0' }
    case [0,17,257,14] { title:"upoutávka v kalendáři <span class='azurovy'>chlapi.cz</span>", value:'1' }
    case [0,34,257,14] { title:"upozornění pro plánování akcí na chlapi.cz", value:'2' }
  }
  button [290,436,109,40] { tag:'cor', title:'Upravit upoutávku na webu chlapi.cz', skill:'yaa+|yaaw;faa+|faaw'
      help:'úprava textu v kalendáři chlapi.online', style:"white-space:normal"
    proc onclick() { 
      page.a_akce.get; ANOTACE.oprava(page.a_akce.get);
  }}
  // ------------------------------------- Zpět a Uložit
  label  [193,493,98,30] { tag:'cor', css:'ae_parm', style:'z-index:1', skill:'yaa+;faa+;caa+' }
  button [199,499,,] { tag:'cor', title:'Zpět', skill:'yaa+|yaa+;faa+|faa+;caa+|caa+'
    help:'Neměnit změněná data'
    func onclick() { akce_zpet() }
  }
  button [245,499,,] { tag:'cor', title:'Uložit', skill:'yaa+|yaan;faa+|faan;caa+|caan'
    help:'Uložit změněná data',
//g    proc onclick() {
//g      akce_lock('off'); 
//g      not(hnizda_ok.get); warning("oprav hnízda")
//g    | form.same
//g    | // oprava
//g      ucast.the_duakce_local.set(0); // inicializace Účastníci
//g      [ zmena_web.get; alert(ask('web_prihlaska',page.a_akce.get,web_url.get,web_prihl.get,garant.key)) ]; 
//g      form.key; form.save; form.load; info.sey.browse_seek
//g    | // přidání Setkání
//g      has_skill("yaa+");
//g      { eq(fdate("Y",datum_od.get),info.rok.get);
//g        [ form.insert; form.load;
//g          info.sey.raise('onrowclick',info.sey.browse_seek(conc('da2.id_duakce=',form.key)))
//g        | alert("Akci se nepovedlo po uložení najít")
//g        ]
//g      | alert("akce musí začínat v nastaveném roce")
//g      }
//g    | // přidání Familia
//g      has_skill("faa+");
//g      { eq(fdate("Y",datum_od.get),info.rok.get);
//g        [ form.insert; form.load;
//g          info.sey.raise('onrowclick',info.sey.browse_seek(conc('da2.id_duakce=',form.key)))
//g        | alert("Akci se nepovedlo po uložení najít")
//g        ]
//g      | alert("akce musí začínat v nastaveném roce")
//g      }
//g    | // přidání CPR
//g      has_skill("caa+");
//g      { eq(fdate("Y",datum_od.get),info.rok.get);
//g        [ form.insert; form.load;
//g          info.sey.raise('onrowclick',info.sey.browse_seek(conc('da2.id_duakce=',form.key)))
//g        | alert("Akci se nepovedlo po uložení najít - není skryta v jiném levém menu?")
//g        ]
//g      | alert("akce musí začínat v nastaveném roce")
//g      }
//g  } }
    func onclick() { 
      var rok: number, jiny_rok:number, pridat_rok:number, miss:text, ida:number, upd:object
      if (!hnizda_ok) { warning("oprav hnízda"); return }
      if (form.same()) return;
      // oprava
      ida= form.key();
      akce_lock('off'); 
      ucast.the_duakce_local= 0; // inicializace Účastníci
      if (zmena_web) alert(php.web_prihlaska(page.a_akce,web_url,web_prihl,garant.key())); 
      if (ida) { // oprava
        if (ds_order || ds_order.changed()) {
          // doplňky pro Dům setkání: oprava data nebo transformace z akce "jinde" na akci v DS
          upd= {};
          if (ds_order.changed()) upd.ds_order= ds_order; 
          if (datum_od.changed()) upd.datum_od= datum_od;
          if (datum_do.changed()) upd.datum_do= datum_do;
          php.dum_objednavka_upd(ida,upd)
        }
        form.save(); form.load(); info.sey.browse_seek()
      }
      else { // přidání nové akce
        // kontrola resp. přepnutí roku
        if (missing('!')) return;
        pridat_rok= 0; jiny_rok= 0;
        rok= fdate("Y",datum_od);
        if (rok!=info.rok) {
          jiny_rok= 1;
          if (!js.in_selects(&info.rok,rok)) {
            if (choose(`V roce ${rok} ještě není žádná akce, mám tento rok založit?`,
              "Ano - založ nový rok:jo,Ne - to byl překlep:ne")=='ne') {
              return;
            }
            pridat_rok= 1;
          }
        }
        // založ akci
        if (ds_order) {
          // doplňky pro Dům setkání: vytvoř záznam v tx_gnalberice_order 
          access= my_org; access.change(); // je to akce organizace 
          ida= form.insert(); //form.load();
          php.dum_objednavka_make(ida)
        }
        else {
          access= my_org; access.change();
          ida= form.insert(); //form.load();
        }
        if (pridat_rok) re_selects_rok(rok);     
        if (jiny_rok) { the_rok= rok; akce_roku(rok); }
        info.sey.raise('onrowclick',info.sey.browse_seek(`da2.id_duakce=${ida}`));
      }
    } 
    func missing(tg) { var miss:text, fld:ezer
      miss= '';
      for (fld of form.tagged(tg)) {
        echo(`fld:${fld.title}=${fld.get()}`);
        if (!fld.get()) miss= `${miss} + '${fld.title}'`;
      }
      if (miss) warning(`položka ${miss} je povinná`);
      return miss;
    }
  }
  // jen pro YF,CR - přidání a zrušení akce
  label  [10,493,164,30] { tag:'cor', css:'ae_parm', style:'z-index:1', skill:'faan;caan;yaan' }
  button [16,499,,] {tag:'cor', title:'Nová akce', format:'c', skill:'faan|faan;caan|caan;yaan|yaan'
//g    proc onclick() {
//g      eq(my_org.get,1);
//g      // Setkání
//g      { has_skill('yaan'); {
//g          eq(the_source.get,'google'); alert("Vkládat lze jen do seznamu všech akcí")
//g        | gt(info.rok.get,2009); alert("Vkládat lze jen 'historické akce', po roce 2010 jen přes intranet")
//g        | form.init; access.set(1); access.change; info.sey.blur(1)
//g        }
//g      | alert("Nemáš oprávnění vytvořit novou akci (kontaktuj administrátora např. Martina)")
//g      }
//g    | eq(my_org.get,2);
//g      // Familia
//g      form.init; access.set(2); access.change; info.sey.blur(1)
//g    | eq(my_org.get,4,8,16);
//g      // CPR, MS - samostatné db
//g      form.init; access.set(my_org.get); access.change; 
//g      nazev.change; misto.change; datum_od.change; datum_do.change;
//g      info.sey.blur(1)
//g  } }
    func onclick() { var fld:ezer
      form.init(); 
      for (fld of form.tagged('!')) {
        fld.change();
      }
//      access= my_org; access.change(); 
//      nazev.change(); misto.change(); datum_od.change(); datum_do.change();
      info.sey.blur(1);
//      if (my_org==1) { // pro Setkání je povinný SS a přísupné propojení s DS
//        ss.change();
//        ds_order.display(1); ds_order.change(); 
//      }
  } }
  button [91,499,,] {tag:'cor', title:'Smazat akci', format:'c', skill:'faan|faan;caan|caan;yaan|yaan'
    func onclick() { var ret:object, msg:text
      ret= php.akce2_delete_confirm(form.key());
      if (ret.zrusit && confirm(ret.zrusit)) {         // fakt zrušit + název
        if (ret.ucastnici && confirm(ret.ucastnici) ) { // pokud akce má účastníky 
          msg= php.akce2_delete(form.key(),ret,1);      // tak jen zrušíme
        }
        else {
          msg= php.akce2_delete(form.key(),ret);        // jinak zcela smažeme
          alert(msg);
        }
        lst_refresh();
      }
  } }
  // jen pro YF - zápis roku iniciace účastníkům akce - musí být akce.mrop=1 
  label  [310,493,118,31] { tag:'corm,corf', css:'ae_parm', format:'n', style:'z-index:1',         skill:'faan' }
  button [316,499,,] {tag:'corm', title:'Potvrzení iniciace', format:'nc', style:'z-index:1', skill:'faan|faa:m'
    proc onclick() { var ret:object
      has_skill('faa:m');
      ret.set(ask('akce2_confirm_mrop',form.key,0));
      { ret.ok;
        [ confirm(ret.msg); ret.set(ask('akce2_confirm_mrop',form.key,1)); alert(ret.msg) ]
      | alert(ret.msg)
      }
  } }
  button [316,423,,] {tag:'corf', title:'Potvrzení firmingu', format:'nc', style:'z-index:1', skill:'faan|faa:m'
    proc onclick() { var ret:object
      has_skill('faa:m');
      ret.set(ask('akce2_confirm_firm',form.key,0));
      { ret.ok;
        [ confirm(ret.msg); ret.set(ask('akce2_confirm_firm',form.key,1)); alert(ret.msg) ]
      | alert(ret.msg)
      }
  } }
  # ------------------------==> . online přihlášky
  var p_json: object // dekódovaný obsah akce.web_online
  func p_show() { var ch:ezer
    if (has_skill('m')) {
      p_TEST.enable(1); p_MAIL.enable(1); web_online.enable(1);
    }
    p_json= {};
    for (ch of form.tagged('pri')) {
      if (js.get_type(ch)=='check') ch.init();
    }
    if (!web_online) { // vytvoř prázdný popis přihlášky
      p_json= {p_enable:0}; 
      web_online= json_encode(p_json); web_online.change();
    }
    p_json= json_decode(web_online);
    copy_by_name(p_json,form);
//    p_enable= p_json.enable;
    p_href= p_enable ? php.akce_prihlaska(page.a_akce,'a',
        conc(p_TEST?`&test=${p_json.p_TEST}`:'',p_MAIL?'':'&mail=0')) : '';
  }
  check p_enable [13,30,150,] { tag:'pri', title:'povolit online přihlášení', value:'0', 
      css:'ae_parm', style:'padding-bottom:2px;z-index:1'  
    func onchange() { p_json.p_enable= this; web_online.change(); }
  }
  label p_href [181,35,223,20] { tag:'pri', style:'text-align:right' }
  check p_TEST [411,30,50,] { tag:'pri', title:'TEST', value:'0', format:'d',
      help:'TEST=0 (dflt) provede db operace bez zobrazení, TEST=1 zobrazi i provede, TEST>1 db operace jen zobrazí (nutný zápis do JSON)' 
    func onchange() { p_json.p_TEST= this; web_online.change(); }}
  check p_MAIL [411,46,50,] { tag:'pri', title:'MAIL', value:'1', format:'d', 
      help:'MAIL=1 (dflt) posílá maily, MAIL=0 je pouze zobrazuje (pro chráněné IP adresy)' 
    func onchange() { p_json.p_MAIL= this; web_online.change(); }}
  # -----------==> .. parametrizace přihlášky
  check p_pozde [13,55,300,] { tag:'pri', title:'od teď přihlášené brát jen jako náhradníky', value:'0' 
    func onchange() { p_json.p_pozde= this; web_online.change(); }}
  check p_rodina [13,80,413,] { tag:'pri', title:'<b>rodinné přihlášení</b>', value:'0' 
    func onchange() { p_json.p_rodina= this; web_online.change(); }}
  check p_pro_par [30,101,400,] { tag:'pri', title:'pro manželský pár, výjimečně s dítětem a jeho pečovatelem', value:'0' 
    func onchange() { p_json.p_pro_par= this; web_online.change(); }}
  check p_pro_LK [30,123,400,] { tag:'pri', title:'pro manželský pár s dětmi a osobními pečovateli na LK MS', value:'0' 
    func onchange() { p_json.p_pro_LK= this; web_online.change(); }}
  check p_rod_adresa [30,145,400,] { tag:'pri', title:'umožnit kontrolu a úpravu rodinné adresy', value:'0' 
    func onchange() { p_json.p_rod_adresa= this; web_online.change(); }}
  check p_obcanky [30,167,400,] { tag:'pri', title:'umožnit kontrolu a úpravu číslo obč. průkazu', value:'0' 
    func onchange() { p_json.p_obcanky= this; web_online.change(); }}
  check p_jednotlivec [13,196,400,] { tag:'pri', title:'<b>přihlášení jednotlivce</b>', value:'0', format:'d' 
    func onchange() { p_json.p_jednotlivec= this; web_online.change(); }}
  check p_oso_adresa [30,217,400,] { tag:'pri', title:'osobní adresa', value:'0', format:'d' 
    func onchange() { p_json.oso_adresa= this; web_online.change(); }}
  check p_registrace [13,244,400,] { tag:'pri', title:'povolit registraci s novým mailem', value:'0' 
    func onchange() { p_json.p_registrace= this; web_online.change(); }}
  check p_souhlas [13,264,400,] { tag:'pri', title:'vyžadovat souhlas (GDPR)', value:'0' 
    func onchange() { p_json.p_souhlas= this; web_online.change(); }}
  check p_ukladat [13,284,400,] { tag:'pri', title:'povolit průběžné ukládání přihlášky + znovunačtení při přihlášení', value:'0' 
    func onchange() { p_json.p_ukladat= this; web_online.change(); }}
  check p_oprava [13,304,400,] { tag:'pri', title:'povolit načtení a opravu již uložené přihlášky', value:'0' 
    func onchange() { p_json.p_oprava= this; web_online.change(); }}
  // specifické varianty podle typu akce
  label [13,332,400,20] { tag:'pri' title:'<b>Nastavení pro akce MS</b>' }
  check p_obnova [13,352,400,] { tag:'pri', title:'OBNOVA MS: neúčastníky aktuálního LK brát jako náhradníky', value:'0' 
    func onchange() { p_json.p_obnova= this; web_online.change(); }}
  check p_vps [13,374,400,] { tag:'pri', title:'OBNOVA MS: nastavit funkci VPS podle letního kurzu', value:'0' 
    func onchange() { p_json.p_vps= this; web_online.change(); }}
  check p_upozorneni [13,397,400,] { tag:'pri', title:'LETNÍ KURZ MS: vyžadovat akceptaci upozornění', value:'0' 
    func onchange() { p_json.p_upozorneni= this; web_online.change(); }}
  check p_dokument [13,420,400,] { tag:'pri', title:'LETNÍ KURZ MS: vytvořit PDF a uložit jako dokument k pobytu', value:'0' 
    func onchange() { p_json.p_dokument= this; web_online.change(); }}
  // ruční změna JSON
  edit web_online [13,508,438,60] { tag:'pri', title:'^JSON popis přihlášky', data:akce.web_online,
      format:'dt'
  func onchanged() { 
    if (confirm('uložit ruční změnu JSON popisu přihlášky?')) {
      form.save(); p_show(); }
    else form.plain();
  }}
  // Zpět a Uložit
  label  [13,451,98,30] { tag:'pri', css:'ae_parm', style:'z-index:1', skill:'yo' }
  button [19,457,,] { tag:'pri', title:'Zpět', help:'Neměnit změněná data', skill:'yo|yo'
    func onclick() { akce_zpet(); p_show(); }
  }
  button [65,457,,] { tag:'pri', title:'Uložit', help:'Uložit změněná data', skill:'yo|yo'
    func onclick() {
      akce_lock('off'); 
      if (form.key() && web_online.changed()) {
        web_online= json_encode(p_json); web_online.change();
        form.save(); form.load(); p_show();
      }
  }}
  button [135,457,,] { tag:'pri', title:'Přehled nedokončených přihlášek', skill:'yo|yo'
    func onclick() { PRIHLASKY.prehled(0) }
  }
  button [339,457,,] { tag:'pri', title:'... dokončených', skill:'yo|yo'
    func onclick() { PRIHLASKY.prehled(1) }
  }
  # ------------------------==> . ceník
  proc c_show() { // výběr a šířky sloupců podle akce.access a akce.ma_cenik_verze
    // access: 1,2 pro db2 - nepoužívá cenik.typ,   používá akce.ma_cenik_verze s hodnotou 0|1
    //                       lze měnit sloupce od-do za dph
    eq(access.get,1,2);
    c.typ.width(0);
//    { eq(cen_ver.key,0,1); // verze 2016 i 2017
      c.pol.width(156); c.za_2016.width(38); form.display(eq(zalozka.get,'cen'),'ex0');
//      c.za_2017.width(0); c.pro_2017.width(0); form.display(0,'ex1');
//#     | eq(cen_ver.key,1); // verze 2017
//#       c.pol.width(121); c.pro_2017.width(45); c.za_2017.width(27); form.display(eq(zalozka.get,'cen'),'ex1');
//#       c.za_2016.width(0); form.display(0,'ex0');
//    }
    // access: 4|8 pro cr|ms    -   používá cenik.typ, nepoužívá akce.ma_cenik_verze
  | eq(access.get,4,8,16);
    c.pol.width(100); c.typ.width(50); c.za_2016.width(40);
    form.display(0,'ex');
  | ge(access.get,org_ds.get);
  | warning("chybně definovaný ceník");
  }
  browse c [10,25,,] { tag:'cen', rows:26, qry_rows:1, css_rows:"barva,1:sedy"
    // pro y;f;c
    show id_cenik { data:cenik.id_cenik }
    show id_akce  { data:cenik.id_akce }
    show polozka  { data:cenik.polozka }
    show poradi [,,25,] { title:'N', help:'pořadí ve faktuře', data:cenik.poradi, format:'ruq*s+'
      proc onsubmit() { this.save } }
    show barva { expr:"IF(LEFT(polozka,1)='-',1,0)" }
    show pol [,,155,] { title:'položka', help:'... do faktury', data:cenik.polozka, format:'tuq*s'
      proc onsubmit() { this.save } }
//     pro y;f verze 2017
//    show pro_2017 [,,0,] { title:'pro', data:cenik.pro, format:'urq=s',
//      help:'U=účastník, S=~VPS, D=dítě, d=dítě s chůvou, C=chůva, p=pom.peč., H=host'
//      proc onsubmit() { this.save } }
//    show za_2017 [,,0,] { title:'za', data:cenik.za, format:'urq=s',
//      help:'n=noc, s=snídaně, o=oběd, v=večeře, p=pobyt, a=aktivita'
//      proc onsubmit() { this.save } }
    // pro c a y;f verze 2016
    show za_2016 [,,0,] { title:'za', data:cenik.za, format:'urq=s',
      help:'noc:N, strava:(s=snídaně/o=oběd/v=večeře)(c=celá/p=poloviční), pobyt:P, slevy:S'
      proc onsubmit() { this.save } }
    // pro c
    show typ [,,0,] { title:'typ', data:cenik.typ, map_pipe:ms_akce_ubytovan.zkratka,
      format:'urq#s', help:'typ ubytování: 1,2,3,...'
      proc onsubmit() { this.save } }
    // pro y;f;c
    show cena [,,43,] { title:'cena', help:'cena v Kč vč. DPH', data:cenik.cena, format:'urq=s:e'
      proc onsubmit() { this.save } }
    // jen y;f
    show dph [,,0,] { title:'dph', help:'DPH v Kč', data:cenik.dph, format:'urq=s:e'
      proc onsubmit() { this.save } }
    // pro y;f;c
    show od [,,21,] { title:'≥', data:cenik.od, format:'urq=:e', help:'od tohoto věku (včetně narozenin)'
      proc onsubmit() { this.save } }
    show do [,,21,] { title:'<', data:cenik.do, format:'urq=:e', help:'do tohoto věku (do narozenin)'
      proc onsubmit() { this.save } }
    // funkce a menu
    func Load() {
      if (hnizda)
        c.browse_load(`id_akce=${the_duakce} AND hnizdo=${hnizdo.key()}`); 
      else
        c.browse_load(`id_akce='${the_duakce}'`); 
    }
    menu { type:'context', skill:'yaa+;faa+;caa+'
      item { title:'přidat nový řádek'
        func onclick() { 
          c.browse_seek(conc('id_cenik=',cenik.insert_record(
          {id_akce:the_duakce, polozka:'?', hnizdo:hnizda ? hnizdo.key() : 0})));
      } }
      item { title:'odebrat běžný řádek'
        func onclick() { 
          if (confirm(`opravdu odebrat položku ${polozka} ?`)) {
            cenik.delete_record(conc('id_cenik=',id_cenik));
            Load()
          }
      } }
    }
    proc onclick() {
      eq(access.get,1,2);
      od.width; od.width(0); do.width(0); dph.width(43)
    | od.width(21); do.width(21); dph.width(0)
    }
  }
  // export ceníku a výběr hnízda
  const bc=40, lc=335
  label  [lc+19,24,102,57] { tag:'b,cen', css:'ae_parm', style:'z-index:1' }
  select hnizdo [lc+28,31,86,] { tag:'b,cen', title:'' format:'t' type:'map' 
    func onchanged() { 
      c.Load(); 
    }
  }
  button [lc+28,bc+16,,] { tag:'b,cen', title:'Export ceníku', format:'c'
    proc onclick() {
      var ret: object
      ret.set(ask('akce2_platby_xls',a_akce.get));
      ret.ok; alert(ret.xhref);
    | warning(ret.msg);
  } }
  label  [lc+20,bc+52,211,] { tag:'b,cen,ex0', title:"příklady poplatků" }
  button [lc+20,bc+68,,] { tag:'b,cen,ex0', title:'pár', proc onclick() { test_ceniku(2,0,0,0,0) }}
  button [lc+20,bc+95,,] { tag:'b,cen,ex0', title:'pár+dítě', proc onclick() { test_ceniku(2,1,0,0,0) }}
  button [lc+20,bc+123,,] { tag:'b,cen,ex0', title:'pár+kojenec', proc onclick() { test_ceniku(2,0,0,1,0) }}
  button [lc+20,bc+150,,] { tag:'b,cen,ex0', title:'dítě do 6 let', proc onclick() { test_ceniku(0,0,1,0,0) }}
  button [lc+20,bc+177,,] { tag:'b,cen,ex0', title:'kojenec', proc onclick() { test_ceniku(0,0,0,1,0) }}
  button [lc+20,bc+204,,] { tag:'b,cen,ex0', title:'pečovatel', skill:'y|y', proc onclick() { test_ceniku(0,0,0,0,1) }}
  func test_ceniku(dosp,Deti,deti,koje,peco) { var cena:object
    if (the_duakce==a_akce) {
      if (the_soubeh==1)
        cena= php.akce2_vzorec_soubeh(0,the_duakce,the_soubezna,hnizdo.key(),dosp,Deti+deti,koje,peco);
      elseif (the_soubeh==2)
        cena= php.akce2_vzorec_soubeh(0,the_hlavni,the_duakce,hnizdo.key(),dosp,Deti+deti,koje,peco);
      else
        cena= php.akce2_vzorec_test(a_akce,hnizdo.key(),dosp,Deti,deti,koje,peco);
      alert(cena.navrh)
    }
    else alert("pro testování ceníku musí být akce nastavena jako pracovní")
  }
  // výpočet expr
//  label  [lc+20,bc+230,211,] { tag:'b,cen', title:"+ ceny na web" }
//  button [lc+20,bc+247,,] { tag:'b,cen', title:'manželský pár',    
//    proc onclick() { expr_ceniku("2*N*Nl+2*N*sc+2*O*oc+2*N*vc+2*P",99,this.title) }}
//  button [lc+20,bc+267,,] { tag:'b,cen', title:'dítě nad 6,celá',  
//    proc onclick() { expr_ceniku("  N*Nl  +N*sc  +O*oc  +N*vc+1*PD",99,this.title) }}
//  button [lc+20,bc+287,,] { tag:'b,cen', title:'dítě nad 6,dětská', 
//    proc onclick() { expr_ceniku("  N*Nl  +N*sp  +O*op  +N*vp+1*PD",99,this.title) }}
//  button [lc+20,bc+307,,] { tag:'b,cen', title:'dítě od 3 do 6,dětská', 
//    proc onclick() { expr_ceniku("         N*sp  +O*op  +N*vp+1*Pd",99,this.title) }}
//  button [lc+20,bc+327,,] { tag:'b,cen', title:'dítě do 3,bez',    
//    proc onclick() { expr_ceniku("                            1*Pk",99,this.title) }}
//  button [lc+20,bc+347,,] { tag:'b,cen', title:'VPS se slevou',    
//    proc onclick() { expr_ceniku("2*N*Nl+2*N*sc+2*O*oc+2*N*vc+2*P-1*Sv",99,this.title) }}
//  button [lc+20,bc+367,,] { tag:'b,cen', title:'PPS se slevou',    
//    proc onclick() { expr_ceniku("2*N*Nl+2*N*sc+2*O*oc+2*N*vc+2*P-1*Sp",99,this.title) }}
//#   // výpočet expr - EXPERIMENTÁLNÍ
//#   label  [lc+20,bc+39,211,] { tag:'b,cen,ex1', title:"+ ceny na web" }
//#   button [lc+20,bc+56,,] { tag:'b,cen,ex1', title:'manželský pár',    proc onclick() {
//#     expr_ceniku("2*N*Un +2*N*US+2*O*UO+2*N*UV +2*Up",30,this.title) }}
//#   button [lc+20,bc+76,,] { tag:'b,cen,ex1', title:'dítě od 10,celá',  proc onclick() {
//#     expr_ceniku("  N*Dn   +N*DS +O*DO  +N*DV +1*Dp",10,this.title) }}
//#   button [lc+20,bc+96,,] { tag:'b,cen,ex1', title:'dítě 6-10,dětská', proc onclick() {
//#     expr_ceniku("  N*Dn   +N*Ds  +O*Do  +N*Dv +1*Dp",6,this.title) }}
//#   button [lc+20,bc+116,,] { tag:'b,cen,ex1', title:'dítě do 6,dětská' proc onclick() {
//#     expr_ceniku("          N*Ds  +O*Do  +N*Dv +1*Dp",3,this.title) }}
//#   button [lc+20,bc+136,,] { tag:'b,cen,ex1', title:'dítě do 3,bez'    proc onclick() {
//#     expr_ceniku("                            1*Dp",2,this.title) }}
//#   button [lc+20,bc+156,,] { tag:'b,cen,ex1', title:'VPS ve službě',    proc onclick() {
//#     expr_ceniku("2*N*Sn +2*N*SS+2*O*SO+2*N*SV +2*Sp + 1*Sa",30,this.title) }}
  func expr_ceniku(expr,vek,tit) { // verze 2016 i verze 2017
    alert(conc('<b>',tit,'</b><br><br>',php.akce2_vzorec_expr(a_akce,hnizdo.key(),expr),
      '<br><br>(N je počet nocí, O je počet obědů)'))
  }
//  proc expr_ceniku(expr,vek,tit) {
//    eq(cen_ver.key,0,1); // verze 2016 i verze 2017
//    alert(conc('<b>',tit,'</b><br><br>',ask('akce2_vzorec_expr',a_akce.get,expr),
//      '<br><br>(N je počet nocí, O je počet obědů)'))
//#   | eq(cen_ver.key,1); // verze 2017
//#     alert(conc(tit,': ',ask('akce2_vzorec_expr_2017',a_akce.get,expr,vek),
//#       '<br><br>(N je počet nocí, O je počet obědů)'))
//  }
/*  
//  # ------------------------==> . archiv
//  # tags:   doc_show=pro zobrazení složky, doc_crea=nabídka vytvoření složky
//  var autorized= 0
//  var archiv_slozka:object
//  var cloud:text, folder:text
//  // výzva k přihlášení do cloudu
//  button login [15,25,,] { tag:'doc_log', title:'přihlásit k Google Disk (intranet)', format:'n', skill:'y|y'
//    proc onclick() {
//      warning("answer@smidek.eu: ",function('caller','return Ezer.Google.authorize(caller);',this));
//    }
//    proc onautorize(ok) { autorized.set(ok);
//      ok; form.display(0,'doc_log'); archiv.ukaz(akce_get('archiv'));
//      warning("přístup na Goggle Disk povolen")
//    | warning("přístup na Goggle Disk zamítnut")
//  }}
//  // vytvoření archivu
//  button archiv [15,45,,] { tag:'doc_crea', title:'vytvořit', format:'n',
//    skill:'faa|faan;caa|caan;yaa|yaan'
//    const gd = "https://drive.google.com/folderview?id="
//    proc ukaz(_folder) { // ukáže tlačítko jako vytvořit pokud akce.archiv='' jinak zobrazí folder
//      has_skill('y'); not(autorized.get);
//      form.display(1,'doc_log'); form.display(0,'doc_crea|doc_show');
//      return
//    | ukaz_syn(_folder)
//    }
//    proc ukaz_syn(_folder) { // ukáže tlačítko jako vytvořit pokud akce.archiv='' jinak zobrazí folder
//      _folder; cloud.set(substr(_folder,0,2)); folder.set(substr(_folder,2));
//      { eq(cloud.get,'H:');
//        popis.set(conc("Archiv pro akce roku ",akce_get('rok')," s kódem ",akce_get('kod'),
//          " je obsažen ve složce <b>",folder.get,"</b> na serveru"));
//        drop.init(folder.get,'H:','.*');
//      | eq(cloud.get,'G:');
//        popis.set(conc("Archiv pro akce roku ",akce_get('rok')," s kódem ",akce_get('kod'),
//          " je obsažen na <a target='GD' href='",gd.get,folder.get,"'>Google Disku</a>"));
//        drop.init(folder.get,'G:');
//      | warning("archiv '",_folder,"' nelze zobrazit");
//      };
//      drop.lsdir;
//      form.display(1,'doc_show'); form.display(0,'doc_crea');
//    | drop.init('?');
//      form.display(0,'doc_show'); form.display(1,'doc_crea');
//    }
//    proc onclick() { var path: text, _folder:text
//      [ koren.key | alert("Před vytvořením je nutné zvolit kořen složky"); return ];
//      path.set(conc(koren.get,'/',path_rok.get,'/',path_kod.get));
//      confirm("Mám vytvořit složku pro dokumenty akce<br><b>",
//        akce_get('nazev'),'</b> ve složce<br><b>',path,'</b> ?');
//      // vytvoření složky na serveru
//      cloud.set(archiv_slozka.get('hodnota'));
//      drop.init(archiv_slozka.get('popis'),cloud.get);
//      _folder.set(drop.mkdir(path_rok.get)); // přepne na vytvořenou složku
//      _folder.set(drop.mkdir(path_kod.get)); // takže tato je v ní vnořená
//      akce_set_archiv(cloud.get,_folder); ukaz(conc(cloud.get,_folder))
//    }
//  }
//  select koren [90,45,150,] { tag:'doc_crea', title:'^kořenná složka', type:'map', format:'nt',
//    options:akce_slozka.zkratka
//    proc onchanged() {
//      archiv_slozka.set(ask('select_object','hodnota,ikona,barva,popis','_cis',
//        conc("druh='akce_slozka' AND data=",this.key)));
//      path_rok.set(replace(archiv_slozka.get('ikona'),'{rok}',akce_get('rok')));
//      path_kod.set(replace(archiv_slozka.get('barva'),
//        '{kod}',akce_get('kod'),'{nazev}',akce_get('nazev')));
//    }
//  }
//  field path_rok [250,45,95,] { tag:'doc_crea', title:'^složka pro rok', format:'dn' }
//  field path_kod [355,45,95,] { tag:'doc_crea', title:'^podsložka akcí', format:'dn' }
//  // zobrazení archivu
//  label popis [15,45,440,] { tag:'doc_show', format:'n' }
//  label [15,60,455,] { tag:'doc_show', format:'n',
//    title:'archivované soubory svázané s akcí - lze k nim přidat další přetáhnutím myší, zrušit a stáhnout je lze kontextovým menu' }
//  label drop [15,95,435,310] { tag:'doc_show', type:'drop', format:'n'
//    proc ondrop(f) {
//      gt(f.size,5242880); alert('odmítnuto ',f.name,' má více jak 5MB');
//      return(0)
//    | return(1); // return(conc(prefix.get,f.name)) - případné přejmenování
//    }
//    proc onload(f) { warning("přeneseno:",f.name) } // po dokončení přenosu
//    proc onerror(e) { warning(e.msg); return(1) } // vrácení 0 způsobí standardní hlášení chyby
//    proc onmenu(op,title,ref) { // op=remove|remove-all
//      eq(cloud.get,'G:');
//      [ eq(op,'viewer'); [ function('ref',"window.open(ref,'viewer')",ref) ]
//      | eq(op,'remove'); [ function('ref',"var request=gapi.client.drive.files.trash({'fileId':ref});request.execute(function(resp){});",ref) ]
//      | warning('zatím neimplementovaná operace') ]
//    | eq(cloud.get,'H:');
//      [ eq(op,'viewer'); [ function('ref',"window.open(ref,'viewer')",ref) ]
//      | eq(op,'remove'); [ confirm("Opravdu smazat ",title," ?");
//                           warning(ask('drop_unlink',folder.get,ref,'H:')) ] // odebrání souboru
//      | warning('zatím neimplementovaná operace') ];
//      drop.lsdir;
//    }
//  }
*/  
  # ------------------------==> . dokumenty na Synology
  use folders:  area _folders { tag:'syn' }
  var dcloud='U:',    // U: je třeba nastavit Ezer.options.path_files_u na složku obsahující droot
      abase:text,     // Ezer.options.path_akce
      aroot:text,     // absolutní adresa Ezer.options.path_files_u (má / na konci)
      droot='docs',   // kořen pro filebrowser 
      dfold='docs'    // zobrazená podsložka droot (bez koncového /)
  label [18,25,300,40] {tag:'syn' title:"Přidávat soubory lze přetažením myší, pravým tlačítkem lze přidávat podsložky, kliknutím stáhnout nebo zobrazit (sdílet a mazat lze jen z prostředí Synology)" }
  button [324,42,,] {tag:'syn' title:'[fa-briefcase] založit archiv' 
    proc onclick() { var kod:number
      kod.set(akce_get('kod'));
      kod;
      ask('tut_mkdir',abase.get,akce_get('rok'),kod,akce_get('nazev'));
      DocRefresh; DocBrowse
    | not(kod); alert("akce musí mít definovaný číselný kód tzn. účetní symbol")
  }}
  button [424,42,,] {tag:'syn' title:'[fa-question]' 
    proc onclick() {
      DocBrowse
  }}
  proc DocInit() { 
    abase.set(function("return Ezer.options.path_akce;"))
  }
  proc DocBrowse() { 
    fdrop.off;
    info.sey.ma_archiv.load('tut_ma_archiv','akce','id_duakce',abase.get);
  }
  proc DocRefresh() {
    DocShow(akce_get('rok'),akce_get('kod'))
  }
  proc DocShow(_rok,_kod) { var y:object
//    clear;
    _rok; _kod;
    y.set(ask('tut_dir_find',abase.get,_rok,_kod));
    y.ok; 
//    echo(debug(y));
    aroot.set(function('aroot',"return Ezer.options.path_files_u=aroot;",y.aroot)); 
    droot.set(y.droot); 
    dfold.set(droot.get);
    folders.Load(aroot.get,droot.get); 
    files.Load;
    fdrop.Init;
    fdrop.on;
  | folders.Init;
    files.Init;
  }
  # složky - tree area
  area _folders { title:"<div id='files' style='left:530px;top:112px;width:160px;height:370px;border-right:1px solid grey;position:absolute;z-index:1'></div>"
    var click_path:text
    proc tree_onclick(fid,id,dat,com,x,path,txt) { var i:text
//      echo("tree_onclick: txt=",txt," id=",i," path=",path);
      page.dfold.set(replace(path,'\|','/'));
      page.fdrop.Init;
      page.files.Load;
    }
    proc tree_oncontextmenu(fid,id,dat,com,x,path,txt) { 
      click_path.set(replace(path,'\|','/'));
      echo('tree:',click_path.get);
    }
    menu { type:'context'
      item { title:'vložit podsložku', proc onclick() { var folder:text
        folder.set(prompt2('název podsložky:'));
        ask('tut_mkdir',page.abase.get,akce_get('rok'),0,click_path.get,folder);
        page.DocRefresh
      }}
    }
    proc Load(_a,_b) { 
      this.tree_show(ask('tut_dir',_a,_b),'files',0,°{mode:'folders',theme:'mootree.gif'}); 
      this.tree_expand(1) 
    }
    proc Init() { 
      this.tree_show(°{prop:°{id:'<žádný dokument>'}},'files',0,°{mode:'folders',theme:'mootree.gif'}); 
    }
  }
  # soubory - seznam
  label files [179,72,258,360] {tag:'syn' css:'files' style:"z-index:3;padding:5px"
    proc Load() { fdrop.off; this.set(ask('tut_files',aroot.get,dfold.get)); echo(this.self)}
    proc Init() { this.set(''); }
    proc Test() { alert('au')}
    proc Menu(op,name,ref) { 
      eq(op,'viewer'); function('url',"window.open(url,'viewer')",ask('tut_file_url',ref,name))
    }
  }
  # soubory - drop area
  label fdrop [192,90,241,50] {tag:'syn' type:'drop' title:'vlož soubor sem' css:'drop' style:"z-index:2"
    proc Init() { // podsložka {root} s lomítkem jen na konci
      fdrop.init(dfold.get,dcloud.get); 
    }
//    proc ondrop(f) {                                                  // možnost odmítnutí přenosu
//      eq(f.name,'ugly.jpg'); warning('fuj ',f.name); return(0)        // navrácením 0
//    | gt(f.size,5242880); warning('odmítnuto ',f.name,' má více jak 5MB'); return(0)
////      | warning('přenášeno:',f.name)                                   // jméno nemusí být ASCII
//    | return(f.name);
//    }
    proc onload(f) { // po dokončení přenosu, jméno bude ASCII
      files.Load;
      off;
    } 
    proc onerror(e) { // funkce onerror nesmí obsahovat asynchronní kód a lokální proměnné, ale přes call lze zavolat už cokoliv
      warning(e.msg); return(1) // vrácení 0 způsobí standardní hlášení chyby
    }
    proc on() {
      function('f',
        "jQuery('div.files').on({dragover: evt => { jQuery('div.drop').css({zIndex:4});return false; }})",
        page.files);
    }
    proc off() {
      function('f',
        "jQuery('div.drop').css({zIndex:2});",
        page.files);
    }
  }
  # --------------------------- pozadí stránky a kontextové menu nakonec
  label frame [2,16,443,385] { title:'', css:'ae_work page' }
  menu detail { type:'context' join:frame
    item { title:'ukázat změny', func onclick () {
      if (key_akce) track.back_show('akce',key_akce) 
    } }
    item { title:'-ukázat data', skill:'m', 
      func onclick() { js.call_root_func_par('syst_tab_rec_show',array('akce',key_akce),&this,'onclick_')}
      func onclick_() {}
    }
//    func test_onclick () {
//      if (key_akce) track.back_show('akce',key_akce) 
//    }
  }
}
# ==> VÝBĚR AKCE
form _info [,,*,50] {
  # ------------------------------------------------------------------------==> . seznam Dum setkání
  browse dum [0,36,200,500] { tag:'d', rows:28, qry_rows:0, buf_rows:120, key_id:'id_order', 
      css_rows:"zruseno,0:,1:skrtnuty" // akce je: 1=zrušená
      optimize:{ask:'dum_browse_orders'}
    show id_order [,,40,] { title:'objednávka', format:'rq=' }
    show id_akce  [,,40,] { title:'akce', format:'rq=' 
        css_cell:'access,0:,1:ezer_ys,64:ezer_ds,65:ezer_ys ezer_ds'}
    show access
    show curr 
    show objednal [,,100,] { title:'objednatel', format:'tq*' 
        css_cell:"curr,1:curr_akce"}
    show nazev [,,100,] { title:'název', format:'tq*' }
    show osob [,,50,] { title:'osob', format:'r' }
    show od [,,65,] { title:'od', sql_pipe:'sql_date1', format:'rq*' }
    show do [,,65,] { title:'od', sql_pipe:'sql_date1', format:'rq*' }
    show zruseno
    func Load(idd) {
      this.browse_load(`YEAR(FROM_UNIXTIME(fromday))='${the_rok}' AND d.deleted=0`,
          '','','','','1',the_duakce);
      if (idd) this.Show(idd);
      else pracovni();
    }
    func Show(idd) {
      if (!this.browse_count()) return;
      echo(`----- Show(${idd}) ${this.browse_count()} the_order=${the_order} id_akce=${id_akce}`);
//      the_order= idd;
//      set_cookie(`${sys('root')}_order`,the_order);
      this.browse_focus(idd);
      a_title= nazev; 
      page.show_akce(id_akce); 
    }
//    func onsubmit() { this.focus(id_order); pracovni() }
//    func onrowclick() { this.Show(id_order); }
    func onrowclick() { var ans:number
      if (!id_akce) { 
        page.init_page();
        switch (choose(`Objednávka ${objednal}|${nazev} ještě není svázána s reálnou akcí - co s ní?`,
            'nevím - kliknu jinam:1,chci vytvořit akci:2,chci smazat objednávku:3')) {
          case 1: Show(the_order); break; // nevím
          case 2: dum_objednavka('add',id_order); break; // přidat
          case 3: dum_objednavka('del',id_order); break; // smazat
        }
      } 
      else { // zjednodušená verze fce pracovni
        js.removeClass(&dum,'curr_akce');
        js.browseShow_addClass(&dum.objednal,dum.browse_active(),'curr_akce');
        the_order= id_order;
        set_cookie(`${sys('root')}_order`,the_order);
        volba_akce(id_akce);
        a_title= nazev; 
        page.show_akce(id_akce); 
      }
    }
    func pracovni() { 
      if (!id_akce) { alert(`Vlož objednávku jako akci`); return }      
      the_order= id_order;
      set_cookie(`${sys('root')}_order`,the_order);
      volba_akce(id_akce);
      this.Load(the_order);
      page.show_akce(id_akce); 
//      this.Show(the_order);
    }
//    menu { type:'context'
//      item { title:'Vybrat akci jako pracovní', proc onclick() { pracovni }}
//    }
  }
//g  # -----------------------------------------------------------------------------==> . seznam GOOGLE
//g  # kopie číselníku z intranetu -  pro ys
//g  view ga: table g_akce
//g  view ja: table join_akce {join_type:'LEFT',join:'USING(g_rok,g_kod)'}
//g  view da: table akce      {join_type:'LEFT',join:'ON ja.id_akce=da.id_duakce'}
//g  view pa: table pobyt     {join_type:'LEFT',join:'ON pa.id_akce=da.id_duakce'}
//g  browse google [0,36,200,500] { tag:'g', rows:27, qry_rows:1, buf_rows:120, group_by:"id_gakce"
//g    show id_gakce {data:ga.id_gakce}
//g    show id_akce [,,30,] {title:'akce', data:ja.id_akce, format:'rsqu', css_cell:'id_akce,0:yellow'}
//g    show org {data:da.access}
//g    show naz_akce {data:da.nazev}
//g    show ma_cenik {data:da.ma_cenik}
//g    show ma_cenu {data:da.ma_cenu}
//g    show cena {data:da.cena}
//g    show      {data:pa.id_pobyt}
//g    show rok  {data:ga.g_rok}
//g    show archiv {data:da.archiv}
//g    show curr {expr:"IF(da.id_duakce=@curr,1,0)" }
//g    show kod   [,,36,] {title:'kód účetní',    data:ga.g_kod, format:'rs+q*'
//g      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
//g    show nazev [,,205,] {title:'název', data:ga.g_nazev, format:'tsq*'
//g      css_cell:"curr,1:curr_akce"}
//g    show ucast [,,30,] {title:'úč.', format:'rtsq=', help:'počet skupin účastníků',
//g      expr:"SUM((SELECT IF(COUNT(*)>0,1,0) FROM spolu WHERE id_pobyt=pa.id_pobyt AND funkce!=99))"}
//g    show pecou [,,30,] {title:'pč.', format:'rtsq=', help:'počet pečounů'
//g      expr:"SUM((SELECT COUNT(*) FROM spolu WHERE id_pobyt=pa.id_pobyt AND funkce=99))"}
//g    show od    [,,65,] {title:'od',     data:ga.g_od, format:'rsq*'}
//g    show do    [,,65,] {title:'do',     data:ga.g_do, format:'rsq*'}
//g    show stat  [,,0,] {title:'stat.',   data:da.statistika, map_pipe:ms_akce_stat.zkratka, format:'sq#'}
//g    proc onclick() { stat.width; stat.width(0); do.width(65) | stat.width(65); do.width(0) }
//g    proc onsubmit() { pracovni }
//g    func onrowclick() { a_title= nazev; page.show_akce(id_akce); }
//g    menu { type:'context'
//g      item { title:'Vybrat akci jako pracovní', proc onclick() { pracovni }}
//g    }
//g    // označení akce jako pracovní
//g    func pracovni() { #==> .. pracovní YS
//g      var org_ys:number
//g      org_ys= 1;
//g      // jen YS používá intranet
//g      if (!accessed(org_ys)) 
//g        alert("nemáte oprávnění označit jako pracovní akci jiné organizace");
//g      elseif (id_akce) 
//g        volba_akce(id_akce)
//g      elseif (fdate('Y',od)!=rok)
//g        alert('Akce má na intranetu uvedeno chybné datum zahájení (např. chybějící nebo z jiného roku)');
//g      elseif (confirm('akce ',nazev,' zatím není v databázi, mám ji založit?')) {
//g        the_duakce= akce.insert_record({access:org_ys, nazev:nazev, datum_od:date2sql(od), datum_do:date2sql(do)});
//g        join_akce.insert_record({id_akce:the_duakce, g_rok:rok, g_kod:kod});
//g        google.browse_row(); volba_akce(id_akce); 
//g      }
//g    }
//g //    proc pracovni() { #== > .. pracovní YS
//g //      var org_ys:number
//g //      org_ys.set(1);
//g //      not(accessed(org_ys)); // jen YS používá intranet
//g //      alert("nemáte oprávnění označit jako pracovní akci jiné organizace");
//g //    | id_akce.get; volba_akce(id_akce.get)
//g //    | not(eq(fdate('Y',od.get),rok.get));
//g //      alert('Akce má na intranetu uvedeno chybné datum zahájení (např. chybějící nebo z jiného roku)');
//g //    | confirm('akce ',nazev.get,' zatím není v databázi, mám ji založit?');
//g //      the_duakce.set(akce.insert_record(
//g //        object('access',org_ys,'nazev',nazev.get,'datum_od',date2sql(od.get),'datum_do',date2sql(do.get))));
//g //      join_akce.insert_record(object('id_akce',the_duakce.get,'g_rok',rok.get,'g_kod',kod.get));
//g //      google.browse_row; volba_akce(id_akce.get) //,nazev.get,ma_cenik.get,ma_cenu.get,cena.get)
//g //    }
//g  }
  # --------------------------------------------------------------------------------==> . seznam SEY
  # přechod na účastníky je omezen datovými právy
  view da2: table akce
//a  view ja2: table join_akce {join_type:'LEFT',join:'ON ja2.id_akce=da2.id_duakce'}
//a  view ga2: table g_akce    {join_type:'LEFT',join:'USING(g_rok,g_kod)'}
  view ds2: table ds_order  {join_type:'LEFT',join:'ON ds2.id_akce=da2.id_duakce'}
  view sa2: table akce      {join_type:'LEFT',join:'ON sa2.id_hlavni=da2.id_duakce'}
  view pa2: table pobyt     {join_type:'LEFT',join:'ON pa2.id_akce=da2.id_duakce'}
  browse sey [0,36,200,500] { tag:'s', rows:27, qry_rows:1, buf_rows:120, group_by:"da2.id_duakce"
      css_rows:"barva,1:cerveny,2:zluty,3:skrtnuty" // akce je: 1=hlavní | 2=souběžná | 3=zrušená
      optimize:°{fetch:'all'}
    show id_akce  {data:da2.id_duakce}
//a    show          {data:ja2.id_akce}
    show          {data:pa2.id_pobyt}
    show ma_archiv // [,,10,] 
    show ma_cenik {data:da2.ma_cenik}
    show ma_cenu {data:da2.ma_cenu}
    show cena {data:da2.cena}
//a    show id_gakce {data:ga2.id_gakce}
    show id_hlavni {data:da2.id_hlavni}
    show id_soubeh {data:sa2.id_duakce}
    show archiv {data:da2.archiv}
    show rok {expr:"YEAR(da2.datum_od)"}
    show curr { expr:"IF(da2.id_duakce=@curr,1,0)" }
    show org { data:da2.access }
    show web_k { data:da2.web_kalendar }
    show web_p { data:da2.web_prihlasky }
    show web_o { expr:"da2.web_obsazeno OR IF(da2.web_maximum,da2.web_maximum<=SUM((SELECT 1 FROM pobyt WHERE id_pobyt=pa2.id_pobyt AND funkce!=99)),0)" }
    show web_m { expr:"IF(da2.mrop OR da2.firm,1,0)" }
    show isds { expr:"IF(ISNULL(ds2.id_akce),0,IF(ds2.id_akce>0,1,0))" }
    show SF [,,20,] {title:'SF', expr:"IF(da2.access=1,'S',IF(da2.access=2,'F','?'))"
      help:"pořádá S=YMCA Setkání, F=YMCA Familia"
      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db', format:'rsq*' }
//  show barva { expr:"CASE WHEN da2.id_hlavni THEN 2 WHEN sa2.id_duakce THEN 1 ELSE 0 END" }
    show barva { expr:"IF(da2.zruseno,3,IF(da2.id_hlavni,2,IF(sa2.id_duakce,1,0)))" }
    show kod   [,,36,] {title:'kód účetní', data:da2.ciselnik_akce
      css_cell:'ma_archiv,0:,1:oranzovy', format:'rsq*' }
//a    show kod   [,,36,] {title:'kód účetní', expr:"IF(ga2.g_kod,ga2.g_kod,da2.ciselnik_akce)"
//a      css_cell:'ma_archiv,0:,1:oranzovy', format:'rsq*' }
    show druh  [,,60,] {title:'typ',    data:da2.druh, map_pipe:ms_akce_typ.zkratka, format:'sq#'
      css_cell:'web_p,0:,1:zluty' }
    show nazev [,,104,] {title:'název', data:da2.nazev, format:'tsq*',
      css_cell:"curr,1:curr_akce"}
//a    show nazev [,,104,] {title:'název', expr:"IF(da2.nazev='',ga2.g_nazev,da2.nazev)", format:'tsq*',
//a      css_cell:"curr,1:curr_akce"}
    show ucast [,,30,] {title:'úč.', format:'rtsq=', help:'počet skupin účastníků',
      expr:"SUM((SELECT IF(COUNT(*)>0,1,0) FROM spolu WHERE id_pobyt=pa2.id_pobyt AND funkce!=99))"
      css_cell:'web_o,0:,1:cerveny' }
    show pecou [,,30,] {title:'pč.', format:'rtsq=', help:'počet pečounů'
      expr:"SUM((SELECT COUNT(*) FROM spolu WHERE id_pobyt=pa2.id_pobyt AND funkce=99))"}
    show misto [,,50,] {title:'místo',  data:da2.misto, format:'tsq*'
      css_cell:'isds,0:,1:ezer_ds'}
    show od    [,,65,] {title:'od',     data:da2.datum_od, format:'rs+q*'
      css_cell:'web_k,0:,1:azurovy,2:azurovy' }
    show do    [,,65,] {title:'do',     data:da2.datum_do, format:'rsq*'
      css_cell:'web_k,0:,1:azurovy' }
    show stat  [,,0,] {title:'stat.',    data:da2.statistika, map_pipe:ms_akce_stat.zkratka, format:'sq#'
      css_cell:'web_m,0:,1:zluty' }
    show zen   [,,0,] {title:'žen', format:'rtsq=', help:'počet žen',
      expr:"SUM((SELECT IF(COUNT(*)>0,1,0) FROM spolu JOIN pobyt USING (id_pobyt) JOIN osoba USING (id_osoba) WHERE id_pobyt=pa2.id_pobyt AND sex=2 AND funkce=0))" }
    proc onclick() { 
      stat.width; stat.width(0); zen.width(0) ; do.width(65)
    | stat.width(35); zen.width(29); do.width(0)
    }
    proc onchange() {
      [ has_skill('yas'); page.DocBrowse ]
    }
    proc onsubmit() { pracovni }
    func onrowclick() { 
      a_title= nazev; 
      page.show_akce(id_akce); 
      if (has_skill('yas')) page.DocBrowse();
    }
    menu { type:'context'
      item { title:'Vybrat akci jako pracovní', proc onclick() { pracovni }}
    }
    // označení akce jako pracovní
    proc pracovni() { #==> .. pracovní
      not(accessed(org.get));
      alert("nemáte oprávnění označit jako pracovní akci jiné organizace");
    | pracovni_curr
    }
    func pracovni_curr() {
      if (volba_akce(id_akce)) {
        curr.set_attrib('expr',conc("IF(da2.id_duakce=",id_akce,",1,0)"));
        this.browse_seek();
      }
    }
    func onstart() { 
      if (!eq(sys('ezer','options','app'),'db2','dbt')) { // kód akce jen pro YS
        SF.width(0); kod.width(0); nazev.width(140); misto.width(70);
      }
    }
  }
  # --------------------------------------------------------------------------------------==> . akce
  select rok [4,5,52,] { tag:'r', format:'t', 
    func onchanged() { 
      the_rok= this; akce_roku(the_rok) 
  }}
//g  # je voláno s kontextem správného the_source
//g  proc nazev_akce(id_akce) {
//g    var nazev: text
//g    { and(id_akce,not(eq(id_akce,'0')));
//g      { eq(the_source.get,'google');
//g        nazev.set(conc(' Akce ',google.kod.get,'/',google.rok.get,' - ',google.nazev.get));
//g      | eq(the_source.get,'sey');
//g        nazev.set(conc(' ',conc(sey.nazev.get,', ',fdate('Y',sey.od.get))));
//g      | alert('V levém menu je třeba vybrat typ akcí (na které máte oprávnění)')
//g      };
//g    };
//g    return (nazev);
//g  }
  func nazev_akce(id_akce) {
    return id_akce ? ` ${sey.nazev}, ${fdate('Y',sey.od)}` : '';
  }
  func volba_akce(id_akce) { #==> . volba_akce
    if (!akce_choose(id_akce)) {
      warning("nepatříš do týmu této akce, takže s ní nemůžeš pracovat");
      return 0;
    }
    lst.info.fill(`${the_title} `);
    ucast.call('clear_ucast2');
    if (has_skill('yam;fam;cam')) maia.call('init_ucast');
    if (!has_skill('crz')) this.call('pece.init_pece'); // CRŽ
    // ošetření souběžných akcí - 0=normální akce, 1=hlavní akce, 2=souběžná akce
    if (has_skill('f')) page.soubezna= the_soubeh==2;
    // nastavení cookies podle organizace
    if (id_akce) {
      if (the_org==1) {
        the_akce_ys= the_duakce;
        set_cookie(`${sys('root')}_akce_ys`,the_akce_ys);
        set_cookie(`${sys('root')}_akce`,the_duakce);
      }
      elseif (the_org==2) {
        the_akce_fa= the_duakce;
        set_cookie(`${sys('root')}_akce_fa`,the_akce_fa);
      }
      else { // mimo YS+FA
        set_cookie(`${sys('root')}_akce`,the_duakce);
      }
      ucast.ucast_hnizda();
      if (!has_skill('T')) pece.pece_hnizda();
      if (has_skill('yam;fam;cam')) maia.mail_hnizda();
      tisk.tisk_hnizda()
    }
    return 1;
  }
  label head [0,0,*,30] { title:'', style:'z-index:0' }
  # volba pracovní akce
  button [376,5,,] { title:'Pracovní', 
    func onclick() {
      if (the_source=='sey') info.sey.pracovni() 
      elseif (the_source=='dum') info.dum.pracovni() 
      else alert('chyba kontextu')
//g      else info.google.pracovni()
  }}
//g  # ==> .. načtení akcí z intranetu
//g  button [-280,5,,] { title:'Obnovit rok z intranetu', skill:'y|yaa+'
//g    help:"obnoví akce roku z http://intranet.setkani.org"
//g    # získání seznamu akcí z docs.google.com pomocí API spredsheet
//g    proc onclick() {
//g      lt(rok.get,2010); alert("Z intranetu lze obnovovat jen akce roku 2010 a starší");
//g    | confirm("Mám pro rok ",rok.get," obnovit seznam akcí (musí mít značku 'a')?",
//g            "<hr>POZOR: v souboru <a target='cis' href='https://docs.google.com/spreadsheets/d/16nu8StIpIPD9uY-cskQOAXCnVY6hL9OTaTBdpPoUrnA/edit#gid=275004412'>ciselnik_akci</a> musí být obnovovaný rok zcela vlevo");
//g      alert('bylo obnoveno ',ask('akce2_roku_update',rok.get),' záznamů o akcích');
//g      google.browse_seek;
//g    }
//g  }
  # export vlastností akcí nastaveného roku
  button [-226,5,,] { title:'Export', func onclick() {
    sey.browse_count(); sey.browse_export({file:'akce',type:'xls'});
    alert("vygenerovaný sešit lze stáhnout <a href='docs/akce.xls' target='xls'>zde</a>");
  }}
  # ==> .. graf průchodu účastníků akcemi
  button cesty [-123,5,,] { title:'Akce účastníků'                                       skill:'y|y;f|f'
    func onclick() { AKCE.cesty(page.key_akce) }}
  # ==> .. zobrazení mapy s pozicí míst účastníků dané akce a oprava PSČ
  button mapka [-21,5,,] { title:'Mapa účastníků',                                  skill:'#crz'
    help:"mapa s bydlišti účastníků akcí"
    func onclick() {
//g      if ( the_source=='google' ) { 
//g        mapa.id_akce= google.id_akce;
//g        mapa.pecouni= google.pecou;
//g      }
//g      else { // the_source=='sey' 
        mapa.id_akce= sey.id_akce;
        mapa.pecouni= sey.pecou;
//g      }
      if ( mapa.id_akce ) {
        mapa.metoda= 'akce';
        mapa.modal(20,100,nazev_akce(mapa.id_akce));
      }
    }
  }
  proc fill(x) {
    [ x; head.set(conc("<div class='karta' style='padding-left:60px'>",x,"</div>")) ];
  }
}
# ==========================================================================================> akce
# přehled obsazení hnízd
panel AKCE [0,0,600,400] { title:' ', type:'popup', css:'dialog'
  var ida:number
  func cesty(_ida) { var y:object
    ida= _ida;
    clear(); panel.title= a_title;
    js.highcharts_load(); 
    h.txt= "<div id='akce_ucastnici' style='width:445px'></div>";
    y= php.akce_ucastnici(ida,'matrix',{firm:h.f,mrop:h.i,muzi:h.m,jine:h.j});
    if (y.chart) js.highcharts_show(y.chart,'akce_ucastnici');
    panel.modal(210,60);
  }
  use h: form {
    label txt [0,0,470,400] { style:'overflow:auto' }
    check f [480,10,100,] { title:'firming', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check i [480,30,100,] { title:'iniciace', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check m [480,50,100,] { title:'muži,otcové', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check j [480,70,100,] { title:'jiné akce', value:"1", format:'t', func onchange() {cesty(ida)}} 
  }
}
# =========================================================================================> anotace
# oprava textu anotace na webu
panel ANOTACE [0,0,645,520] { title:' Úprava textu anotace', type:'popup', css:'dialog'
  use d: form _d [0,0,,],
  proc oprava(_ida) {
    _ida;
    d.load(_ida);
    [ panel.modal ] 
  | alert("napřed novou akci ulož");
  }
  form _d [10,10,600,460] {
    button  [540,9,45,20] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { form.save; panel.hide(1); } }
    button  [600,9,45,20] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { panel.hide(0); }
    }
    edit html [0,40,655,480] {type:'html', data:akce.web_anotace, par:°{toolbar:'EzerLetter'} },
  }
}
# ==========================================================================================> hnízda
# přehled obsazení hnízd
panel HNIZDA [0,0,640,520] { title:' ', type:'popup', css:'dialog',
    style:"height:calc(100% - 130px)"
  func prehled(ida) { var y:object
    clear(); panel.title= "Přehled obsazenosti hnízd této akce";
    y= php.akce2_hnizda(ida);
    h.txt= y.html;
    panel.modal(210,60);
  }
  use h: form {
    label txt [0,0,*,*] { style:'overflow:auto;background:white' }
  }
}
# =======================================================================================> přihlášky
# přehled přihlášek
panel PRIHLASKY [0,0,640,520] { title:' ', type:'popup', css:'dialog',
    style:"height:calc(100% - 130px)"
  func prehled(hotove) { var y:object
    clear(); panel.title= "Přehled nedokončených přihlášek";
    h.txt= php.prihl_open(the_duakce,hotove);
    panel.popup(210,60);
  }
  use h: form {
    label txt [0,0,*,*] { style:'overflow:auto;background:white' }
  }
}
map akce_cenik:  table akce {where:"ma_cenik=1", order:'datum_od', key_id:'id_duakce'}
map akce_slozka: table _cis {where:"druh='akce_slozka'", order:'poradi', key_id:'data'}
map ms_cenik_verze: table _cis {where:"druh='ms_cenik_verze'", order:'poradi', key_id:'data'}
map ms_akce_stat:   table _cis {where:"druh='ms_akce_stat'", order:'poradi', key_id:'data'}
map akce_garant:    table _cis {where:"druh='akce_garant'", order:'poradi', key_id:'data'}
map akce_tym:      table _user {where:"skills REGEXP '(\\s|^)(t|T)(\\s|$)'", order:'surname', key_id:'id_user'}
