#pragma test
# ------------------------------------------------------------------------------------------------ #
# Karta pro výběr akce                                                                             #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2025 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

# skills: y=YS, f=FA, d=CR|MS, e=MS50

# ------------------------------------------------------------------------------------------==> stav
var zalozka: text,              // inf | cor | cen
    the_omezeni: text,          // podmínka omezující akce podle druhu - 1,2,3,4 jsou MS
    menu_item:object,           // aktivní menu
    a_title: text               // aktivní (ne nutně pracovní) akce
# ----------------------------------------------------------------------------------==> inicializace
# inicializace panelu proběhne po akce.onstart, zobrazí seznam akcí daného roku podle the_source
func re_selects_rok(rok) { var sels:text
  sels= php.akce_roky();
  info.rok.selects(sels);
  info.rok= rok;
}
func onfirstfocus() {
  echo('------------- lst onfirstfocus begin');
//  // zobrazení vazby na objednávky DS ---- přesunuto do sey.onstart
//  if (!has_skill('y') /*&& !has_skill('e')*/) {
//    page.ds_order.set_css('hidden','');
//    info.sey.isds.set_attrib('expr'," 0 ");
//    info.sey.idd.set_attrib('expr'," 0 ");
//  }
  akce_onstart(); // zavolá akce_work
  // detekce rozměrů
  curr_w= sys('screen','width')<1280 ? 1024 : 1280;
  // zobrazovat mapu?
  info.mapka.enable(sys('options','gmap'));
  // zobrazení akce
  info.fill(the_title);
  // inicializace zobrazení
  re_selects_rok(the_rok);
  info.rok.change();
  page.cen_copy.selects("neměnit:0");
  zalozka= 'inf';
  page.DocInit();
  echo('onfirstfocus the_source=',the_source);
  // zobrazení seznamu akcí
  page.inf.onclick();
  switch (the_source) {
    case 'sey': 
      if (has_skill('y;f;s;e;crz')) m.g.sey.click();
      elseif (has_skill('caam')) m.c.m.click();
      elseif (has_skill('caar')) m.c.r.click();
      elseif (has_skill('a'))    m.c.a.click();
      break;
    case 'dum': m.d.o.click(); break;
  }
  echo('------------- lst onfirstfocus end');
}
# -------------------------------------------------------------------------------------------==> use
use info: form _info [12,4,,]
use page: form _page [512,40,,]
# use fil:  form file._fil [512,72,,]  { tag:'file', format:'n' }

# ----------------------------------------------------------------------------==> globální procedury
# zobrazí akci jako pracovní -- voláno i z php.tisk2_ukaz_akci
func akce_show(id_akce) { var a:object
  panel.focus();
  the_duakce= id_akce;
  a= php.akce2_id2a(id_akce); 
//  echo(debug(a,id_akce));
  if (a.rok!=info.rok) re_selects_rok(a.rok);
  if (a.org==org_ds && has_skill('yd2')) {
    the_order= a.id_order;
    the_source= 'dum';
    m.d.o.click(0,1);
    info.display(2,'d|r'); 
    page.ord.onclick(); page.display(0,'x'); page.ord.display(1); 
    info.dum.Refresh();
    js.removeClass(&info.dum,'curr_akce');
    js.browseShow_addClass(&info.dum.objednal,info.dum.browse_active(),'curr_akce');
  }
  elseif (has_skill('y') && has_skill('f')) {
    m.g.all.click();
  }
  elseif (has_skill('y') || has_skill('f') || has_skill('s')) {
    m.g.sey.click();
  }
  else {
    m.c.a.click();
  }
  akce_work(id_akce);
}
# zobrazí vyúčtování objednávky Domu setkání nebo její smazání či obnovení
func dum_objednavka(cmd,id) { var row:number
  clear();
  switch (cmd) { 
    case 'create':
      dum.Objednavka.RegRefresh(info.dum,'Refresh');
      dum.Objednavka.Create(the_rok);
      break;
    case 'show': // id_akce
      if (id==the_duakce) {
        dum.Objednavka.RegRefresh(info.dum,'Refresh');
        dum.Objednavka.Show(the_duakce);
      }
      else alert('pro zobrazení objednávky musí být pobyt nastaven jako pracovní');
      break;
    case 'del': // id_order
      if (confirm(`Mám smazat objednávku č. ${id}?`)) {
        row= info.dum.browse_active();
        dum.Objednavka.Delete(id);
        info.dum.browse_refresh();
        info.dum.browse_active(row);
      }
      break;
    case 'add': // id_order
      if (confirm(`mám umožnit fakturaci a přidávání hostů?`)) {
        php.dum_objednavka_akce_make(id);
        the_order= id;
        info.dum.Load(the_order);
        info.dum.pracovni();
      }
      break;
  }
}
# nastaví akci jako pracovní
func akce_work(id_akce) {
  if (!id_akce) 
    id_akce= php.select('id_duakce','akce',`YEAR(datum_od)='${the_rok}' AND access=${my_org}`);
  info.rok= id_akce && info.volba_akce(id_akce) ? the_rok : fdate('Y');
}
# zobrazí přehled hnízd
func ukaz_hnizda(ida) { 
  HNIZDA.prehled(ida)
}                          
proc reaccess() { #==> . reaccess - změna
  # přenastav pracovní akci podle my_org
  { eq(my_org.get,1);
    akce_work(the_akce_ys.get)
  | eq(my_org.get,2);
    akce_work(the_akce_fa.get)
  | akce_work(the_duakce.get)
  };
  # překresli aktivní kartu
  menu_item.get;
  m.onclick(menu_item.get);
  info.sey.pracovni
}
# -----------------------------------------------------------------------------==> lokální procedury
//# vrátí hodnotu položky z google resp. sey
//func akce_get(_fld) { 
//  return info.sey.part(_fld)
//}
# zapíše hodnotu akce.archiv (a zapíše ji i do google resp. sey)
proc akce_set_archiv(cloud,folder) { var path:text
  path.set(conc(cloud,folder));
  ask('query',conc("UPDATE akce SET archiv='",path,"' WHERE id_duakce=",page.a_akce.get));
  info.sey.archiv.let(path)
}
# obnoví zobrazení seznamu
proc lst_refresh() {
  eq(the_source.get,'sey');    [ info.sey.browse_refresh ]
}
# -----------------------------------------------------==> . reakce na změny rozměrů okna prohlížeče
const min_h=550           // minimální výška (nelze jednoduše měnit - jsou k ní vztaženy souřadnice)
var   curr_h: number      // výška nad základní výšku
var   curr_w: number      // 1024 nebo 1280

proc onresize(w,h) { // echo('lst onresize(',w,',',h,')');
  [ and(lt(h,min_h.get),not(eq(curr_h.get,min_h.get)));
    curr_h.set(0); h_change_all()
  | and(gt(h,min_h.get),not(eq(h,sum(curr_h.get,min_h.get))));
    curr_h.set(minus(h,min_h.get)); h_change_all() ];
  [ lt(w,1220); m.click(2,1) | m.click(1,1) ];
  [ and(lt(w,1280),eq(curr_w.get,1280)); narrow
  | and(gt(w,1279),eq(curr_w.get,1024)); wide ];
}

# změna šířky 1024/1280
proc narrow() { curr_w.set(1024); w_change_all  }
proc wide() { curr_w.set(1280); w_change_all }
proc w_change_all() {}

# změna výšky oproti základní min_h
proc h_change_all() {
  page.frame.property(object('stretch',curr_h.get)); // protažení proti původnímu
  h_change_b;
}
# změna počtu řádků browse oproti aktuálním řádkům
func h_change_b() { var r:number, h:number
  h= sys('screen','height');
  r= (h-173)/17;
  if (r!=info.sey.rows) {
    info.sey.set_attrib('rows',r);
    info.dum.set_attrib('rows',r+1);
    page.c.set_attrib('rows',r-4);
//    page.cenik_xls.property({down:r*17+40});
    page.property({down:r*17},'b');
  }
}

# ------------------------------------------------------------------------------------------==> MENU
# Výběr akce má dvě možnosti, uchované v proměnné the_source:
#   'sey' používá pouze tabulku AKCE
#   'dum' používá jako primární data tabulku tx_gnalberice_order

menu m {type:'left', format:'f+'
  # it: info.tag
  # s:  source
  # o:  omezeni  org|access
  # a:  rok=akce_roku | akce_vsechny
  # cond
  menu c {title:'Výběr akce',type:'group',                                                 skill:'c#crz;s;e'
    // jen pro CR
    item m {title:'[MS] program Manželská setkání', skill:'caam', par:°{omez:'da2.druh IN (1,2,3,4)'} }
    item r {title:'[R] programy Rodina mimo MS',    skill:'caar', par:°{omez:'da2.druh NOT IN (1,2,3,4)'} }
    item a {title:'[...] bez omezení',              skill:'a',    par:°{omez:'1'} }
      proc onclick (i) {
        info.rok.display(1); info.sey.display(1); 
        the_omezeni.set(i.par.omez);
        the_source.set('sey'); akce_roku(info.rok.get);
  } }
  menu g {title:'Akce zadaného roku',type:'group',                                 skill:'y;f;s;e;crz'
    item {title:'[fa-file-excel-o] aktuální číselník akcí',                        skill:'y'
      par:{s:'ciselnik'}}
    item sey {title:'[fa-search] ze seznamu všech našich akcí'
      par:{it:'s|r',s:'sey',o:'org',a:'rok'}}
    item all {title:'[fa-search] ze seznamu všech akcí'                                      skill:'#crz;s#e'
      par:{it:'s|r',s:'sey',o:'access',a:'rok'}}
  }
  menu d {title:'Objednávky Domu setkání',type:'group',                                    skill:'yd2'
    item o {title:'[fa-home] přehled roku'
      func onclick (i:ezer) {
        menu_item= i;
        info.display(2,'d|r'); 
        the_source= 'dum';
        set_cookie(`${sys('root')}_akce_source`,the_source);
        page.ord.onclick(); page.display(0,'x'); page.ord.display(1); 
        echo(`----------- set_cookie ...source=${the_source}, the_order=${the_order}`);
        akce_roku(info.rok);
        info.dum.Show(the_order);
      }
    }
  }
  menu {title:'Statistika - různé výběry',type:'group',                                        skill:'y;f;c;e;s'
    item sey {title:'[fa-search] ze seznamu všech akcí',    par:{it:'s',cond:'da2.access!=64 '} }
    item  {title:'[fa-search-plus]... opravdové akce',      par:{it:'s',cond:'da2.spec=0 AND da2.access!=64 ' } }
    item  {title:'[fa-search-minus] ... jen různé seznamy', par:{it:'s',cond:'da2.spec=1 AND da2.access!=64 '} }
    item  {title:'[fa-search-minus] ... jen pobyty Domu setkání', par:{it:'s',cond:'da2.access=64 '} skill:'y'}
  }
  func onclick (i:ezer) {
    if (i.par.s=='ciselnik') {
      alert(php.akce_ciselnik(info.rok));
      return;
    }
    menu_item= i;
    info.display(2,i.par.it); 
    page.inf.onclick(); page.display(1,'x'); page.ord.display(0); 
    the_source= i.par.s;
    set_cookie(`${sys('root')}_akce_source`,the_source);
    backtrace();
    echo(`----------- set_cookie ...source=${the_source}`);
    if (i.par.o) 
      the_omezeni= `da2.access!=64 AND da2.access & ${i.par.o=='org' ? my_org : my_access}`;
    if (i.par.a) 
      akce_roku(info.rok); 
    else 
      akce_vsechny(i.par.cond);
  }
}
#==> . akce definovaného roku
func akce_roku(rok) {
  page.init_page();
  if (the_source=='sey') {
    info.sey.browse_load(`YEAR(da2.datum_od)='${rok}' AND da2.spec=0 AND ${the_omezeni}`,
        '','','','','',`SET @curr:=${the_duakce}`);
    if (info.sey.browse_count())    
      info.sey.raise('onrowclick',info.sey.browse_seek(`da2.id_duakce=${the_duakce}`));
  }
  elseif (the_source=='dum') {
    info.dum.Load(info.sey.browse_count() && info.sey.isds ? ds_order==1 : 0);
  }
}
proc akce_vsechny(cond) {
  the_source.set('sey');
  [ info.sey.browse_load(cond) ];
}
# ------------------------------------------------------------------------------------------==> AKCE
form _page [,,275,360] {
  var a_akce: number
  # ---------------------------==> . ochrana editace více uživateli
  func onchanged() { akce_lock('on') }
  func akce_lock(on) { var lock:object 
    if (key_akce) {
      lock= php.table_lock(on,'akce',key_akce); 
      if ((on=='on') && (!lock.ok)) {
        alert(lock.info);
        akce_zpet();
      }
    }
  }
  func akce_zpet() { 
    akce_lock('off'); 
    form.plain();
    form.load(page.a_akce); 
  }
  # ---------------------------==> . záložky
  proc tags(a,on,off) {
    form.set_css('ae_butt_off','ae_butt_on','x');
    a.set_css('ae_butt_on','ae_butt_off');
    form.display(0,off); form.display(1,on);
  }
  label ord [ 12,0,80,20] {tag:'x', title:'<b>Pobyt DS</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'ord','inf|cor|cen|pri|syn'); zalozka.set('ord'); 
  } }
  label inf [ 12,0,80,20] {tag:'x', title:'<b>Info</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'inf','cor|cen|pri|syn|ord'); zalozka.set('inf'); show_akce(a_akce.get)
  } }
  label cor [100,0,80,20] {tag:'x', title:'<b>Úprava</b>', format:'c'
    proc onclick() { tags(this,'cor','inf|cen|pri|syn|ord'); zalozka.set('cor'); show_akce(a_akce.get)
  } }
  label cen [188,0,80,20] {tag:'x', title:'<b>Ceník</b>', format:'c',
    proc onclick() { tags(this,'cen','inf|cor|pri|syn|ord'); zalozka.set('cen'); show_akce(a_akce.get)
  } }
  label pri [276,0,80,20] {tag:'x', title:'<b>Přihláška</b>', format:'c', skill:'yo'
    proc onclick() { tags(this,'pri','inf|cor|cen|syn|ord'); zalozka.set('pri'); show_akce(a_akce.get)
  } }
  label syn [364,0,80,20] {tag:'x', title:'<b>Dokumenty</b>', format:'c', skill:'yas'
    proc onclick() { tags(this,'syn','inf|cor|cen|pri|ord'); zalozka.set('syn'); show_akce(a_akce.get)
  } }
  func show_akce(id_akce) {
    page.a_akce= id_akce;
    if (the_source=='sey') { if (info.sey.browse_count()) show_page(id_akce) else init_page() }
    if (the_source=='dum') { show_page(id_akce) }
  }
  func show_page(id_akce) {
    cen_copy.enable(0); cen_copy.key(0); key_akce= id_akce;
    form.load(id_akce); 
    cen_ma.Init();
    if (has_skill('y')) web_url= php.web_prihlaska_url(id_akce);
    ds_order= the_order ? 1 : 2;
    switch (zalozka) {
      case 'ord': 
        clear(); 
        note= php.akce2_info(id_akce,1,1,the_order); 
        break;
      case 'inf': clear(); note= php.akce2_info(id_akce); break;
      case 'cor': 
        is_hnizda= hnizda?1:0; hnizda.display(hnizda?1:0);
        if (has_skill('faan')) {
          form.display(0,'corm|corf'); 
          if (mrop) form.display(1,'corm'); 
          if (firm) form.display(1,'corf'); 
        };
        if (has_skill('f')) soubezna= id_hlavni?1:0;
        info.sey.browse_focus();
        break;
      case 'pri':
        form.display(0,'pri');
        p_show();
        break;
      case 'cen': 
        hnizdo.display(hnizda);
        hnizdo.key(0);
        if (hnizda) {
          hnizdo.set_attrib('options','ms_akce_hnizda.nazev');
          hnizdo.key(1);
        }
        c.Load();
        break;
      case 'syn': if (has_skill('yas')) 
        DocShow(info.sey.rok,info.sey.kod)
      break;
    };
    c_show();
    echo(`the_order=${the_order}`);
  }
  func init_page() {
    page.a_akce= 0;
    cen_copy.enable(0); cen_copy.key(0);
    form.init(); 
    web_url= '';
    if (has_skill('y')) ds_order=2;
    note= ''; key_akce= ' ';
  }
  # ------------------------==> . informace
  field key_akce [408,19,46,] {format:'or', css:'Label',
    style:'color:white', help:' ', tabindex:0 }
  label note [10,35,455,193] { tag:'inf,ord', title:'', style:'color:black;font-size:12px' }
  # ---------------------------==> . položky akce
  field access { data:akce.access }
  field id_hlavni { data:akce.id_hlavni }
  // ------------------------------------- základní údaje o akci
  button opakuj [319,49,,] {tag:'cor', title:'Opakuj akci v roce ....', format:'c', skill:'faan|faan;caan|caan;yaan|yaan'
    func onclick() { var ret:object, ida:number
      ida= form.key();
      ret= php.akce_clone(ida,info.rok+1,0);
      if (ret.warn) { alert(ret.warn); return }
      if (confirm(ret.msg)) {
        ret= php.akce_clone(ida,info.rok+1,1);
        alert(ret.msg);
        if (!js.in_selects(&info.rok,info.rok+1)) {
          re_selects_rok(info.rok);
        }
      }
  }}
  field nazev [17,49,218,] { tag:'cor,!', title:'^název akce *', data:akce.nazev }
  field [250,49,50,] { tag:'cor', title:'^pro max.účastníků', data:akce.web_maximum, format:':e' }
  field misto [17,89,218,] { tag:'cor', title:'^místo', data:akce.misto }
  label [244,73,205,35] { tag:'cor', css:'bily_ram', skill:'y' 
      title:" objednávka Domu setkání" }
  radio ds_order [247,89,205,19] { tag:'cor,!', title:'objednávka Domu setkání' /*, skill:'#e'*/
    case [0,0,130,] { title:'akce v Domě setkání', value:'1'  }
    case [124,0,85,] { title:'akce jinde', value:'2' }
    func onchange() { misto= this==1 ? 'Albeřice' : ''; misto.change() }
  } 
  field datum_od [18,133,83,] { tag:'cor,!', title:'^začátek *', type:'date', data:akce.datum_od }
  field datum_do [118,133,83,] { tag:'cor,!', title:'^ukončení', type:'date', data:akce.datum_do 
    func onfocus() { if (this=='') datum_do= datum_od; this.change(); }
  }
  check [213,157,90,] { tag:'cor', title:'jen seznam', data:akce.spec }
  check [213,177,90,] { tag:'cor', title:'akce zrušena', data:akce.zruseno }
  check mrop [300,157,60,] { tag:'cor', title:'mrop', data:akce.mrop, title:'mrop', skill:'faan|faa:m' }
  check firm [300,177,60,] { tag:'cor', title:'firm', data:akce.firm, title:'firming', skill:'faan|faa:m' }
  select [367,167,89,] { tag:'cor', title:'^statistika muži', type:'map0', data:akce.statistika,
    options:ms_akce_stat.zkratka, format:'n', skill:'f|f' }
  select druh [71,169,139,] { tag:'cor,!', title:'typ akce *', type:'map', data:akce.druh,
    options:ms_akce_typ.zkratka, format:'n' }
  radio [213,117,86,35] { tag:'cor', data:akce.strava_oddo, value:'vo'
    case [0,2,83,] { title:'večeře-oběd', expr:'vo' }
    case [0,17,76,] { title:'oběd-oběd', expr:'oo' }
    proc onchange() {} //echo('strava=',this.get) }
  }
  // účetní symbol s nápovědou
  field ss [96,202,54,] { tag:'cor,!', title:'účetní symbol:', data:akce.ciselnik_akce }
  button ss_help [157,202,,] { tag:'cor', title:'[fa-question]', skill:'yaa+|yaaw', format:'n'
    help:'správný specifický symbol platby akce'
    func onclick() { alert(`
            <b>3xx</b> - akce mimo MS a DS<hr>
            <b>40x</b> - akce MS/VPS (1 - VPS1, 2 - DC, 7 - VPS2)<hr>
            <b>41x</b> - akce MS (1 - JO, 2 - LK, 3 - PO)<hr>
            <b>42x</b> - akce MS/peč. (2,3 - Hadinka I, 2 - LK)<hr>
            <b>5xx</b> - akce DS (3,4 - Arctos, 14,15 - Botanicus, 25,26 - Krakonoš)
    `)
  }}
  // zobrazení a nastavení akce jako souběžné (stejné datum a místo)
  check soubezna [213,200,120,] { tag:'cor', title:'akce je souběžná', skill:'faa|faan',
    proc onchange() {
      { info.sey.id_hlavni.get;
        [ confirm("opravdu zrušit souběh této akce?"); ask('akce2_soubeh_nastav',form.key,0) ]
      | alert(ask('akce2_soubeh_nastav',form.key)) };
      info.sey.browse_seek; show_akce(form.key);
  }}
  // Změna ceníku: 
  // - ma_cenik=0 .. bez ceníku
  // - ma_cenik=1 a ma_cenik_verze=0/2 ... 1,0 verze 1 ... 1,2 verze 2
  // - ma_cenik=2 ... DS
  field ma_cenik { data:akce.ma_cenik }
  field ma_cenik_verze { data:akce.ma_cenik_verze }
  radio cen_ma [13,254,210,19] { title:'ceník:', tag:'cor'  // skill:'yaa|yaan;caa|caan;faa|faan'
    case [0,0,50,] { title:'nemá', expr:'0' }
    case [50,0,37,] { title:'v.1', expr:'1' }
    case [86,0,36,] { title:'v.2', expr:'3' }
    case [119,0,115,] { title:'ceny DS ==> ', expr:'2' }
    func Init() { var x:number
      x= ma_cenik ? (ma_cenik==2 ? 2 : (ma_cenik_verze==2 ? 3 : 1)) : 0;
      cen_ma= x;
    }
    func onchange() {
      switch (this) {
        case 0: ma_cenik= 0; ma_cenik_verze= 0; break;
        case 1: ma_cenik= 1; ma_cenik_verze= 1; break;
        case 2: ma_cenik= 2; ma_cenik_verze= 0; break;
        case 3: ma_cenik= 1; ma_cenik_verze= 2; break;
      }
      ma_cenik.change(); ma_cenik_verze.change();
    }
  }
  button [214,255,,] { tag:'cor', title:'Objednávka', skill:'yd2|yd2'
    func onclick() {
      clear();
      if (key_akce==the_duakce) dum.Objednavka.Show(the_duakce);
      else alert('pro zobrazení objednávky musí být pobyt nastaven jako pracovní')
  }}
  button [14,230,,] { tag:'cor', title:'Změnit ceník podle', skill:'yaa|yaan;caa|caan;faa|faan'
    func onclick() {
      cen_copy.enable(1);
      cen_copy.selects(php.akce2_select_cenik(form.key()),',:',0,1)
  }}
  select cen_copy [157,232,139,] {tag:'cor', format:'ntd', help:'vzory ceníků'
    func onchanged() { var msg:text
      msg= php.akce2_change_cenik('dotaz',form.key(),cen_copy.key());
      if (substr(msg,-1,1)=='?') {
        if (confirm(msg)) alert(php.akce2_change_cenik('proved',form.key(),cen_copy.key())); 
      }
      else alert(msg);
  }}
  // jednotná cena / dospělý
  check [13,276,93,] { tag:'cor', title:'používat cenu', data:akce.ma_cenu,
                        format:'', skill:'yaa|yaan;caa|caan;faa|faan' }
  field [109,278,43,] { tag:'cor', data:akce.cena, format:'r', skill:'yaa|yaan;caa|caan;faa|faan',
                        help:'pro 1 dospělého' }
  label [159,283,20,] { tag:'cor', title:'Kč' }
  // ------------------------------------- hnízda
  var hnizda_ok=1
  check is_hnizda [322,252,134,] { tag:'cor' title:'akce je v hnízdech' format:'t'
      skill:'yaa|yaan;caa|caan;faa|faan' 
    func onchange() { 
      hnizda.display(is_hnizda); 
      if (!is_hnizda) { 
        hnizda= ''; hnizda.change() 
      }
  }}
  check [322,230,134,] { tag:'cor' title:'akce je mezinárodní', 
      skill:'yaa|yaan;caa|caan;faa|faan', data:akce.mezinarodni}
  edit hnizda [292,262,161,40] { tag:'cor' title:'^jména hnízd oddělená čárkami' 
      data:akce.hnizda format:'n' 
    func onchanged() { var msg:text
      if (is_hnizda) {
        msg= php.akce2_hnizda_test(hnizda);
      }
      else msg= hnizda;
      if (msg) { hnizda_ok= 0; alert(msg); }
      else hnizda_ok= 1;
  }}
  // ------------------------------------- omezený přístup pro členy týmu akce
  select tym [297,280,157,] {tag:'cor', type:'map+', title:'kdo z týmu má přístup:', data:akce.tym,
      help:'členové týmu akce s právem editace', options:akce_tym.surname }
  // ------------------------------------- web setkani.org 
  label [10,309,384,92] { tag:'cor', css:'bily_ram', skill:'yaaw;faaw' 
      title:" součinnost s www.setkani.org - od dubna 2025 na kartě Přihlášky" }
  button [381,316,,] { tag:'cor', title:'[fa-question]', skill:'yaa+|yaaw'
    help:'pokyny pro přihlašování na www.setkani.org'
    proc onclick() { alert("V popisu akce na www.setkani.org je zapotřebí vyplnit ID akce=",a_akce.get)
  }}
  label web_url [19,330,331,] { tag:'cor' }
  check xp_enable [16,344,243,] { tag:'cor', data:akce.web_prihlasky, format:'d', skill:'yaa+|yaaw' 
                        title:"ONLINE <span class='zluty'>přihlašování</span> na www.setkani.org"
  }
  select garant [293,355,79,] {tag:'cor', type:'map', title:'garant' , data:akce.poradatel,
      help:'garant akce, příjemce organizačních mailů', options:akce_garant.zkratka,      skill:'#e' 
  }
  check xp_pozde [16,362,214,21] { tag:'cor', format:'d'
      title:"<span class='cerveny'>OBSAZENO</span> - další jako náhradníci", data:akce.web_obsazeno,
      help:"a to i tehdy, když akce není ještě naplněná",                  skill:'yaa|yaaw;faa|faaw' 
  }
//  // online přihlašování přes plugin ve Wordpressu
//  check [16,380,243,] { tag:'cor', data:akce.web_wordpress, format:'d'
//                        title:"ONLINE/WordPress na www.setkani.org", skill:'yaa+|m#e' }
//  field web_wordpress [241,383,119,] { tag:'cor', data:akce.web_wordpress, format:'d', skill:'#e' }
  // ------------------------------------- web chlapi.online
  label [10,413,383,70] { tag:'cor', css:'bily_ram', skill:'yaaw;faaw' 
      title:" součinnost s chlapi.cz" }
  radio [16,429,266,54] { tag:'cor', data:akce.web_kalendar, skill:'#e'
    case [0,0,257,14] { title:"akce není v kalendáři chlapi.cz (default)", value:'0' }
    case [0,17,257,14] { title:"upoutávka v kalendáři <span class='azurovy'>chlapi.cz</span>", value:'1' }
    case [0,34,257,14] { title:"upozornění pro plánování akcí na chlapi.cz", value:'2' }
  }
  button [290,436,109,40] { tag:'cor', title:'Upravit upoutávku na webu chlapi.cz', skill:'yaa+|yaaw;faa+|faaw'
      help:'úprava textu v kalendáři chlapi.online', style:"white-space:normal"
    proc onclick() { 
      page.a_akce.get; ANOTACE.oprava(page.a_akce.get);
  }}
  // ------------------------------------- Zpět a Uložit
  label  [193,493,98,30] { tag:'cor', css:'ae_parm', style:'z-index:1', skill:'yaa+;faa+;caa+' }
  button [199,499,,] { tag:'cor', title:'Zpět', skill:'yaa+|yaa+;faa+|faa+;caa+|caa+'
    help:'Neměnit změněná data'
    func onclick() { akce_zpet() }
  }
  button [245,499,,] { tag:'cor', title:'Uložit', skill:'yaa+|yaan;faa+|faan;caa+|caan'
    help:'Uložit změněná data',
    func onclick() { 
      var rok: number, jiny_rok:number, pridat_rok:number, miss:text, ida:number, upd:object
      if (!hnizda_ok) { warning("oprav hnízda"); return }
      if (form.same()) return;
      // oprava
      ida= form.key();
      akce_lock('off'); 
      ucast.the_duakce_local= 0; // inicializace Účastníci
      if (ida) { // oprava
        if (has_skill('y') && (ds_order==1 || ds_order.changed())) {
          // doplňky pro Dům setkání: oprava data nebo transformace z akce "jinde" na akci v DS
          upd= {};
          if (ds_order.changed()) upd.ds_order= ds_order==2 ? 0 : 1; 
          if (datum_od.changed()) upd.datum_od= datum_od;
          if (datum_do.changed()) upd.datum_do= datum_do;
          php.dum_objednavka_upd(ida,upd)
        }
        form.save(); form.plain(); 
        info.volba_akce(the_duakce);
//        form.load(); info.sey.browse_seek()
      }
      else { // přidání nové akce
        // kontrola pouze pro YS
        if (has_skill('y') && missing('!')) return;
        // přepnutí roku 
        pridat_rok= 0; jiny_rok= 0;
        rok= fdate("Y",datum_od);
        if (rok!=info.rok) {
          jiny_rok= 1;
          if (!js.in_selects(&info.rok,rok)) {
            if (choose(`V roce ${rok} ještě není žádná akce, mám tento rok založit?`,
              "Ano - založ nový rok:jo,Ne - to byl překlep:ne")=='ne') {
              return;
            }
            pridat_rok= 1;
          }
        }
        // založ akci
        if (has_skill('y') && ds_order==1) {
          // doplňky pro Dům setkání: vytvoř záznam v tx_gnalberice_order 
          access= my_org; access.change(); // je to akce organizace 
          ida= form.insert(); //form.load();
          php.dum_objednavka_make(ida)
        }
        else {
          access= my_org; access.change();
          ida= form.insert(); //form.load();
        }
        if (pridat_rok) re_selects_rok(rok);     
        if (jiny_rok) { the_rok= rok; akce_roku(rok); }
        info.sey.raise('onrowclick',info.sey.browse_seek(`da2.id_duakce=${ida}`));
      }
    } 
    func missing(tg) { var miss:text, fld:ezer
      miss= '';
      for (fld of form.tagged(tg)) {
        echo(`fld:${fld.title}=${fld.get()}`);
        if (!fld.get()) miss= `${miss} + '${fld.title}'`;
      }
      if (miss) warning(`položka ${miss} je povinná`);
      return miss;
    }
  }
  // jen pro YF,CR - přidání a zrušení akce
  label  [10,493,164,30] { tag:'cor', css:'ae_parm', style:'z-index:1', skill:'faan;caan;yaan' }
  button [16,499,,] {tag:'cor', title:'Nová akce', format:'c', skill:'faan|faan;caan|caan;yaan|yaan'
    func onclick() { var fld:ezer
      form.init(); ds_order= 0;
      for (fld of form.tagged('!')) {
        fld.change();
      }
      info.sey.blur(1);
  } }
  button [91,499,,] {tag:'cor', title:'Smazat akci', format:'c', skill:'faan|faan;caan|caan;yaan|yaan'
    func onclick() { var ret:object, msg:text
      ret= php.akce2_delete_confirm(form.key());
      if (ret.zrusit && confirm(ret.zrusit)) {         // fakt zrušit + název
        if (ret.ucastnici && confirm(ret.ucastnici) ) { // pokud akce má účastníky 
          msg= php.akce2_delete(form.key(),ret,1);      // tak jen zrušíme
        }
        else {
          msg= php.akce2_delete(form.key(),ret);        // jinak zcela smažeme
          re_selects_rok(the_rok);
          alert(msg);
        }
        lst_refresh();
      }
  } }
  // jen pro YF - zápis roku iniciace účastníkům akce - musí být akce.mrop=1 
  label  [310,493,118,31] { tag:'corm,corf', css:'ae_parm', format:'n', style:'z-index:1',         skill:'faan' }
  button [316,499,,] {tag:'corm', title:'Potvrzení iniciace', format:'nc', style:'z-index:1', skill:'faan|faa:m'
    proc onclick() { var ret:object
      has_skill('faa:m');
      ret.set(ask('akce2_confirm_mrop',form.key,0));
      { ret.ok;
        [ confirm(ret.msg); ret.set(ask('akce2_confirm_mrop',form.key,1)); alert(ret.msg) ]
      | alert(ret.msg)
      }
  } }
  button [316,499,,] {tag:'corf', title:'Potvrzení firmingu', format:'nc', style:'z-index:1', skill:'faan|faa:m'
    proc onclick() { var ret:object
      has_skill('faa:m');
      ret.set(ask('akce2_confirm_firm',form.key,0));
      { ret.ok;
        [ confirm(ret.msg); ret.set(ask('akce2_confirm_firm',form.key,1)); alert(ret.msg) ]
      | alert(ret.msg)
      }
  } }
  # ------------------------==> . online přihlášky
  var p_json: object, // dekódovaný obsah akce.web_online
      p_tag: text     // tag přihlášky - O:obnovy, M:letní kurz, R: rodiče s dětmi, J: jednotlivce
  func p_show() { var ch:ezer, akci:text, tp_default:text
    p_tag= php.select1('barva','_cis',`druh='ms_akce_typ' AND data=${druh.key()}`);
    if (!p_tag) return;
    form.display(1,p_tag);
    if (has_skill('m')) {
      p_TEST.enable(1); p_MAIL.enable(1); web_online.enable(1); web_prihlaska.enable(1);
    }
    // defaultní hodnoty - pokud je web-online prázdný, zapíšou se
    p_json= {};
    for (ch of form.tagged('pri')) {
      if (js.get_type(ch)=='check') ch.init();
    }
    akci= '???';
    p_json.p_css= 1;
    p_json.p_kontakt= 1; p_json.p_rod_adresa= 1; 
    p_json.p_registrace= 1; p_json.p_souhlas= 1; 
    p_json.p_deti= 1; 
    switch (p_tag) { 
      case 'M': akci= 'Letní kurz MS'; 
        p_json.p_obcanky= 1; p_json.p_pecouni= 1; 
        p_json.p_upozorneni= 1; p_json.p_dokument= 1; 
        break;
      case 'O': akci= 'obnovu MS'; 
        p_json.p_obcanky= 1; p_json.p_pecouni= 1; p_json.p_obnova= 1; 
        break;
      case 'R': akci= 'akci pro rodiny'; 
        p_json.p_reg_single= 0;
        p_json.tp_pracovni= "poznámka pro pořadatele"; 
        p_json.p_zadost= 0; p_json.veta_zadost= '';
        break;
      case 'J': akci= 'akci pro jednotlivce'; 
        p_json.tp_pracovni= "poznámka pro pořadatele"; 
        p_json.p_rod_adresa= 0; p_json.p_oso_adresa= 1; p_json.p_deti= 0; 
        break;
    }
    p_enable_title= `povolit online přihlášení na ${akci}`;
    if (!web_online) { // vytvoř prázdný popis přihlášky
      web_online= json_encode(p_json); web_online.change();
    }
    p_json= json_decode(web_online);
    if (!p_json.veta_potvrzeni) {
      p_json.veta_potvrzeni= eq(p_tag,'M','O')
        ? "Zaslané údaje zpracujeme a do týdne vám pošleme odpověď." 
        : "V týdnu před akcí dostanete <i>Dopis na cestu</i> s doplňujícími informacemi.";
    }
    if (!p_json.web_prihlaska) {
      web_prihlaska= has_skill('b') ? 'prihlaska_asc' : 'prihlaska_2025'; 
      web_prihlaska.change();
      p_json.web_prihlaska= web_prihlaska;
    }
    copy_by_name(p_json,form);
    p_href= p_enable ? php.akce_prihlaska(page.a_akce,web_prihlaska,
        conc(p_TEST?`&test=${p_json.p_TEST}`:'',p_MAIL?'':'&mail=0')) : '';
    // součinnost s Úprava
    if (has_skill('yaa+|yaaw'))         p_enable= xp_enable; // = web_prihlasky
    if (has_skill('yaa|yaaw;faa|faaw')) p_pozde= xp_pozde;  // = web_obsazeno
    // zobrazení QR kódu
    QR= php.akce_qr_prihlasky(page.a_akce);
  }
  label p_enable_title [10,28,250,16] { tag:'pri,M,O,R,J', css:'ae_parm', 
      style:'z-index:2;padding: 7px 5px 3px 24px;color:white;font-weight:bold' }
  check p_enable [13,30,10,] { tag:'pri,M,O,R,J', title:'', format:'n', value:'0', 
      style:'padding-bottom:2px;z-index:2'}  
  label p_href [156,37,300,20] { tag:'pri,M,O,R,J', style:'text-align:right' }
  select p_css [392,52,68,] {  tag:'pri,M,O,R,J', type:'map', 
      help:'výběr loga, (c), zabarvení)', options:akce_prihl_css.zkratka }
  check p_TEST [294,50,50,] { tag:'pri,M,O,R,J', title:'TEST', value:'0', format:'dn',
      help:'TEST=0 (dflt) provede db operace bez zobrazení, TEST=1 zobrazi i provede, TEST>1 db operace jen zobrazí (nutný zápis do JSON)' }
  check p_MAIL [343,50,50,] { tag:'pri,M,O,R,J', title:'MAIL', value:'1', format:'dn', 
      help:'MAIL=1 (dflt) posílá maily, MAIL=0 je pouze zobrazuje (pro chráněné IP adresy)' }
# ==> .. QR kód přihlášky
  label [340,160,200,30] { tag:'pri,M,O,R,J', title:"QR adresy přihlášky<br>(klikni pro stažení)"  }
  label QR [335,185,80,80] { tag:'pri,M,O,R,J' }
  # -----------==> .. zobrazení varianty přihlášky podle p_tag
  check p_pozde [13,71,300,] { tag:'pri,M,O,R,J', title:'od teď přihlášené brát jen jako náhradníky'}
  check p_sleva [250,71,241,] { tag:'pri,M,O,R,J', title:'žádost o slevu'}
  edit tp_pracovni [13,110,438,40] { tag:'pri,M,O,R,J', title:"^Nápovědný text nad poznámkou k pobytu na akci (hvězdičkou učiníte poznámku povinnou)"}
  label [13,160,131,] { tag:'pri,M,O', title:'<b>rodinné přihlášení</b>'}
  label [13,160,131,] { tag:'pri,R', title:'<b>přihlášení rodiče s dětmi</b>'}
    check p_deti [30,180,78,] { tag:'pri,M,O,R', title:'včetně dětí'} 
    check p_deti_but [130,180,247,] { tag:'pri,M,O,R', title:'zobrazit děti až stiskem tlačítka'} 
    check p_pecouni [30,200,258,] { tag:'pri,M,O', title:'umožnit vložení osobních pečovatelů '} 
    check p_rod_adresa [30,220,253,] { tag:'pri,M,O,R', title:'umožnit kontrolu a úpravu rodinné adresy'}
  label [13,250,400,20] { tag:'pri,M,O,R' title:'<b>Povolené úpravy dospělých účastníků</b>' }
  label [13,250,400,] { tag:'pri,J', title:'<b>přihlášení jednotlivce</b>'}
    check p_obcanky [30,270,200,] { tag:'pri,M,O,R,J', title:'číslo obč. průkazu nebo pasu'}
    check p_kontakt [30,290,151,] { tag:'pri,M,O,R,J', title:'osobní email a telefon'}
    check p_oso_adresa [210,290,246,] { tag:'pri,J', title:'osobní adresa'}
  label [13,330,207,20] { tag:'pri,M,O,R,J' title:'<b>Registrace a OOÚ</b>' }
    check p_registrace [30,350,206,] { tag:'pri,M,O,R,J', title:'povolit registraci s novým mailem'}
    check p_souhlas [250,350,194,] { tag:'pri,M,O,R,J', title:'vyžadovat souhlas (GDPR)'}
  label [13,390,151,20] { tag:'pri,M,O' title:'<b>Nastavení pro akce MS</b>' }
    check p_strava [30,410,339,] { tag:'pri,M,O', title:'MS: specifikace stravy,'}
    field p_detska_od [251,412,30,] { tag:'pri,M,O', title:'dětská porce od: ', format:'r'}
    field p_detska_do [312,412,30,] { tag:'pri,M,O', title:'do: ', format:'r'}
  label [13,390,200,20] { tag:'pri,R' title:'<b>Nastavení pro rodinné akce</b>' }
    check p_reg_single [30,410,350,] { tag:'pri,R', title:'umožnit single registraci, vyžádat osobní adresu místo rodinné'}
    check p_zadost [30,430,103,] { tag:'pri,R', title:'umožnit žádost: '}
    field veta_zadost [139,431,305,] { tag:'pri,R', help:' [ ] text žádosti' }
  field p_nocleh [173,432,32,] { tag:'pri,M,O', title:'MS: nabízené ubytování ', help:'LSZ-'}
    label [217,437,300,] { tag:'pri,M,O', title:'L:lůžko S:spacák Z:zem -:mimo'}
    check p_obnova [30,450,339,] { tag:'pri,O', title:'OBNOVA MS: neúčastníky aktuálního LK brát jako náhradníky'}
    check p_upozorneni [30,450,380,] { tag:'pri,M', title:'LETNÍ KURZ MS: vyžadovat akceptaci upozornění'} 
    check p_dokument [30,470,400,] { tag:'pri,M', title:'LETNÍ KURZ MS: vytvořit PDF a uložit jako dokument k pobytu'} 
  edit veta_potvrzeni [13,520,438,40] { tag:'pri,M,O,R,J', title:"^text umístěný do potvrzujícího dopisu mezi seznam přihlášených a podpis garanta"}
  // Zpět a Uložit
  const prihl_top= 571
  label  [13,prihl_top,160,30] { tag:'pri,M,O,R,J', css:'ae_parm', style:'z-index:1', skill:'yo' }
  button [19,prihl_top+6,,] { tag:'pri,M,O,R,J', title:'Zpět', help:'Neměnit změněná data', skill:'yo|yo'
    func onclick() { akce_zpet(); p_show(); }
  }
  button [65,prihl_top+6,,] { tag:'pri,M,O,R,J', title:'Uložit', help:'Uložit změněná data', skill:'yo|yo'
    func onclick() { onclick_ulozit() }
    func onclick_ulozit() { var elem:ezer, typ:text
      akce_lock('off'); 
      // kontroly konzistence
      if (p_registrace && !(p_kontakt && (p_rod_adresa || p_oso_adresa))) {
        alert("pro registraci je potřeba kontakt a rodinná nebo osobní adresa");
        return;
      }
      elseif (p_strava && ma_cenik_verze!=2) {
        alert("specifikace stravy v online přihlášce vyžaduje ceník verze 2");
        return;
      }
      // uložení změn
      p_json= {p_typ:p_tag}; // základní typ: M,O,R,J
      for (elem of form.tagged(p_tag)) {
        typ= js.get_type(elem);
        if (eq(typ,'check','field')) {
          p_json[elem._id]= elem.get();
        }
        elseif (eq(typ,'select.map')) {
          p_json[elem._id]= elem.key();
        }
      }
      p_json.tp_pracovni= tp_pracovni;
      p_json.veta_potvrzeni= veta_potvrzeni;
      p_json.veta_zadost= p_zadost ? veta_zadost : '';
//      echo(debug(p_json));
      if (form.key()) {
        web_online= json_encode(p_json); web_online.change();
        if (p_enable.changed()) { 
//          xp_enable= p_enable; xp_enable.change(); 
          if (has_skill('yaa+|yaaw')) { xp_enable= p_enable; xp_enable.change(); }
        }
        if (p_pozde.changed()) { xp_pozde= p_pozde; xp_pozde.change(); }
        form.save(); form.load(); p_show();
      }
  }}
  button [116,prihl_top+6,,] { tag:'pri,M,O,R,J', 
    title:"[fa-question] <a href='https://lite.evernote.com/note/a7d25a1b-835c-ebb6-d7c3-f655a1a2f9d1'
      style='text-decoration:none' target='web'>Popis </a>" }
  button [200,prihl_top+6,,] { tag:'pri,M,O,R,J', title:'Přehled nedokončených ...', skill:'yo|yo'
    func onclick() { PRIHLASKY.prehled(0) }
  }
  button [360,prihl_top+6,,] { tag:'pri,M,O,R,J', title:'... dokončených', skill:'yo|yo'
    func onclick() { PRIHLASKY.prehled(1) }
  }
  // ruční změna JSON
  edit web_online [13,prihl_top+63,438,60] { tag:'pri,M,O,R,J', title:'^JSON popis přihlášky', data:akce.web_online, format:'dt'}
  field web_prihlaska [338,prihl_top+32,112,18] { tag:'pri,M,O,R,J', title:'PHP přihlášky', data:akce.web_prihlaska, format:'d'}
  # ------------------------==> . ceník
  func c_show() { // výběr a šířky sloupců podle akce.access a akce.ma_cenik_verze
    //                       lze měnit sloupce od-do za dph
    c.pro_2025.width(0); c.noc_2025.width(0); c.porce_2025.width(0); 
    if (the_cenik_verze==2) {
      // nový univerzální ceník 
      c.typ.width(0); c.za_2016.width(0); 
      c.druh.width(10);
      c.co_2025.width(35); c.pro_2025.width(35); c.noc_2025.width(35); c.porce_2025.width(35); 
      c.pol.width(146); 
      c_testy.key(1);
      form.display(0,'ex0');
    }
    elseif (eq(access,1,2)) {
      // access: 1,2 pro db2 - nepoužívá cenik.typ,   používá akce.ma_cenik_verze s hodnotou 0|1
      c.typ.width(0);
      c.druh.width(0); c.pol.width(156); c.za_2016.width(38); form.display(zalozka=='cen','ex0');
    }
    elseif (eq(access,4,8,16,32)) {
      // access: 4|8 pro cr|ms    -   používá cenik.typ, nepoužívá akce.ma_cenik_verze
      c.pol.width(100); c.typ.width(50); c.za_2016.width(40);
      form.display(0,'ex');
    }
  }
  browse c [10,25,,] { tag:'cen', rows:26, qry_rows:1, css_rows:"barva,1:sedy"
    // pro y;f;c
    show id_cenik { data:cenik.id_cenik }
    show id_akce  { data:cenik.id_akce }
    show polozka  { data:cenik.polozka }
    show poradi [,,25,] { title:'N', help:'pořadí ve faktuře', data:cenik.poradi, format:'ruq*s+'
      proc onsubmit() { this.save } }
    show druh [,,0,] { title:'.', help:'druh položky: u/s/p/d/x', data:cenik.druh, format:'ruq*s'
      proc onsubmit() { this.save } }
    show barva { expr:"IF(LEFT(polozka,1)='-',1,0)" }
    show pol [,,155,] { title:'položka', help:'... do faktury', data:cenik.polozka, format:'tuq*s'
      proc onsubmit() { this.save } }
    // pro c a y;f verze 2016
    show za_2016 [,,0,] { title:'za', data:cenik.za, format:'urq=s',
      help:'noc:N, strava:(s=snídaně/o=oběd/v=večeře)(c=celá/p=poloviční), pobyt:P, slevy:S'
      proc onsubmit() { this.save } }
    // pro c
    show typ [,,0,] { title:'typ', data:cenik.typ, map_pipe:ms_akce_ubytovan.zkratka,
      format:'urq#s', help:'typ ubytování: 1,2,3,...'
      proc onsubmit() { this.save } }
    // pro y;f;c
    show cena [,,43,] { title:'cena', help:'cena v Kč vč. DPH', data:cenik.cena, format:'urq=s:e'
      proc onsubmit() { this.save } }
    // pro y verze 2025
    show co_2025 [,,0,] { title:'x', data:cenik.krat, format:'urq=s',
      help:'Pobyt nebo x-krát Noc, Snídaně, Oběd, Večeře '
      proc onsubmit() { this.save } }
    show pro_2025 [,,0,] { title:'t', data:cenik.t, format:'urq=s',
      help:'typ účasti Učastník, Vps, Dítě, Pečoun, Tým (kněz,psych,hudba)'
      proc onsubmit() { this.save } }
    show noc_2025 [,,0,] { title:'n', data:cenik.n, format:'urq=s',
      help:'kategorie noclehu'
      proc onsubmit() { this.save } }
    show porce_2025 [,,0,] { title:'p', data:cenik.p, format:'urq=s',
      help:'kategorie porce Celá, Poloviční'
      proc onsubmit() { this.save } }
    // jen y;f
    show dph [,,0,] { title:'dph', help:'DPH v Kč', data:cenik.dph, format:'urq=s:e'
      proc onsubmit() { this.save } }
    // pro y;f;c
    show od [,,21,] { title:'≥', data:cenik.od, format:'urq=:e', help:'od tohoto věku (včetně narozenin)'
      proc onsubmit() { this.save } }
    show do [,,21,] { title:'<', data:cenik.do, format:'urq=:e', help:'do tohoto věku (do narozenin)'
      proc onsubmit() { this.save } }
    // funkce a menu
    func Load() {
      if (hnizda)
        c.browse_load(`id_akce=${the_duakce} AND hnizdo=${hnizdo.key()}`); 
      else
        c.browse_load(`id_akce='${the_duakce}'`); 
    }
    menu { type:'context', skill:'yaa+;faa+;caa+'
      item { title:'přidat nový řádek'
        func onclick() { 
          c.browse_seek(conc('id_cenik=',cenik.insert_record(
          {id_akce:the_duakce, polozka:'?', hnizdo:hnizda ? hnizdo.key() : 0})));
      } }
      item { title:'odebrat běžný řádek'
        func onclick() { 
          if (confirm(`opravdu odebrat položku ${polozka} ?`)) {
            cenik.delete_record(conc('id_cenik=',id_cenik));
            Load()
          }
      } }
    }
    proc onclick() {
      eq(access.get,1,2);
      od.width; od.width(0); do.width(0); dph.width(43)
    | od.width(21); do.width(21); dph.width(0)
    }
  }
  // export ceníku a výběr hnízda
  const bc=40, lc=335
//  label  [lc+19,24,102,57] { tag:'b,cen', css:'ae_parm', style:'z-index:1' }
  select hnizdo [300,20,86,] { tag:'b,cen', title:'' format:'t' type:'map' 
    func onchanged() { 
      c.Load(); 
    }
  }
  button cenik_xls [10,20,,20] { tag:'b,cen', title:'Export ceníku', format:'c'
    proc onclick() {
//      var ret: object
//      ret.set(ask('akce2_platby_xls',a_akce.get));
//      ret.ok; alert(ret.xhref);
//    | warning(ret.msg);
  } }
  button [140,20,,20] { tag:'b,cen', title:'test pro' 
    func onclick() { var ret: object
      clear();
      ret= php.akce2_vzorec2_test(the_duakce,c_testy.key());
      alert(`<b>${c_testy}</b><br><br>${ret.navrh}`);
  }}
  select c_testy [200,20,250,] { tag:'b,cen', type:'map', options:ms_cenik_testy.zkratka, format:'tu' }
//  label  [lc+20,bc+52,211,] { tag:'b,cen,ex0', title:"příklady poplatků" }
//  button [lc+20,bc+68,,] { tag:'b,cen,ex0', title:'pár', proc onclick() { test_ceniku(2,0,0,0,0) }}
//  button [lc+20,bc+95,,] { tag:'b,cen,ex0', title:'pár+dítě', proc onclick() { test_ceniku(2,1,0,0,0) }}
//  button [lc+20,bc+123,,] { tag:'b,cen,ex0', title:'pár+kojenec', proc onclick() { test_ceniku(2,0,0,1,0) }}
//  button [lc+20,bc+150,,] { tag:'b,cen,ex0', title:'dítě do 6 let', proc onclick() { test_ceniku(0,0,1,0,0) }}
//  button [lc+20,bc+177,,] { tag:'b,cen,ex0', title:'kojenec', proc onclick() { test_ceniku(0,0,0,1,0) }}
//  button [lc+20,bc+204,,] { tag:'b,cen,ex0', title:'pečovatel', skill:'y|y', proc onclick() { test_ceniku(0,0,0,0,1) }}
//  func test_ceniku(dosp,Deti,deti,koje,peco) { var cena:object
//    if (the_duakce==a_akce) {
//      if (the_soubeh==1)
//        cena= php.akce2_vzorec_soubeh(0,the_duakce,the_soubezna,hnizdo.key(),dosp,Deti+deti,koje,peco);
//      elseif (the_soubeh==2)
//        cena= php.akce2_vzorec_soubeh(0,the_hlavni,the_duakce,hnizdo.key(),dosp,Deti+deti,koje,peco);
//      else
//        cena= php.akce2_vzorec_test(a_akce,hnizdo.key(),dosp,Deti,deti,koje,peco);
//      alert(cena.navrh)
//    }
//    else alert("pro testování ceníku musí být akce nastavena jako pracovní")
//  }
  // výpočet expr
//  func expr_ceniku(expr,vek,tit) { // verze 2016 i verze 2017
//    alert(conc('<b>',tit,'</b><br><br>',php.akce2_vzorec_expr(a_akce,hnizdo.key(),expr),
//      '<br><br>(N je počet nocí, O je počet obědů)'))
//  }
  # ------------------------==> . dokumenty na Synology
  use folders:  area _folders { tag:'syn' }
  var dcloud='U:',    // U: je třeba nastavit Ezer.options.path_files_u na složku obsahující droot
      abase:text,     // Ezer.options.path_akce
      aroot:text,     // absolutní adresa Ezer.options.path_files_u (má / na konci)
      droot='docs',   // kořen pro filebrowser 
      dfold='docs'    // zobrazená podsložka droot (bez koncového /)
//  label [18,25,300,40] {tag:'syn' 
//    title:"Přidávat soubory lze přetažením myší, pravým tlačítkem lze přidávat podsložky, kliknutím stáhnout nebo zobrazit (sdílet a mazat lze jen z prostředí Synology)" }
  label [18,25,306,40] {tag:'syn' 
    title:"Zde jsou zobrazeny soubory přiřazené k akci na Google disku (a synchronizované na Synology)" }
  button [324,42,,] {tag:'syn' title:'[fa-briefcase] založit archiv', skill:'mmm'
    func onclick() { var kod:number
      if (info.sey.kod) {
        php.tut_mkdir(abase,info.sey.rok,info.sey.kod,info.sey.nazev);
        DocRefresh(); DocBrowse()
      }
      else 
        alert("akce musí mít definovaný číselný kód tzn. účetní symbol")
    }
  }
  button [424,42,,] {tag:'syn' title:'[fa-question]', skill:'mmm' 
    func onclick() {
      DocBrowse()
  }}
  func DocInit() { 
    abase= function("return Ezer.options.path_akce;")
  }
  func DocBrowse() { 
    fdrop.off();
    // Show.load (php_funkce,table,table_id,...) zavolá php_funkci(table,table_id,seznam klíčů,...) 
    // funkce vrátí pole klíč->hodnota hodnoty budou zapsány jako hodnoty tohoto sloupce
    info.sey.ma_archiv.load('tut_ma_archiv','akce','id_duakce',abase);
  }
  func DocRefresh() {
    DocShow(info.sey.rok,info.sey.kod)
  }
  func DocShow(_rok,_kod) { var y:object
    y= php.tut_dir_find(abase,_rok,_kod);
    if (y.ok) {
      aroot= function('aroot',"return Ezer.options.path_files_u=aroot;",y.aroot); 
      droot= y.droot; 
      dfold= droot;
      folders.Load(aroot,droot); 
      files.Load();
      fdrop.Init();
      fdrop.on();
    }
    else {
      folders.Init();
      files.Init();
    }
  }
  # složky - tree area
  area _folders { title:"<div id='files' style='left:530px;top:112px;width:160px;height:370px;border-right:1px solid grey;position:absolute;z-index:1'></div>"
    var click_path:text
    proc tree_onclick(fid,id,dat,com,x,path,txt) { var i:text
      page.dfold.set(replace(path,'\|','/'));
      page.fdrop.Init;
      page.files.Load;
    }
    proc tree_oncontextmenu(fid,id,dat,com,x,path,txt) { 
      click_path.set(replace(path,'\|','/'));
      echo('tree:',click_path.get);
    }
    menu { type:'context'
      item { title:'vložit podsložku', 
        func onclick() { var folder:text
          folder= prompt2('název podsložky:');
          php.tut_mkdir(page.abase,info.sey.rok,0,click_path,folder);
          page.DocRefresh()
        }
      }
    }
    proc Load(_a,_b) { 
      this.tree_show(ask('tut_dir',_a,_b),'files',0,°{mode:'folders',theme:'mootree.gif'}); 
      this.tree_expand(1) 
    }
    proc Init() { 
      this.tree_show(°{prop:°{id:'<žádný dokument>'}},'files',0,°{mode:'folders',theme:'mootree.gif'}); 
    }
  }
  # soubory - seznam
  label files [179,72,258,360] {tag:'syn' css:'files' style:"z-index:3;padding:5px"
    func Load() { fdrop.off(); this.set(php.tut_files(aroot,dfold)); }
    func Init() { this.set(''); }
    func Menu(op,name,ref) { 
      if (op=='viewer') {
        function('url',"window.open(url,'viewer')",php.tut_file_url(ref,name))
      }
    }
  }
  # soubory - drop area
  label fdrop [192,90,241,50] {tag:'syn' type:'drop' title:'vlož soubor sem' css:'drop' style:"z-index:2"
    func Init() { // podsložka {root} s lomítkem jen na konci
      fdrop.init(dfold,dcloud); 
    }
    func onload(f) { // po dokončení přenosu, jméno bude ASCII
      files.Load();
      off();
    } 
    func onerror(e:object) { // funkce onerror nesmí obsahovat asynchronní kód a lokální proměnné, ale přes call lze zavolat už cokoliv
      warning(e.msg); return(1) // vrácení 0 způsobí standardní hlášení chyby
    }
    func on() {
      if (has_skill('mmm'))
        function('f',
          "jQuery('div.files').on({dragover: evt => { jQuery('div.drop').css({zIndex:4});return false; }})",
          page.files);
    }
    func off() {
      if (has_skill('mmm'))
      function('f',
        "jQuery('div.drop').css({zIndex:2});",
        page.files);
    }
  }
  # --------------------------- pozadí stránky a kontextové menu nakonec
  label frame [2,16,443,385] { title:'', css:'ae_work page' }
  menu detail { type:'context' join:frame
    item { title:'ukázat změny', func onclick () {
      if (key_akce) track.back_show('akce',key_akce) 
    } }
    item { title:'-ukázat data', skill:'m', 
      func onclick() { js.call_root_func_par('syst_tab_rec_show',array('akce',key_akce),&this,'onclick_')}
      func onclick_() {}
    }
  }
}
# ==> VÝBĚR AKCE
form _info [,,*,50] {
  # ------------------------------------------------------------------------==> . seznam Dum setkání
  browse dum [0,36,200,500] { tag:'d', rows:28, qry_rows:0, buf_rows:120, key_id:'id_order', 
      css_rows:"zruseno,0:,1:skrtnuty" // akce je: 1=zrušená
      optimize:{ask:'dum_browse_orders'}
    show id_akce  [,,40,] { title:'akce', format:'rq=' 
        css_cell:'access,0:,1:ezer_ys,64:ezer_ds,65:ezer_ys ezer_ds'}
    show id_order [,,40,] { title:'objednávka', format:'rq=' }
    show access
    show curr 
    show objednal [,,100,] { title:'objednatel', format:'tq*' 
        css_cell:"curr,1:curr_akce"}
    show nazev [,,100,] { title:'název', format:'tq*' }
    show osob [,,50,] { title:'osob', format:'r' }
    show od [,,65,] { title:'od', sql_pipe:'sql_date1', format:'rq*' }
    show do [,,65,] { title:'od', sql_pipe:'sql_date1', format:'rq*' }
    show zruseno
    func Refresh() { 
      this.browse_seek(`id_duakce=${the_duakce}`,`YEAR(FROM_UNIXTIME(fromday))='${the_rok}' AND d.deleted=0`);
    }
    func Load(idd) { var curr:number
      curr= this.browse_count() ? id_order : 0;
      this.browse_load(`YEAR(FROM_UNIXTIME(fromday))='${the_rok}' AND d.deleted=0`,
          '','','','','1',the_duakce);
      if (idd) this.Show(idd);
      else pracovni();
    }
    func Show(idd) {
      if (!this.browse_count()) return;
      echo(`----- Show(${idd}) ${this.browse_count()} the_order=${the_order} id_akce=${id_akce}`);
      this.browse_focus(idd);
      a_title= nazev; 
      page.show_akce(id_akce); 
    }
    func onrowclick() { var ans:number
      if (!id_akce) { 
        page.init_page();
        switch (choose(`Objednávka ${objednal}|${nazev} ještě není svázána s reálnou akcí - co s ní?`,
            'nevím - kliknu jinam:1,chci vytvořit akci:2,chci smazat objednávku:3')) {
          case 1: Show(the_order); break; // nevím
          case 2: dum_objednavka('add',id_order); break; // přidat
          case 3: dum_objednavka('del',id_order); break; // smazat
        }
      } 
      else { // zjednodušená verze fce pracovni
        js.removeClass(&dum,'curr_akce');
        js.browseShow_addClass(&dum.objednal,dum.browse_active(),'curr_akce');
        the_order= id_order;
        set_cookie(`${sys('root')}_order`,the_order);
        volba_akce(id_akce);
        a_title= nazev; 
        page.show_akce(id_akce); 
      }
    }
    func pracovni() { 
      if (!id_akce) { alert(`Vlož objednávku jako akci`); return }      
      the_order= id_order;
      set_cookie(`${sys('root')}_order`,the_order);
      volba_akce(id_akce);
      this.Load(the_order);
      page.show_akce(id_akce); 
    }
  }
  # --------------------------------------------------------------------------------==> . seznam SEY
  # přechod na účastníky je omezen datovými právy
  view da2: table akce
  view ds2: table ds_order  {join_type:'LEFT',join:'ON ds2.id_akce=da2.id_duakce', skill:'#e'}
  view sa2: table akce      {join_type:'LEFT',join:'ON sa2.id_hlavni=da2.id_duakce'}
  view pa2: table pobyt     {join_type:'LEFT',join:'ON pa2.id_akce=da2.id_duakce'}
  browse sey [0,36,200,500] { tag:'s', rows:27, qry_rows:1, buf_rows:120, group_by:"da2.id_duakce"
      css_rows:"barva,1:cerveny,2:zluty,3:skrtnuty" // akce je: 1=hlavní | 2=souběžná | 3=zrušená
      optimize:{fetch:'all'}
    show id_akce [,,0,] {title:'ida', data:da2.id_duakce, format:'rsq*' }
    show idd [,,0,] { title:'ord', expr:"IFNULL(ds2.id_order,0)", format:'rsq*' } // pro #y je expr=" 0 "
    show          {data:pa2.id_pobyt}
    show ma_archiv // [,,10,] 
    show ma_cenik {data:da2.ma_cenik}
    show ma_cenu {data:da2.ma_cenu}
    show cena {data:da2.cena}
    show id_hlavni {data:da2.id_hlavni}
    show id_soubeh {data:sa2.id_duakce}
    show archiv {data:da2.archiv}
    show rok {expr:"YEAR(da2.datum_od)"}
    show curr { expr:"IF(da2.id_duakce=@curr,1,0)" }
    show org { data:da2.access }
    show web_k { data:da2.web_kalendar }
    show web_p { data:da2.web_prihlasky }
    show web_o { expr:"da2.web_obsazeno OR IF(da2.web_maximum,da2.web_maximum<=SUM((SELECT 1 FROM pobyt WHERE id_pobyt=pa2.id_pobyt AND funkce!=99)),0)" }
    show web_m { expr:"IF(da2.mrop OR da2.firm,1,0)" }
    show isds { expr:"IF(ISNULL(ds2.id_akce),0,IF(ds2.id_akce>0,1,0))" } // pro #y je expr=" 0 "
    show SF [,,20,] {title:'SF', expr:"IF(da2.access=1,'S',IF(da2.access=2,'F','?'))"
      help:"pořádá S=YMCA Setkání, F=YMCA Familia"
      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db', format:'rsq*', skill:'#e'  }
    show barva { expr:"IF(da2.zruseno,3,IF(da2.id_hlavni,2,IF(sa2.id_duakce,1,0)))" }
    show kod   [,,36,] {title:'kód účetní', data:da2.ciselnik_akce
      css_cell:'ma_archiv,0:,1:oranzovy', format:'rsq*' }
    show druh  [,,60,] {title:'typ',    data:da2.druh, map_pipe:ms_akce_typ.zkratka, format:'sq#'
      css_cell:'web_p,0:,1:zluty' }
    show nazev [,,104,] {title:'název', data:da2.nazev, format:'tsq*',
      css_cell:"curr,1:curr_akce"}
    show ucast [,,30,] {title:'úč.', format:'rtsq=', help:'počet skupin účastníků',
      expr:"SUM((SELECT IF(COUNT(*)>0,1,0) FROM spolu WHERE id_pobyt=pa2.id_pobyt AND funkce!=99))"
      css_cell:'web_o,0:,1:cerveny' }
    show pecou [,,30,] {title:'pč.', format:'rtsq=', help:'počet pečounů'
      expr:"SUM((SELECT COUNT(*) FROM spolu WHERE id_pobyt=pa2.id_pobyt AND funkce=99))"}
    show misto [,,50,] {title:'místo',  data:da2.misto, format:'tsq*'
      css_cell:'isds,0:,1:ezer_ds', skill:'#e'}
    show  [,,70,] {title:'místo',  data:da2.misto, format:'tsq*'
      skill:'e'}
    show od    [,,65,] {title:'od',     data:da2.datum_od, format:'rs+q*'
      css_cell:'web_k,0:,1:azurovy,2:azurovy' }
    show do    [,,65,] {title:'do',     data:da2.datum_do, format:'rsq*'
      css_cell:'web_k,0:,1:azurovy' }
    show stat  [,,0,] {title:'stat.',    data:da2.statistika, map_pipe:ms_akce_stat.zkratka, format:'sq#'
      css_cell:'web_m,0:,1:zluty' }
    show zen   [,,0,] {title:'žen', format:'rtsq=', help:'počet žen',
      expr:"SUM((SELECT IF(COUNT(*)>0,1,0) FROM spolu JOIN pobyt USING (id_pobyt) JOIN osoba USING (id_osoba) WHERE id_pobyt=pa2.id_pobyt AND sex=2 AND funkce=0))" }
    func onclick() { 
      if (do.width()) { stat.width(35); zen.width(29); do.width(0) }
      elseif (zen.width()) { zen.width(0); stat.width(0); id_akce.width(32); idd.width(32);  }
      else { id_akce.width(0); idd.width(0); do.width(65) }
    }
    proc onchange() {
      [ has_skill('yas'); page.DocBrowse ]
    }
    func onsubmit() { 
      pracovni() 
    }
    func onrowclick() { 
      the_order= idd;
      a_title= nazev; 
      page.show_akce(id_akce); 
      if (has_skill('yas')) page.DocBrowse();
    }
    menu { type:'context'
      item { title:'Vybrat akci jako pracovní', proc onclick() { pracovni }}
    }
    // označení akce jako pracovní
    proc pracovni() { #==> .. pracovní
      not(accessed(org.get));
      alert("nemáte oprávnění označit jako pracovní akci jiné organizace");
    | pracovni_curr
    }
    func pracovni_curr() {
      if (volba_akce(id_akce)) {
        curr.set_attrib('expr',conc("IF(da2.id_duakce=",id_akce,",1,0)"));
        this.browse_seek();
      }
    }
    func onstart() { 
      if (!eq(sys('ezer','options','app'),'db2','dbt')) { // kód akce jen pro YS
        /*SF.width(0);*/ kod.width(0); nazev.width(140); 
      }
      // zobrazení vazby na objednávky DS
      if (!has_skill('y') /*&& !has_skill('e')*/) {
        page.ds_order.set_css('hidden','');
        info.sey.isds.set_attrib('expr'," 0 ");
        info.sey.idd.set_attrib('expr'," 0 ");
      }
    }
  }
  # --------------------------------------------------------------------------------------==> . akce
  select rok [4,5,52,] { tag:'r', format:'t', 
    func onchanged() { 
      the_rok= this; akce_roku(the_rok);
      if (has_skill('caan;yaan;faan'))
        page.opakuj= `Opakuj akci v roce ${rok+1}`;
  }}
  func nazev_akce(id_akce) {
    return id_akce ? ` ${sey.nazev}, ${fdate('Y',sey.od)}` : '';
  }
  func volba_akce(id_akce) { #==> . volba_akce
    if (!akce_choose(id_akce)) {
      warning("nepatříš do týmu této akce, takže s ní nemůžeš pracovat");
      return 0;
    }
    lst.info.fill(`${the_title} `);
    ucast.call('clear_ucast2');
    if (has_skill('yam;fam;cam')) maia.call('init_ucast');
    if (!has_skill('crz;e')) this.call('pece.init_pece'); // CRŽ
    // ošetření souběžných akcí - 0=normální akce, 1=hlavní akce, 2=souběžná akce
    if (has_skill('f')) page.soubezna= the_soubeh==2;
    // nastavení cookies podle organizace
    if (id_akce) {
      if (the_org==1) {
        the_akce_ys= the_duakce;
        set_cookie(`${sys('root')}_akce_ys`,the_akce_ys);
        set_cookie(`${sys('root')}_akce`,the_duakce);
      }
      elseif (the_org==2) {
        the_akce_fa= the_duakce;
        set_cookie(`${sys('root')}_akce_fa`,the_akce_fa);
      }
      else { // mimo YS+FA
        set_cookie(`${sys('root')}_akce`,the_duakce);
      }
      ucast.ucast_hnizda();
      if (!has_skill('T;e')) pece.pece_hnizda();
      if (has_skill('yam;fam;cam')) maia.mail_hnizda();
      tisk.tisk_hnizda()
    }
    return 1;
  }
  label head [0,0,*,30] { title:'', style:'z-index:0' }
  # volba pracovní akce
  button [376,5,,] { title:'Pracovní', 
    func onclick() {
      if (the_source=='sey') info.sey.pracovni() 
      elseif (the_source=='dum') info.dum.pracovni() 
      else alert('chyba kontextu')
  }}
  # export vlastností akcí nastaveného roku
  button [-226,5,,] { title:'Export', func onclick() {
    sey.browse_count(); sey.browse_export({file:'akce',type:'xls'});
    alert("vygenerovaný sešit lze stáhnout <a href='docs/akce.xls' target='xls'>zde</a>");
  }}
  # ==> .. graf průchodu účastníků akcemi
  button cesty [-123,5,,] { title:'Akce účastníků'                                       skill:'y|y;f|f'
    func onclick() { AKCE.cesty(page.key_akce) }}
  # ==> .. zobrazení mapy s pozicí míst účastníků dané akce a oprava PSČ
  button mapka [-21,5,,] { title:'Mapa účastníků',                                  skill:'#crz'
    help:"mapa s bydlišti účastníků akcí"
    func onclick() {
        mapa.id_akce= sey.id_akce;
        mapa.pecouni= sey.pecou;
      if ( mapa.id_akce ) {
        mapa.metoda= 'akce';
        mapa.modal(20,100,nazev_akce(mapa.id_akce));
      }
    }
  }
  proc fill(x) {
    [ x; head.set(conc("<div class='karta' style='padding-left:60px'>",x,"</div>")) ];
  }
}
# ==========================================================================================> akce
# přehled obsazení hnízd
panel AKCE [0,0,600,400] { title:' ', type:'popup', css:'dialog'
  var ida:number
  func cesty(_ida) { var y:object
    ida= _ida;
    clear(); panel.title= a_title;
    js.highcharts_load(); 
    h.txt= "<div id='akce_ucastnici' style='width:445px'></div>";
    y= php.akce_ucastnici(ida,'matrix',{firm:h.f,mrop:h.i,muzi:h.m,jine:h.j});
    if (y.chart) js.highcharts_show(y.chart,'akce_ucastnici');
    panel.modal(210,60);
  }
  use h: form {
    label txt [0,0,470,400] { style:'overflow:auto' }
    check f [480,10,100,] { title:'firming', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check i [480,30,100,] { title:'iniciace', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check m [480,50,100,] { title:'muži,otcové', value:"1", format:'t', func onchange() {cesty(ida)}} 
    check j [480,70,100,] { title:'jiné akce', value:"1", format:'t', func onchange() {cesty(ida)}} 
  }
}
# =========================================================================================> anotace
# oprava textu anotace na webu
panel ANOTACE [0,0,645,520] { title:' Úprava textu anotace', type:'popup', css:'dialog'
  use d: form _d [0,0,,],
  proc oprava(_ida) {
    _ida;
    d.load(_ida);
    [ panel.modal ] 
  | alert("napřed novou akci ulož");
  }
  form _d [10,10,600,460] {
    button  [540,9,45,20] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { form.save; panel.hide(1); } }
    button  [600,9,45,20] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { panel.hide(0); }
    }
    edit html [0,40,655,480] {type:'html', data:akce.web_anotace, par:°{toolbar:'EzerLetter'} },
  }
}
# ==========================================================================================> hnízda
# přehled obsazení hnízd
panel HNIZDA [0,0,640,520] { title:' ', type:'popup', css:'dialog',
    style:"height:calc(100% - 130px)"
  func prehled(ida) { var y:object
    clear(); panel.title= "Přehled obsazenosti hnízd této akce";
    y= php.akce2_hnizda(ida);
    h.txt= y.html;
    panel.modal(210,60);
  }
  use h: form {
    label txt [0,0,*,*] { style:'overflow:auto;background:white' }
  }
}
# =======================================================================================> přihlášky
# přehled přihlášek
panel PRIHLASKY [0,0,640,520] { title:' ', type:'popup', css:'dialog',
    style:"height:calc(100% - 130px)"
  func prehled(hotove) { var y:object
    clear(); panel.title= `Přehled ${hotove?'':'ne'}dokončených přihlášek`;
    h.txt= php.prihl_open(the_duakce,hotove);
    panel.popup(210,60);
  }
  use h: form {
    label txt [0,0,*,*] { style:'overflow:auto;background:white' }
  }
}
map akce_cenik:  table akce {where:"ma_cenik=1", order:'datum_od', key_id:'id_duakce'}
map akce_slozka: table _cis {where:"druh='akce_slozka'", order:'poradi', key_id:'data'}
map ms_cenik_verze: table _cis {where:"druh='ms_cenik_verze'", order:'poradi', key_id:'data'}
map ms_cenik_testy: table _cis {where:"druh='ms_cenik_testy'", order:'poradi', key_id:'data'}
map ms_akce_stat:   table _cis {where:"druh='ms_akce_stat'", order:'poradi', key_id:'data'}
map akce_garant:    table _cis {where:"druh='akce_garant'", order:'poradi', key_id:'data'}
map akce_tym:      table _user {where:"skills REGEXP '(\\s|^)(t|T)(\\s|$)'", order:'surname', key_id:'id_user'}
map akce_prihl_css: table _cis {where:"druh='akce_prihl_css'", order:'poradi', key_id:'data'}