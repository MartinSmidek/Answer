#pragma test
# ------------------------------------------------------------------------------------------------ #
# Karta pro rozesílání mailů vybraným osobám                                                       #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2015 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

# ------------------------------------------------------------------------------------------==> stav
var the_duakce_local: number    // zobrazená akce - pokud se liší od the_duakce, je třeba překreslit
var E_info: text
var dopis_id: text
var dopis_var: text             // typ rozesílání: U/U2 - účastníci akce, Q - query
var dopis_akce: number          // id_akce|0
var karta: text                 // et|es
var sql_export:text
var menu_item=0
# -----------------------------------------------------==> . reakce na změny rozměrů okna prohlížeče
const min_h=550           // minimální výška (nelze jednoduše měnit - jsou k ní vztaženy souřadnice)
var   curr_h: number      // výška nad základní výšku
# změna počtu řádků browse oproti aktuálním řádkům
proc onresize(w,h) { // echo('lst onresize(',w,',',h,')');
  [ and(lt(h,min_h.get),not(eq(curr_h.get,min_h.get)));
    curr_h.set(0); h_change_b()
  | and(gt(h,min_h.get),not(eq(h,sum(curr_h.get,min_h.get))));
    curr_h.set(minus(h,min_h.get)); h_change_b() ];
}
proc h_change_b() { var r:number, h:number
  h.set(sys('screen','height'));
  r.set(divide(sum(h.get,-173),17));
  not(eq(r,pr.ds.rows));
  pr.ds.set_attrib('rows',sum(r,-2)); // odečteme řádky testů
}
# ----------------------------------------------------------------------------==> globální procedury
proc reaccess() { #==> reaccess - změna
  gq.preload;
  menu_item.get;
  m.onclick(menu_item.get);
}
proc display_all_off() {
  et.display(0); gq.display(0); sq.display(0); es.display(0); pr.display(0);
}
# ------------------------------------------------------------------------------------------==> uses
use ii: form right [12,4,,]
use vy: form _vyber [10,30,,]   // výběr skupiny | zobrazené akce
use et: form _etext [10,40,,]   // editace mailu
use gq: form _gsql [10,34,,]    // generování SQL - mail-listy
use sq: form _esql [10,34,,]    // správa SQL
use es: form _esady [10,74,,]   // rozesílání
use pr: form _prehled [10,40,,] // přehled mailů
# ----------------------------------------------------------------------------------==> inicializace
proc test_dbg() {
  echo(dopis_id.get)
}
proc onfirstfocus() {
  display_all_off;
#   spinner(1);
  [ dirty.get | akce_onstart ];
  gq.preload;
  m.g.i.click;
#   spinner(0);
}
proc init_ucast() { echo('mai:init_ucast ',the_title.get);
  vy.fill(the_title.get);
}
# ------------------------------------------------------------------------------------------==> menu
menu m {type:'left', format:'f+'
  menu g {title:'Vytvoření hromadného mailu', type:'group'
    item i {title:'[fa-envelope-o] podle zvoleného mail-listu', _sys:'gen'
      par:°{k:'et',uq:'G',on:'gen',off:'skup|akce'} }
    item {title:'[fa-envelope] členům skupiny (SQL)', _sys:'sku'
      par:°{k:'et',uq:'Q',on:'skup',off:'gen|akce'} }
    item {title:'Kopie emailů z Domu setkání', skill:'yae'
      proc onclick (i) { alert(ask('mail2_copy_ds')); } }
  }
  menu {title:'Rozesílání mailů ', type:'group', _sys:'snd'
    item {title:'[fa-send-o] podle zvoleného mail-listu'
      par:°{k:'es',uq:'G',on:'gen',off:'akce|skup'} }
    item {title:'[fa-send] členům skupin (SQL)',
      par:°{k:'es',uq:'Q',on:'skup',off:'gen|akce'} }
  }
  menu {title:'Obecné rozesílací seznamy', type:'group', skill:'yamg;famg;camg'
    item {title:'[fa-file-text-o] Definování seznamů (mail-list)', _sys:'lst'
      par:°{k:'gq',uq:'G',on:'gen',off:'akce|skup'} }
    item {title:'[fa-file-text] Definice skupin (SQL)'
      par:°{k:'sq',uq:'',on:'skup',off:'gen|akce'} }
  }
  menu  {title:'Přehled odeslaných mailů', type:'group'
    item {title:'[fa-stack-overflow] všechny odeslané maily'}
    proc onclick (i) {
      display_all_off; vy.display(0,'.*'); pr.display(1); 
      ii.fill(replace_fa(conc(i.owner.title,' - ',i.title))," ");
      [ not(pr.ds.browse_count); pr.ds.browse_load ]
    }
  }
  menu  {title:'Struktura dat (výběr)', type:'group', skill:'yamg;famg;camg'
    item {title:'[fa-object-group] Přehled struktury dat'
      proc onclick (i) {
        pr.display(0);
        et.get.display(0); es.get.display(0); gq.get.display(0);
        sq.get.display(0); vy.get.display(0,'.*');
        ii.fill(replace_fa(conc(i.owner.title,' - ',i.title)),"<br>
          Zjednodušené schema databáze pro <b>Answer</b>
          s uvedením podmínek pro spojení pomocí JOIN<br><br>
          <img src='db2/img/schema_db_2015.png' />
        ");
      }
    }
    item {title:'[fa-database] tabulka AKCE',               par:°{tab:'akce'} }
    item {title:'[fa-database] tabulka POBYT',              par:°{tab:'pobyt'} }
    item {title:'[fa-database] tabulka SPOLU',              par:°{tab:'spolu'} }
    item {title:'[fa-database] tabulka OSOBA',              par:°{tab:'osoba'} }
    item {title:'[fa-database] tabulka TVORI',              par:°{tab:'tvori'} }
    item {title:'[fa-database] tabulka RODINA',             par:°{tab:'rodina'} }
    item {title:'[fa-database fa-red] tabulka MAILIST',     par:°{tab:'mailist'},   skill:'m' }
    item {title:'[fa-database fa-red] tabulka DOPIS',       par:°{tab:'dopis'},     skill:'m' }
    item {title:'[fa-database fa-red] tabulka MAIL',        par:°{tab:'mail'},      skill:'m' }
    item {title:'[fa-database fa-red] tabulka CENIK',       par:°{tab:'cenik'},     skill:'m' }
    item {title:'[fa-database fa-red] tabulka DAR',         par:°{tab:'dar'},       skill:'m' }
    proc onclick (i) {
      pr.display(0);
      et.get.display(0); es.get.display(0); gq.get.display(0);
      sq.get.display(0); vy.get.display(0,'.*');
      ii.fill(replace_fa(conc(i.owner.title,' - ',i.title)),ask('i_doc_table_struct',i.par.tab,0));
    }
  }
  proc onclick (i) {
    menu_item.set(i);
    ii.fill(replace_fa(conc(i.owner.title,' - ',i.title)),' ');
    pr.display(0);
    vy.get.display(1,i.par.on); vy.get.display(0,i.par.off);
    dopis_var.set(i.par.uq); karta.set(i.par.k);
    dopis_id.set(0); dopis_akce.set(the_duakce.get);
    et.form_init;
    vy.note_Q.display(0);
    switch(i.par.k,
    'gq',{et.display(0); es.display(0); gq.display(1);        // mail-listy
          sq.display(0); vy.display(0,'es'); gq.m_reload},
    'et',{et.display(1); es.display(0); gq.display(0); vy.note_Q.display(1);
          sq.display(0); vy.display(0,'es'); et.reload},
    'sq',{et.display(0); es.display(0); gq.display(0);
          sq.display(1); vy.display(0,'es'); sq.reload},
    'es',{et.display(0); es.display(1); gq.display(0);
          sq.display(0); vy.display(1,'es'); es.reload},
         {et.display(0); es.display(0)});
  }
}
# --------------------------------------------------------------------------------------==> _prehled
form _prehled {
  view d: table dopis
  view ma: table mail {join_type:'LEFT' join:'USING (id_dopis)'}
  view da: table akce {join_type:'LEFT' join:'USING (id_duakce)'}
  browse ds { rows:27, qry_rows:3, group_by:'id_dopis'
    show idd { data:d.id_dopis }
    show org [,,20,]    { title:"org", data:d.access, format:"uq*" 
      proc onsubmit() { this.save } }
    show datum [,,75,]  { title:"odesláno", data:d.datum, format:"rq*s-" }
    show akce [,,35,]   { title:"a", help:"ID akce", data:d.id_duakce, format:"rq=s" }
    show druh [,,35,]   { title:"t", help:"typ akce", data:da.druh, format:"rq=s" }
    show list [,,35,]   { title:"m", help:"ID mailistu", data:d.id_mailist, format:"rq=s" }
    show cis  [,,35,]   { title:"c", help:"ID SQL skupiny", data:d.cis_skupina, format:"rq=s" }
    show count[,,35,]   { title:"# mailů", help:"počet mailů", expr:"COUNT(ma.id_mail)", format:"rq=s" }
    show nazev [,,200,] { title:"předmět", data:d.nazev, format:"q*st" }
    proc onrowclick () { var y:object
      y.set(ask('mail2_mai_text',idd.get,1)); // zjistit i akci nebo mailist
      obsah.set(y.html);
    }
  }
  label obsah [515,0,315,200] { title:'zobrazení akce nebo mailistu, předmětu a textu mailu' }  
}
# ----------------------------------------------------------------------------------------==> _vyber
form _vyber {
  # --------------------------- výběr skupiny
  label  [0,10,380,28] { tag:'skup', css:'ae_parm' }
  label [7,17,100,17] { tag:'skup', title:'výběr skupiny:' }
  select komu_Q  [82,15,289,17] { tag:'skup', type:'map', options:map_db_maily_sql.zkratka, format:'t'
    help:'komu|výběr skupiny adresátů'
    proc onchange() {
      switch(karta.get,
      'et',{et.reload; sql_cis.load(0,conc("druh='db_maily_sql' AND data=",this.key)) },
      'es',{es.reload},
      'sq',{sq.reload})
    }
  }
  view sql_cis: table _cis
  edit note_Q [391,6,361,39] { tag:'skup', data:sql_cis.popis, format:'o',
    style:'font-size:10px;overflow:auto' }
  # --------------------------- výběr mail-listu
  label  [0,10,380,28] { tag:'gen', css:'ae_parm', format:'n' }
  label [7,19,100,17] { tag:'gen', title:'výběr mail-listu:', format:'n'
    proc onclick() { gq.init_mailist } }
  select komu_G  [82,15,289,17] { tag:'gen', format:'nt'
    help:'komu|výběr mail-listu'
    proc onchange() {
      switch(karta.get,'et',{et.reload},'es',{es.reload},'sq',{sq.reload},
        'gq',{gq.id_mailist.set(this.key); gq.m_reload})
  } }
#   select komu_G  [82,15,289,17] { tag:'gen', type:'map', options:map_db_mailist.ucel, format:'nt'
#     help:'komu|výběr mail-listu'
#     proc onchange() {
#       switch(karta.get,'et',{et.reload},'es',{es.reload},'sq',{sq.reload},
#         'gq',{gq.id_mailist.set(this.key); gq.m_reload})
#   } }
  # --------------------------- rozesílání
  label popis [391,21,240,19] { tag:'es', format:'n', title:"
    <span class='zeleny'> posláno </span>&nbsp;&nbsp;
    <span class='cerveny'> chyba či neposílat </span>&nbsp;&nbsp;
    <span class='zluty'> poslat znovu </span>
   "
  }
  # úprava seznamů adresátů
  button [619,12,,] { tag:'es', title:"upravit adresáty"
    proc onclick() { vynechej.modal }}
  button [725,12,,] { tag:'es', title:"export"
    proc onclick() { alert(ask('mail2_mai_export',dopis_id.get)) }}
  panel vynechej [0,0,400,160] { type:'popup', title:"úprava seznamu adresátů"
    use f:form _f [0,0,,]
    form _f [,,400,100] {
      label [10,10,380,] { title:"Ze seznamu adresátů chci odstranit (označit červeně):" }
      # vynechání adresátů daného dopisu
      label [10,30,380,] { title:"a) adresáty ze seznamu jiných dopisů (podle jejich ID)" }
      button [10,45,,] { title:'neposlat', help:'vynechání adresátů z mailu s daným id_dopis'
        proc onclick () {
          es.msg.set('čekej ...');
          es.msg.set(ask('mail2_mai_omitt',dopis_id.get,vynech_dopisy.get));
          es.maily.browse_refresh; panel.close
        }
      }
      field vynech_dopisy [100,45,280,] { format:'t' }
      # vynechání adresátů daných adres
      label [10,76,380,] { title:"b) adresáty s danými emailovými adresami" }
      button [10,91,,] { title:'neposlat', help:'vynechání adresátů daných adres'
        proc onclick () {
          es.msg.set('čekej ...');
          es.msg.set(ask('mail2_mai_omitt2',dopis_id.get,vynech_emaily.get));
          es.maily.browse_refresh; panel.close
        }
      }
      field vynech_emaily [100,91,280,] { format:'t' }
      # vynechání adresátů podle jejich ID
      label [10,122,380,] { title:"c) adresáty podle jejich ID" }
      button [10,137,,] { title:'neposlat', help:'vynechání adresátů s danými ID'
        proc onclick () {
          es.msg.set('čekej ...');
          es.msg.set(ask('mail2_mai_omitt3',dopis_id.get,vynech_osoby.get));
          es.maily.browse_refresh; panel.close
        }
      }
      field vynech_osoby [100,137,280,] { format:'t' }
    }
  }
}
# ---------------------------------------------------------------------------------==> MAILIST _gsql
# mail-listy - generátor SQL dotazů, tags:
# def = správa mail-listů
# snd = rozesílání
var sql_dirty: number  // nuluje se fcí dirty
form _gsql {
  const t_butt = 5; l_butt = 530
  const t_akce = 60; l_ne_akce = 380
  view g: table mailist
  field id_mailist [309,t_akce+12,60,] { data:g.id_mailist, format:'ro', css:'Label' }
  field access { data:g.access }
  label [5,44,76,17] { title:'název:', format:'r' }
  field ucel  [83,40,267,]  { data:g.ucel, value:'' proc onchange() {
    and(vy.komu_G.key,lt(vy.komu_G.key,4));
    alert("název testovacího mail-listu není možné měnit");
    this.set(vy.komu_G.get); this.plain
  } }
  check spec [408,10,137,] { title:"speciální mail-list", data:g.specialni, value:'0', format:'d' }
  check blokovano [408,39,138,] { title:"zablokovat dotazy", data:g.blokovano, value:'0' }
  field parms { data:g.parms }
  field gsql { data:g.sexpr }
  # -----------------==> . příkazy
  label  [l_butt,t_butt,222,55] { tag:'def', css:'ae_parm' }
  button qry_save [l_butt+7,t_butt+5,,] { tag:'def',title:'Uložit',  help:'Uložit mail-list',
    proc onclick() { spec.get; warning("speciální mail-list nelze měnit") | save_sql(1) } }
  button [l_butt+55,t_butt+5,,] { tag:'def', title:'Zpět',  help:'Neuložit změny',
    proc onclick() { m_reload } }
  button [l_butt+7,t_butt+30,,] { tag:'def', title:'Nový',  help:'Nový mail-list', proc onclick() {
    reinit; akce_show; vy.komu_G.key(0);
  } }
  button [l_butt+55,t_butt+30,,] { tag:'def', title:'Default', help:'inicializovat mail-list',
    proc onclick() { var nazev:text, idm:number
      nazev.set(ucel.get); idm.set(id_mailist.get);
      reinit; dirty;
      ucel.set(nazev); id_mailist.set(idm);
      akce_show; }}
  button [l_butt+113,t_butt+30,,] { tag:'def', title:'Odstranit', help:'smazat SQL mail-list',
    proc onclick() { var ret:object
      spec.get; warning("speciální mail-list nelze smazat")
    | ret.set(ask('mail2_lst_delete',id_mailist.get,0));
      ret.ok;
      [ confirm('opravdu smazat mail-list <i>',ucel.get,'</i>?');
        ask('mail2_lst_delete',id_mailist.get,1);
        // po smazání nastav první mailist
        init_mailist
      ]
    | alert(ret.msg)
  }}
  button [l_butt+130,t_butt+5,,] {tag:'def', title:'Excel', help:'Export emaily a adres do Excelu',
    proc onclick(){
      [ spec.get | save_sql(0) ];
      sql_export.set(gsql.get);
      alert(ask('mail2_gen_excel',sql_export.get,ucel.get))
  } }
  button [l_butt+175,t_butt+5,,] {tag:'def', title:'PDF', help:'Export adres do PDF', format:'d'
    proc onclick(){ warning('N.Y.I.') } }
  # ----------------------==> . výběr typu ano-akce
  label [10,t_akce,300,] { tag:'def', title:"<h3>obeslat účastníky akcí</h3>" }
  label [5,t_akce+10,370,435] { tag:'def', css:'ae_work'}
  check ano_akce [10,t_akce+30,150,] { tag:'def', title:'jen některé typy akcí?',
    value:'0', format:'t'
    proc onchange() { ano_akces.display(this.get); ano_akces.selected('clear'); dirty; akce_show }}
  browse ano_akces [230,t_akce+30,,] { rows:9,
    view c: table _cis
    show id_cis { data:c.id_cis }
    show druh {data:c.data}
    show { data:c.poradi, format:'s+' }
    show [,,110,] { title:'typ akce', data:c.zkratka, format:'t' }
    proc onchoice() { dirty; akce_show }
    proc onsubmit() { dirty; ano_akces.selected('toggle',1); }
    menu { type:'context'
      item { title:'zobrazit vybrané'
        proc onclick() { ano_akces.selected("use"); ano_akces.browse_load  } }
      item { title:'zobrazit vše'
        proc onclick() { ano_akces.selected("ignore"); ano_akces.browse_load } }
    }
  }
  # -------==> . časové ano-podmínky
  const cas_options = "(bez omezení):1,plánovaná akce:2,letos:3,vloni:4,dříve než před:5,později než před:6,místo (lze užít ?*):11,název (lze užít ?*):12"
  var last_ano: number
  button ano_cas [10,t_akce+60,,] { tag:'def', title:'omezení akcí časem, místem,...',
    proc onclick() {
      last_ano.set(L_ano.add);
      L_ano.part(last_ano.get).part('rok').init(1);
      L_ano.part(last_ano.get).part('vzor').init(1);
      L_ano.part(last_ano.get).part('kdy').selects(cas_options.get);
      L_ano.part(last_ano.get).part('kdy').key(3);
      L_ano.part(last_ano.get).part('kdy').change;
      akce_show
  } }
  list L_ano [10,t_akce+90,215,500] { tag:'def', rows:22
    select kdy [0,4,120,] { format:'t',
      proc onchange() {
      [ rok.display(0); rokem.display(0); vzor.display(0);
        gt(this.key,10); vzor.display(1)
      | gt(this.key,4); rok.display(1); rok.set(1); rokem.display(1)
      ];
      rok.change
    }}
    field rok [125,4,25,] { format:'nt', value:'0'
      proc onchanged() {
        rokem.set(function('n',"return je_1_2_5(n,'rokem,lety,lety');",rok.get));
        form.dirty; form.akce_show }}
    label rokem [155,9,50,] { format:'n', title:"lety" }
    field vzor [125,4,85,] { format:'nt', value:'', help:'začátek názvu'
      proc onchanged() { form.dirty; form.akce_show }}
  }
  # ------------------------==> . výběr typu ne-akce
  check use_ne_akce [l_ne_akce+10,t_akce+10,300,] { title:"", format:'t'
    proc onchange() {
      L_ne.init; ne_akce.set(0);
      this.get;
      ne_akce.display(1); ne_cas.display(1); ctrl_akce_ne.display(1);
      ne_akce.onchange;
    | ne_akce.display(0); ne_cas.display(0); ctrl_akce_ne.display(0); ne_akces.display(0);
      ne_akce.onchange;
    }
  }
  label [l_ne_akce+32,t_akce,300,] { tag:'def',
    title:"<h3>... z toho vynechat účastníky jiných akcí</h3>" }
  label [l_ne_akce+5,t_akce+10,370,435] { tag:'def', css:'ae_work'}
  check ne_akce [l_ne_akce+10,t_akce+30,150,] { tag:'def', title:'některých typů akcí?',
    value:'0', format:'nt'
    proc onchange() { ne_akces.display(this.get); ne_akces.selected('clear'); dirty; akce_show }}
  browse ne_akces [l_ne_akce+230,t_akce+30,,] { rows:9, format:'n'
    view c: table _cis
    show id_cis { data:c.id_cis }
    show druh {data:c.data}
    show { data:c.poradi, format:'s+' }
    show [,,110,] { title:'typ akce', data:c.zkratka, format:'t' }
    proc onchoice() { dirty; akce_show; }
    proc onsubmit() { dirty; ne_akces.selected('toggle',1); }
    menu { type:'context'
      item { title:'zobrazit vybrané'
        proc onclick() { ne_akces.selected("use"); ne_akces.browse_load  } }
      item { title:'zobrazit vše'
        proc onclick() { ne_akces.selected("ignore"); ne_akces.browse_load } }
    }
  }
  # -------==> . časové ne-podmínky
  var last_ne: number
  button ne_cas [l_ne_akce+10,t_akce+60,,] { tag:'def', title:'omezení akcí časem, místem,...',
    proc onclick() {
      last_ne.set(L_ne.add);
      L_ne.part(last_ne.get).part('rok').init(1);
      L_ne.part(last_ne.get).part('vzor').init(1);
      L_ne.part(last_ne.get).part('kdy').selects(cas_options.get);
      L_ne.part(last_ne.get).part('kdy').key(3);
      L_ne.part(last_ne.get).part('kdy').change;
      akce_show
  } }
  list L_ne [l_ne_akce+10,t_akce+90,215,500] { tag:'def', rows:22
    select kdy [0,4,120,] { format:'t',
      proc onchange() {
      [ rok.display(0); rokem.display(0); vzor.display(0);
        gt(this.key,10); vzor.display(1)
      | gt(this.key,4); rok.display(1); rok.set(1); rokem.display(1)
      ];
      rok.change
    }}
    field rok [125,4,25,] { format:'nt', value:'0'
      proc onchanged() {
        rokem.set(function('n',"return je_1_2_5(n,'rokem,lety,lety');",rok.get));
        form.dirty; form.akce_show }}
    label rokem [155,9,50,] { format:'n', title:"lety" }
    field vzor [125,4,85,] { format:'nt', value:'', help:'začátek názvu'
      proc onchanged() { form.dirty; form.akce_show }}
  }
  # -------------------------------------==> . kriteria obeslaných účastníků
  const t_pro = 500
  label [10,t_pro+10,300,] { tag:'def', title:"<h3>koho z účastníků obeslat?</h3>" }
  label [5,t_pro+15,370,154] { tag:'def', css:'ae_work'}
  // funkce
  check pro_fce [10,t_pro+40,150,] { tag:'def', title:'jen s vybranými funkcemi?', value:'0', format:'t'
    proc onchange() { fces.display(this.get); fces.selected('clear'); dirty } }
  browse fces [230,t_pro+25,,] { /*tag:'def',*/ rows:6
    view c: table _cis
    show id_cis { data:c.id_cis }
    show fce {data:c.data}
    show { data:c.poradi, format:'s+' }
    show [,,110,] { title:'funkce', data:c.zkratka, format:'t' }
    proc onchoice() { dirty }
    proc onsubmit() { dirty; fces.selected('toggle',1); }
    menu { type:'context'
      item { title:'zobrazit vybrané'
        proc onclick() { fces.selected("use"); fces.browse_load  } }
      item { title:'zobrazit vše'
        proc onclick() { fces.selected("ignore"); fces.browse_load } }
    }
    # kód
    proc code_fce() { var cond: text, ids: text, keys: text
      cond.set(1);
      json_akce.set(conc('"funkce":',pro_fce.get));
      [ pro_fce.get;
        ids.set(this.selected('get'));
        [ ids; keys.set(ask('select',"GROUP_CONCAT(data)",'_cis',conc("id_cis IN (",ids,")")))
        | keys.set(fce.get) ];
        json_akce.set(conc(json_akce.get,',"fce_keys":"',keys,'"'));
        cond.set(conc("p.funkce IN (",keys,")"))
      | // vyloučíme funkce znamenající neúčast - mají v číselníku ikona=1
        ids.set(ask('select1',"GROUP_CONCAT(data)",'_cis',"druh='ms_akce_funkce' AND ikona=1"));
        cond.set(conc("p.funkce NOT IN (",ids,")"))
      ];
      return(cond);
    }
  }
  // sex
  check pro_muze   [10,t_pro+60,58,] { tag:'def', title:'muže', value:'1', format:'t'
    proc onchange() { dirty; this.get | pro_pary.set(0) } }
  check pro_zeny   [65,t_pro+60,63,] { tag:'def', title:'ženy', value:'1', format:'t'
    proc onchange() { dirty; this.get | pro_pary.set(0) } }
  check pro_pary [120,t_pro+60,110,] { tag:'def', title:'manželský pár', value:'0', format:'t'
    help:"bude zasláno jen manželským párům"
    proc onchange() {
      dirty; this.get; pro_muze.set(1); pro_zeny.set(1);
      pro_vek.init; pro_vek.change
    } }
  // mrop
  check pro_mrop   [26,t_pro+82,50,] { tag:'def', title:'mrop', value:'0', format:'t'
    proc onchange() { form.display(this.get,'mrop'); pro_mrop_f.init(1); pro_mrop_s.key(1); dirty;}
    proc code_mrop() { var cond: text
      cond.set(1);
      { pro_mrop.get;
        json_akce.set(conc(',"mrop":{"ucast":',this.get));
        [ this.get;
          json_akce.set(conc(json_akce.get,',"kolik":',pro_mrop_f.get,',"jak":',pro_mrop_s.key));
          cond.set(switch(pro_mrop_s.key,
            1,{conc('iniciace>=',pro_mrop_f.get)},
            2,{conc('iniciace>0 AND iniciace<=',pro_mrop_f.get)},
            3,{conc('iniciace=',pro_mrop_f.get)},
            4,{'iniciace=0'}));
        ];
        json_akce.set(conc(json_akce.get,'}'));
      | json_akce.set(',"mrop":0')
      };
      return(cond);
    }
  }
  field pro_mrop_f [90,t_pro+82,30,] { tag:'def,mrop', format:'ntr', value:'2001'
    proc onchange() { dirty } }
  select pro_mrop_s [126,t_pro+82,74,] { tag:'def,mrop', format:'nt'
    proc onchange() { pro_mrop_f.display(not(eq(this.key,4))); dirty }
  }
  // účasti
  check pro_ucast  [10,t_pro+104,90,] { tag:'def', title:'podle účastí?', value:'0', format:'t'
    proc onchange() { dirty; form.display(this.get,'ucast'); pro_kolik.init(1); pro_jak.key(1); dirty }
    proc code_ucasti(_having) { var having:text
      // k předané klauzuli uvozené HAVING (nebo AND) přidá podle nastavených účastí
      having.set('');
      json_akce.set(conc(',"ucasti":{"ucast":',this.get));
      [ this.get;
        json_akce.set(conc(json_akce.get,',"kolik":',pro_kolik.get,',"jak":',pro_jak.key));
        having.set(cconc(
          eq(pro_jak.key,1),conc(_having," _ucasti=",pro_kolik.get),
          eq(pro_jak.key,2),conc(_having," _ucasti>=",pro_kolik.get),
          eq(pro_jak.key,3),conc(_having," _ucasti<=",pro_kolik.get)
      ))];
      json_akce.set(conc(json_akce.get,'}'));
      return(having);
    }
  }
  field pro_kolik [100,t_pro+104,20,] { tag:'def,ucast', format:'ntr', value:'1'
    proc onchange() { dirty } }
  select pro_jak  [125,t_pro+104,74,] { tag:'def,ucast', format:'nt'
    proc onchange() { dirty } }
  #==> ... podle věku
  check pro_vek   [10,t_pro+126,90,] { tag:'def', title:'podle věku?', value:'0', format:'t'
    proc onchange() {
      dirty; form.display(this.get,'vek'); pro_vek_f.init(1);
      [ this.get; pro_pary.set(0) ]
    }
    proc having_vek(_having) { var having:text
      // k předané klauzuli uvozené HAVING (nebo AND) přidá podle nastavených účastí
      having.set(_having);
      [ this.get;
        having.set(conc(having,cconc(eq(_having,''),"HAVING "," AND "),'_vek>=',pro_vek_f.get));
      ];
      return(having);
    }
  }
  field pro_vek_f [100,t_pro+126,20,] { tag:'def,vek', format:'ntr', value:'18'
    proc onchange() { dirty } }
  label [125,t_pro+131,30,] { tag:'def,vek', title:'a více', format:'n' }
  // má mail
  check pro_mail  [10,t_pro+148,90,] { tag:'def', title:'známe email', value:'1', format:'t'
    proc onchange() { dirty } }
  # ------------------------------------- zápis a nastavení stavu do JSON
  proc make_json() { #==> .. make_json
    var json: text
    var keys: text
    var values: text
    var x: object
    json.set('');
    # ano-akce
    code_akce_do(L_ano,ano_akce.get,ano_akces,1,my_access.get);
    json.set(conc(json,'"ano_akce":',json_akce.get));
    # ne-akce
    { use_ne_akce.get;
      [ code_akce_do(L_ne,ne_akce.get,ne_akces,0,3) ];
      json.set(conc(json,',"ne_akce":',json_akce.get));
    | json.set(conc(json,',"ne_akce":0'));
    };
    # podmínky na účasti
    json.set(conc(json,',"ucasti":{'));
    [ fces.code_fce ]; json.set(conc(json,json_akce.get));
    json.set(conc(json,',"muzi":',pro_muze.get,',"zeny":',pro_zeny.get,',"pary":',pro_pary.get));
    [ pro_ucast.code_ucasti('') ]; json.set(conc(json,json_akce.get));
    [ pro_mrop.code_mrop ]; json.set(conc(json,json_akce.get));
    json.set(conc(json,',"vek":',pro_vek.get));
    [ pro_vek.get; json.set(conc(json,',"roky":',pro_vek_f.get)) ];
    json.set(conc(json,',"email":',pro_mail.get));
    json.set(conc(json,'}'));
    # kompletace
    json.set(conc("{",json,'}'));
    return(json);
  }
  proc read_json(parm) { #==> .. read_json
    var p: object
    var ids: text
    parm;
    p.set(ask('mail2_lst_read',parm));
    not(eq(p,0));
    # ano-akce
    ano_akce.set(p.ano_akce.typy); ano_akce.onchange;
    [ p.ano_akce.keys;
      ids.set(ask('select',"GROUP_CONCAT(id_cis)",'_cis',
        conc("druh='ms_akce_typ' AND data IN (",p.ano_akce.keys,")")));
      ano_akces.selected('set',ids) ];
    foreach(p.ano_akce.cas,read_cas_ano);
    # ne-akce
    use_ne_akce.set(cconc(p.ne_akce.get,1,0)); use_ne_akce.onchange;
    [ use_ne_akce.get;
      { p.ne_akce.typy; ne_akce.set(1); ne_akces.display(1) | ne_akce.set(0) };
      ne_akces.selected('clear');
      foreach(p.ne_akce.cas,read_cas_ne);
      [ p.ne_akce.keys;
        ids.set(ask('select',"GROUP_CONCAT(id_cis)",'_cis',
          conc("druh='ms_akce_typ' AND data IN (",p.ne_akce.keys,")")));
        ne_akces.selected('set',ids)
      ];
    ];
    # funkce
    pro_fce.set(p.ucasti.funkce); pro_fce.onchange;
    [ p.ucasti.fce_keys;
      ids.set(ask('select',"GROUP_CONCAT(id_cis)",'_cis',
        conc("druh='ms_akce_funkce' AND data IN (",p.ucasti.fce_keys,")")));
      fces.selected('set',ids) ];
    # muži/ženy/páry
    pro_muze.set(p.ucasti.muzi); pro_zeny.set(p.ucasti.zeny); pro_pary.set(p.ucasti.pary);
    # mrop
    { p.ucasti.mrop;
      pro_mrop.set(p.ucasti.mrop.ucast); pro_mrop.onchange;
      [ pro_mrop.get; pro_mrop_f.set(p.ucasti.mrop.kolik); pro_mrop_s.key(p.ucasti.mrop.jak);
        pro_mrop_f.display(not(eq(p.ucasti.mrop.jak,4))) ]
    | pro_mrop.set(0); pro_mrop.onchange;
    };
    # účasti
    pro_ucast.set(p.ucasti.ucasti.ucast); pro_ucast.onchange;
    [ pro_ucast.get; pro_kolik.set(p.ucasti.ucasti.kolik); pro_jak.key(p.ucasti.ucasti.jak) ];
    # věk
    pro_vek.set(p.ucasti.vek); pro_vek.onchange;
    [ pro_vek.get; pro_vek_f.set(p.ucasti.roky) ];
    # mail
    pro_mail.set(p.ucasti.email);
  | warning('chyba při zpracování JSON!')
  }
  proc read_cas_ano(xi) {
    gt(xi.akey,1); // vynecháme "neomezovat"
    ano_cas.onclick;
    L_ano.part(last_ano.get).part('kdy').key(xi.akey);
    L_ano.part(last_ano.get).part('kdy').call('onchange');
    [ gt(xi.akey,10); L_ano.part(last_ano.get).part('vzor').set(xi.val);
    | gt(xi.akey,4);  L_ano.part(last_ano.get).part('rok').set(xi.val)
    ];
  }
  proc read_cas_ne(xi) {
    gt(xi.akey,1); // vynecháme "neomezovat"
    ne_cas.onclick;
    L_ne.part(last_ne.get).part('kdy').key(xi.akey);
    L_ne.part(last_ne.get).part('kdy').call('onchange');
    [ gt(xi.akey,10); L_ne.part(last_ne.get).part('vzor').set(xi.val);
    | gt(xi.akey,4);  L_ne.part(last_ne.get).part('rok').set(xi.val)
    ];
  }
  # ------------------------------------- zobrazení akcí a výpočet podmínek
  var akce_ano: text
  var akce_ne: text
  proc akce_show() { #==> .. akce_show
    akce_ano.set(code_akce_do(L_ano,ano_akce.get,ano_akces,1,my_access.get));
    { or(ne_akce.get,L_ne.get);
      akce_ne.set(code_akce_do(L_ne,ne_akce.get,ne_akces,0,255)); // jakákoli organizace = 255
    | akce_ne.set("FALSE")
    };
    [ ctrl_akce_ne.browse_load(akce_ne.get) ];
    [ ctrl_akce_ano.browse_load(akce_ano.get) ];
  }
  # -------------------------------------==> . přehled použití mailistu
  label using [l_ne_akce+5,t_pro+15,207,54] { tag:'def', css:'ae_work', style:"padding:10px"}
  # ------------------------------------- tvorba a úschova SQL dotazu, testy, mapa
  var from: text
  var cond: text
  label  [620,t_pro+12,132,55] { tag:'def', css:'ae_parm' }
  button [628,t_pro+17,,] { tag:'def', title:'TEST',  help:'otestovat dotaz', proc onclick() {
    [ spec.get | save_sql(0) ]; run_sql } }
  button [678,t_pro+17,,] { tag:'def', title:'(jen SQL)',  help:'otestovat dotaz', proc onclick() {
    [ spec.get | save_sql(0) ]; save_sql(0) } }
  button [628,t_pro+42,,] { tag:'def', title:'MAPA',  help:'zobrazit mapu adresátů', //==> .. mapa
    proc onclick() {
      mapa.id_mailist.set(id_mailist.get);
      mapa.metoda.set('mail');
      mapa.modal(20,100,ucel.get);
  } }
  button [678,t_pro+42,,] { tag:'def', title:'(jen JSON)',  proc onclick() {
    tsql.set(make_json) } }
  proc make_sql(to_show) {
    pro_pary.get; make_sql_pary(to_show) | make_sql_osoby(to_show)
  }
  proc make_sql_pary(to_show) { # --------------------------------------------- ==> .. páry make_sql
    // dotaz založený na rodina
    var having: text
    having.set(''); cond.set("TRUE");
    # výběry a zobrazení akcí
    akce_show;
    # ... - funkce
    cond.set(conc(cond.get,' AND ',fces.code_fce));
    # ... - mrop
    cond.set(conc(cond.get,' AND ',pro_mrop.code_mrop));
    # sestavení SELECT pro rodinu
    gsql.set(conc(
      "SELECT -- výběr manželského páru",chr(10),
      "  r2._ne,id_rodina AS _idr,r.access,COUNT(DISTINCT id_pobyt) AS _ucasti,",chr(10),
      "  r2._name,r2._ulice,r2._psc,r2._obec,r2._stat,r2._email,r2.nomaily,r2._telefon,r2._spolu,",chr(10),
      "  MAX(iniciace) AS iniciace",chr(10),
      "FROM pobyt AS p",chr(10),
      "JOIN akce AS a ON a.id_duakce=p.id_akce JOIN rodina AS r ON id_rodina=i0_rodina ",chr(10),
      "JOIN tvori AS t USING (id_rodina) JOIN osoba AS o USING (id_osoba)",chr(10),
      "-- ---------------- výběr manželského páru - s vynechání účastníků nastavených akcí",chr(10),
      "JOIN ( SELECT id_rodina AS _idr,",chr(10),
      "  SUM(IF(",akce_ne.get,",1,0) ) AS _ne,",chr(10),
      "  GROUP_CONCAT(DISTINCT role) AS _role,",chr(10),
      "  CONCAT(r.nazev,' ',GROUP_CONCAT(DISTINCT jmeno ORDER BY role SEPARATOR ' a ')) AS _name,",chr(10),
      "  r.psc AS _psc, r.ulice AS _ulice, r.obec AS _obec, r.stat AS _stat,",chr(10),
      "  GROUP_CONCAT(DISTINCT IF(o.kontakt,IF(o.email='',r.emaily,o.email),r.emaily)) AS _email,nomaily,",chr(10),
      "  GROUP_CONCAT(DISTINCT IF(o.kontakt,IF(o.telefon='',r.telefony,o.telefon),r.telefony)) AS _telefon,",chr(10),
      "  datsvatba,TIMESTAMPDIFF(YEAR,datsvatba,NOW()) AS _spolu",chr(10),
      "FROM rodina AS r",chr(10),
      "JOIN pobyt AS p ON r.id_rodina=p.i0_rodina JOIN akce AS a ON a.id_duakce=p.id_akce",chr(10),
      "JOIN tvori AS t USING (id_rodina) JOIN osoba AS o USING (id_osoba)",chr(10),
      "WHERE r.deleted='' AND r.access&",my_access.get," AND t.role IN ('a','b')",chr(10),
      "GROUP BY id_rodina HAVING _ne=0 AND FIND_IN_SET('a',_role) AND FIND_IN_SET('b',_role)",chr(10),
      ") AS r2 ON _idr=r.id_rodina",chr(10),
      "-- ---------------- výběr osob - účastníků nastavených akcí ",chr(10),
      "WHERE r.deleted='' AND ",cond.get,chr(10),
      "  AND id_akce IN (SELECT id_duakce FROM akce WHERE spec=0 AND access&",
      my_access.get," AND ",akce_ano.get,")",chr(10),
      "GROUP BY id_rodina ",pro_ucast.code_ucasti("HAVING"),chr(10),
      "ORDER BY _name",chr(10)
    ));
    [ to_show; tsql.set(ask('mail2_lst_try',gsql.get,1)) ];
  }
  proc make_sql_osoby(to_show) { # ------------------------------------------- ==> .. osoby make_sql
    // dotaz založený na osoba
    # výběry a zobrazení akcí
    akce_show;
    from.set(conc("FROM pobyt AS p JOIN spolu AS s USING (id_pobyt) ",
      chr(10),"JOIN osoba AS o ON s.id_osoba=o.id_osoba JOIN akce AS a ON a.id_duakce=p.id_akce ",
      chr(10),"LEFT JOIN tvori AS t ON t.id_osoba=o.id_osoba LEFT JOIN rodina AS r USING (id_rodina)"));
    # výběry lidí - pohlaví
    { and(pro_muze.get,pro_zeny.get); cond.set("TRUE")
    | pro_muze.get; cond.set("o.sex='1'")
    | pro_zeny.get; cond.set("o.sex='2'")
    | warning("chybí výběr muži/ženy") };
    [ pro_mail.get;
      cond.set(conc(cond.get,
        " AND (IF(o.kontakt,o.email!='',FALSE) OR r.emaily!='') ")) ];
    # vynechání dětí (jsou-li v rodině)
    cond.set(conc(cond.get," AND IFNULL(t.role,'?')!='d'"));
    # ... - funkce
    cond.set(conc(cond.get,' AND ',fces.code_fce));
    # ... - mrop
    cond.set(conc(cond.get,' AND ',pro_mrop.code_mrop));
    # sestavení SELECT pro osobu
    gsql.set(conc(
      "SELECT o.access,COUNT(*) AS _ucasti,iniciace,o.id_osoba AS _id,",chr(10),
      "  CONCAT(TRIM(prijmeni),' ',TRIM(jmeno)) AS _name,",chr(10),
      "  IF(o.adresa,o.psc,IFNULL(r.psc,'')) AS _psc,",chr(10),
      "  IF(o.adresa,o.ulice,IFNULL(r.ulice,'')) AS _ulice,",chr(10),
      "  IF(o.adresa,o.obec,IFNULL(r.obec,'')) AS _obec,",chr(10),
      "  IF(o.adresa,o.stat,IFNULL(r.stat,'')) AS _stat,",chr(10),
      "  IF(o.kontakt,o.email,IFNULL(r.emaily,'')) AS _email,nomail,",chr(10),
      "  IF(o.kontakt,o.telefon,IFNULL(r.telefony,'')) AS _telefon,",chr(10),
      "  narozeni,TIMESTAMPDIFF(YEAR,narozeni,NOW()) AS _vek",chr(10),
      from.get,chr(10),
      "WHERE o.deleted='' AND ",cond.get,
      " AND p.id_akce IN (SELECT id_duakce FROM akce WHERE spec=0 AND access&",
      my_access.get," AND ",akce_ano.get,")",chr(10),
      cconc(or(ne_akce.get,L_ne.get),conc(chr(10),
        "AND o.id_osoba NOT IN (SELECT DISTINCT o.id_osoba",chr(10),
        from.get,chr(10),
        "WHERE p.id_akce IN (SELECT id_duakce FROM akce WHERE spec=0 AND ",akce_ne.get,")",chr(10),
        ")",chr(10))),
      "GROUP BY o.id_osoba ",pro_vek.having_vek(pro_ucast.code_ucasti("HAVING")),chr(10),
      "ORDER BY prijmeni",chr(10)
    ));
    [ to_show; tsql.set(ask('mail2_lst_try',gsql.get,1)) ];
  }
  proc save_sql(to_reload) { #==> .. save_sql
    ucel.get;
    { form.same; not(sql_dirty.get)
    | parms.set(make_json); parms.change; make_sql(0); gsql.change;
      id_mailist.get; form.key(id_mailist.get);
      //form.save;
      ask('query',conc("UPDATE mailist SET ",
        "parms='",parms.get,"',",       "sexpr=",'"',gsql.get,'",',
        "ucel='",ucel.get,"',",         "blokovano=",blokovano.get,',',
        "komu='",cconc(pro_pary.get,'r','o'),"'",
        ' WHERE id_mailist=',id_mailist.get));
      [ to_reload; m_reload | form.plain; sql_dirty.set(0) ];
      warning("QUERY SAVED")
    | not(id_mailist.get);
      or(not(form.same),sql_dirty.get);
      access.set(my_access.get); access.change;
      id_mailist.set(form.insert);
      mailist_load;
      vy.komu_G.key(id_mailist.get);
      m_reload;
      warning("QUERY CREATED")
    | warning("QUERY SAVE ERROR id_mailist=",id_mailist.get,", sql_dirty=",sql_dirty.get)
    };
  | warning('název je povinný');
  }
  proc run_sql() { tsql.set(ask('mail2_lst_try',gsql.get)) }
  proc run_sql1() { tsql.set(conc(ask('mail2_lst_try',gsql.get,1),'<hr>',ask('mail2_lst_try',gsql.get))) }
  label tsql [5,t_pro+176,750,] { tag:'def', style:"background-color:#e6e6e6" }
  button [742,t_pro+153,,] { tag:'def', title:'!' proc onclick() { make_sql(0); run_sql1 }}
  # -------------------------------------==> . procedury
  proc dirty() { sql_dirty.set(1); tsql.set('') }
  var code_cas:text
  var json_cas:text
  proc mailist_load() {
    vy.komu_G.selects(ask('mail2_mailist',my_access.get));
  }
  proc preload() { #==> .. preload
    ano_akces.browse_load("druh='ms_akce_typ' AND zkratka NOT LIKE '-%' ");
    ne_akces.browse_load("druh='ms_akce_typ' AND zkratka NOT LIKE '-%' ");
    fces.browse_load("druh='ms_akce_funkce' ");
    reinit;
    akce_show;
    init_mailist;
  }
  proc init_mailist() {
    // zobraz mailist podle access
    mailist_load;
    vy.komu_G.key(
      function('select',"for (var key in select.Items) return key; return 0;",vy.komu_G));
    vy.komu_G.change;
  }
  proc reinit() { #==> .. reinit
    form.init(1);
    # výběr ano-akcí
    L_ano.init;
    ano_akce.init;
    ano_akces.selected('clear');
    ano_akces.display(0);
    ctrl_akce_ano.browse_init;
    # výběr ne-akcí
    use_ne_akce.set(0); use_ne_akce.change;
    ctrl_akce_ne.browse_init;
    # výběr oslovených
    pro_jak.selects("právě:1,aspoň:2,nejvýše:3");
    pro_mrop_s.selects("a později:1,a dříve:2,právě:3,ještě ne:4");
    pro_fce.init; fces.selected('clear'); fces.display(0);
    pro_ucast.init; form.display(0,'ucast'); pro_kolik.init(1); pro_jak.key(1);
    pro_muze.init(1); pro_zeny.init(1); pro_pary.init(1);
    pro_mrop.init; form.display(0,'mrop');
    pro_vek.init; form.display(0,'vek');
    # testy
    tsql.set('');
    sql_dirty.set(0);
  }
  // nastaví kontext podle komu_G
  proc m_reload() { #==> .. m_reload
    reinit;
    id_mailist.set(vy.komu_G.key);
    g.load(id_mailist.get);
    [ spec.get; warning("speciální předdefinovaný mail-list nelze měnit")
    | read_json(parms.get) ];
    # zobrazení akcí
    akce_show;
    using.set(ask('mail2_lst_using',id_mailist.get));
  }
  var gen_cas_del:text
  proc gen_cas(L) { #==> .. gen_cas
    json_cas.set('[');
    gen_cas_del.set('');
    code_cas.set('');
    each(L,gen_cas_fce);
    json_cas.set(conc(json_cas.get,']'));
  }
  var val:text
  proc gen_cas_fce(x,i) { var sval:text, has_val:number
    has_val.set(0);
    json_cas.set(conc(json_cas.get,gen_cas_del.get,'{"akey":',x.part('kdy').key));
    gen_cas_del.set(',');
    switch(x.part('kdy').key,
    // neomezovat
    1, { stop },
    // plánovaná akce
    2, { code_cas.set(conc(code_cas.get," AND datum_od>CURDATE()")) },
    // letos
    3, { code_cas.set(conc(code_cas.get," AND YEAR(datum_od)=YEAR(CURDATE())")) },
    // loni
    4, { code_cas.set(conc(code_cas.get," AND YEAR(datum_od)=YEAR(CURDATE())-1")) },
    // dříve než
    5, { val.set(x.part('rok').get); has_val.set(1);
         code_cas.set(conc(code_cas.get," AND YEAR(datum_od)<=YEAR(CURDATE())-",val.get)) },
    // později než
    6, { val.set(x.part('rok').get); has_val.set(1);
         code_cas.set(conc(code_cas.get," AND YEAR(datum_od)>=YEAR(CURDATE())-",val.get)) },
    // místo
    11,{ val.set(x.part('vzor').get); has_val.set(1);
         sval.set(replace(val.get,'\*','%','\?','_'));
         code_cas.set(conc(code_cas.get," AND misto LIKE '",sval.get,"%'")) },
    // název
    12,{ val.set(x.part('vzor').get); has_val.set(1);
         sval.set(replace(val.get,'\*','%','\?','_'));
         code_cas.set(conc(code_cas.get," AND nazev LIKE '",sval.get,"%'")) }
    );
    [ has_val; json_cas.set(conc(json_cas.get,',"val":"',val.get,'"')) ];
    json_cas.set(conc(json_cas.get,'}'))
  }
  # vrátí code=SQL kód a nastaví json_akce pro úschovu v make_json
  var json_akce: text
  proc code_akce_do(L,typ_akce,akces,all,org) { #==> .. code_akce_do
    var cond: text
    var keys: text
    var values: text
    gen_cas(L);
    cond.set(conc("a.access&",org," AND spec=0",code_cas.get));
    json_akce.set(conc('"typy":"',typ_akce,'"'));
    [ typ_akce;
      keys.set(akces.selected('get'));
      keys;
      values.set(ask('select',"GROUP_CONCAT(data)",'_cis',conc("id_cis IN (",keys,")")));
      json_akce.set(conc(json_akce.get,',"keys":"',values,'"'));
      cond.set(conc(cond.get,' AND ',conc("druh IN (",values,")")))
    ];
    json_akce.set(conc("{",json_akce.get,',"cas":',json_cas.get,'}'));
    [ eq(all,0); eq(cond.get,"spec=0"); cond.set("0") ];
#     echo("cond=",cond);
    return(cond);
  }
  # -------------------------------------==> . kontrolní zobrazení akcí
  const t_ctrl = 270
  # ------------ ano akce
  browse ctrl_akce_ano [10,t_ctrl+20,,] { tag:'def', rows:10
    view a: table akce
    show org {data:a.access}
    show [,,80,] {title:'typ akce',data:a.druh, map_pipe:ms_akce_typ.zkratka, format:'ts'
      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
    show [,,123,] {title:'název',  data:a.nazev, format:'ts'}
    show [,,60,] {title:'místo',   data:a.misto, format:'ts'}
    show [,,65,]  {title:'od',     data:a.datum_od, format:'rs-'}
    proc onstart () { javascript("if ( window.jQuery ) this.DOM_Block.css({zIndex:0}); else this.DOM_Block.setStyles({zIndex:0})") }
  }
  # ------------ ne akce
  browse ctrl_akce_ne [l_ne_akce+10,t_ctrl+20,,] { tag:'def', rows:10, format:'n'
    view a: table akce
    show org {data:a.access}
    show [,,80,] {title:'typ akce',data:a.druh, map_pipe:ms_akce_typ.zkratka, format:'ts'
      css_cell:'org,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
    show [,,123,] {title:'název',  data:a.nazev, format:'ts'}
    show [,,60,] {title:'místo',   data:a.misto, format:'ts'}
    show [,,65,]  {title:'od',     data:a.datum_od, format:'rs-'}
    proc onstart () { javascript("if ( window.jQuery ) this.DOM_Block.css({zIndex:0}); else this.DOM_Block.setStyles({zIndex:0})") }
  }
}
# -------------------------------------------------------------------------------------==> SQL _esql
# správa SQL dotazů
form _esql {
  var new_sql: object
  view c: table _cis
  field id_cis { data:c.id_cis }
  field dat { data:c.data }
  field druh { data:c.druh, value:'db_maily_sql' }
  field zkratka  [0,40,273,]  { data:c.zkratka, value:'' }
  edit note  [0,70,750,50]    { data:c.popis }
  edit query [0,130,750,200]  { data:c.hodnota }
  select [281,40,100,17] { type:'map', data:c.barva, options:map_db_maily_tab.zkratka,
    help:'mail pro ...' }
  label anwer [0,340,750,200]
  # příkazy
  label  [400,5,205,30] { tag:'def', css:'ae_parm' }
  button qry_save [408,9,,] { tag:'def',title:'Uložit',  help:'Uložit filtr skupiny', proc onclick() {
    form.same
  | form.key; form.save;
    [ zkratka.changed; vy.komu_Q.selects(dat.get) ];
    form.load
  | form.insert; form.load(id_cis.get); vy.komu_Q.selects(dat.get) // obnov výběrové hodnoty
  } }
  button [456,9,,] { tag:'def', title:'Zpět',  help:'Neuložit změny', proc onclick() { form.load } }
  button [504,9,,] { tag:'def', title:'Nový',  help:'Nový filtr skupiny', proc onclick() {
    form.init; vy.komu_Q.init;
    new_sql.set(ask('mail2_sql_new'));
    dat.set(new_sql.get('data')); dat.change;
    id_cis.set(new_sql.get('id')); id_cis.change; zkratka.init(2); druh.init(2);
    query.set(new_sql.get('qry'))
  } }
  button [546,9,,] { tag:'def', title:'Smazat', help:'smazat SQL definici skupiny', proc onclick() {
    id_cis.get; confirm("opravdu smazat dotaz pojmenovaný '",zkratka.get,"'?");
    _cis.delete_record(conc("id_cis=",id_cis.get," AND druh='db_maily_sql' AND data=",vy.komu_Q.key));
    form.init; vy.komu_Q.init; vy.komu_Q.selects // obnov výběrové hodnoty
  }}
  check [408,39,197,]    { title:"dotaz je zablokovaný", data:c.ikona, value:'0' }
  # test
  label  [620,5,131,55] { css:'ae_parm' }
  button [627,9,,] {title:'Test',  help:'Uložit změny a otestovat dotaz', proc onclick() {
    { has_skill('m'); qry_save.onclick | form.same | alert('pro změnu SQL dotazu nemáš oprávnění') };
    anwer.set(ask('mail2_sql_try',query.get,vsechno.get))
  } }
  check vsechno [670,9,80,15] {title:'zobraz vše', format:'t'}
  button [627,34,,] {title:'Možné parametry',  help:'Ukázat seznam možných parametrů', proc onclick() {
    alert(ask('mail2_sql_subst'));
  } }
  proc reload() {
    var akey:number
    vy.komu_Q.key;
    akey.set(ask('select','id_cis','_cis',conc("druh='db_maily_sql' AND data=",vy.komu_Q.key)));
    akey;
    form.load(akey)
  | form.init
  }
}
# ---------------------------------------------------------------------------------==> DOPISY _etext
# správa mailů
form _etext  {
  var adopis: number
  # obslužné procedury stavu tlačítek
  proc form_init() {
    texty.browse_init; form.init; drop.set(''); form_state('n','u|z|s') }
  proc form_state(on,off) {
    form.enable(1,on); form.enable(0,off); }
  proc onchanged () {
    or(uloz.enable,oprav.enable); form_state('u|z','n|s')
  }
  # --------------------------- seznam mailů
  view etd: table dopis
  view etm: table mail {join_type:'LEFT' join:'USING (id_dopis)'}
  view eta: table akce {join_type:'LEFT' join:'USING (id_duakce)'}
  view etc: table _cis {join_type:'LEFT' join:"ON etd.cis_skupina=etc.data AND etc.druh='db_maily_sql'"}
  view etl: table mailist {join_type:'LEFT' join:"ON etl.id_mailist=etd.id_mailist"}
  browse texty [0,34,150,200] { rows:10, qry_rows:1, group_by:'id_dopis', css_rows:'stav1,3:zluty,4:zeleny,5:cerveny'
    show id_dopis { data:etd.id_dopis }
    show x { data:etm.id_davka },
    show access { data:etd.access }
    show datum [,,60,] { title:'datum', data:etd.datum, format:'rs-'
      css_cell:'access,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
    show komu_Q [,,0,] { title:'skupině', data:etc.zkratka, format:'s' },
    show komu_G [,,0,] { title:'mail-list', data:etl.ucel, format:'s' },
    show predmet [,,160,] { title:'předmět', data:etd.nazev, format:'sq', css_cell:'stav2,3:zluty,4:zeleny,5:cerveny' },
    show stav1 { expr:'min(etm.stav)', format:'rsq' }
    show stav2 { expr:'max(etm.stav)', format:'rsq' }
    show pocet [,,30,] { title:'#', data:etd.pocet, format:'rs' }
    proc onrowclick () { var y:object
      dopis_id.set(id_dopis.get);
      form.load(dopis_id.get);
      drop_init;
      y.set(ask('mail2_mai_text',dopis_id.get));
      obsah.set(y.html);
      adopis.set(id_dopis.get);
      form_state('n|s','u|z');
      generovat.set(conc(cconc(pocet.get,"Přegenerovat","Vygenerovat")," rozesílací seznam"))
    }
  }
  # nezobrazené údaje mailu
  field druh    { data:dopis.druh }
  field access   { data:dopis.access }
  field id_duakce { data:dopis.id_duakce }
  field id_mailist { data:dopis.id_mailist }
  field cis_skupina { data:dopis.cis_skupina }
  field komu  { data:dopis.komu }       // 0:všem, 1:VPS..., 2:dlužníci
  # společné údaje mailu
  const L=390
  field id_davka { data:dopis.id_davka }
  label [L+0,35,365,150] { css:'ae_work' }
  field datum [L+10,53,80,17] { data:dopis.datum, help:'datum|datum emailu',
    skill:'yam|yams;fam|fams;cam|cams', title:'^datum odeslání' }
  field id_dopis [L+307,53,43,17] { data:dopis.id_dopis, format:'rd', title:'^ID dopisu' }
  field predmet [L+10,92,340,17] { data:dopis.nazev, help:'předmět|předmět emailu',
    skill:'yam|yams;fam|fams;cam|cams', title:'^předmět mailu' }
  // ==> připojení příloh
  field attach {data:dopis.prilohy}                     // datové pole se seznamem příloh
  label [L+10,115,,] {title:'sem lze přetáhnout přílohy, zrušit a stáhnout pak kontextovým menu'}
  label drop [L+10,130,340,45] { type:'drop'
    proc onload(f) {                                    // po dokončení přenosu
      ask('mail2_mai_attach',form.key,f);                 // přidání souboru k dávce
    }
    proc onmenu(op,name,ref) {  // op=remove|remove-all
      { eq(op,'remove');     ask('mail2_mai_detach',form.key,name) // odebrání přílohy
      | eq(op,'remove-all'); ask('mail2_mai_detach_all',form.key)  // odebrání všech příloh
      | warning('zatím neimplementovaná operace')
      };
      attach.set(ask('select','prilohy','dopis',conc("id_dopis=",form.key)));
      drop_init
    }
  }
  proc drop_init() {                                    // inicializace - je třeba na začátku
    drop.init('','S:');                                 // naplnit pole drag&drop a definovat dir
    drop.set(attach.get);
  }
  # příkazy 1
  label  [L+0,195,200,78] { css:'ae_parm' }
  label [L+8,247,184,] { title:"přegenerováním jsou také přepočteny všechny {proměnné}" }
  button uloz [L+8,201,,] { tag:'u', type:'submit', title:'Uložit',
    help:'uložit opravené hodnoty', skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      form.same
    | // oprava
      form.key; form.save; form.load; texty.browse_seek;
      form_state('n|s','u|z'); texty.browse_focus;
    | // přidání
      access.set(my_access.get); access.change;
      form.insert; form.load;
      texty.raise('onrowclick',texty.browse_seek(conc(form.id_key,'=',form.key)));
      form_state('n|s','u|z');
    }
  }
  button [L+64,201,,] { tag:'z', title:'Zpět', help:'neukládat hodnoty', skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      adopis.get; form.load(adopis.get); form_state('n|s','u|z'); texty.browse_focus
    | form.init; drop.set(''); form_state('n','u|z|s')
    }
  }
  button oprav [L+113,201,,] { tag:'s', title:'Opravit text', help:'opravit text mailu',
    skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      gt(texty.stav2.get,2); not(confirm("Tento dopis již byl rozesílán, opravdu chceš opravit jeho text?"))
    | E_dopis.modal(10,10); texty.raise('onrowclick',dopis_id.get)
    }
  }
  # příkazy 2
  label  [L+246,193,120,32] { css:'ae_parm' }
  button novy [L+254,199,,] { tag:'n', title:'Nový', help:'vytvořit nový e-mail',
    skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      { eq(my_access.get,1,2,4)
      | confirm("Mail bude posílán účastníkům akcí Setkání i Familia. Bude tomu odpovídat text?")
      };
      form.init; drop.set(''); form_state('u|z','n|s'); drop_init;
      texty.blur(1); adopis.set(0);
      datum.set(now); datum.change; id_davka.set(1); id_davka.change; druh.set('@'); druh.change;
      cis_skupina.init; id_mailist.init; id_duakce.init; komu.init;
      switch(dopis_var.get,
      'Q', { cis_skupina.set(vy.komu_Q.key); },
      'G', { id_mailist.set(vy.komu_G.key); }
      );
      id_duakce.change; komu.change; cis_skupina.change; id_mailist.change;
    }
  }
  button smaz [L+303,199,,] { tag:'s', title:'Smazat', help:'smazat mail a jeho rozesílání',
    skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      confirm(conc("Opravdu smazat mail '",texty.predmet.get,"' a jeho rozesílací seznam?"));
      ask('mail2_mai_smaz',texty.id_dopis.get);
      reload
    }
  }
  var et_prazdy: number
  button generovat [L+8,226,,] { tag:'s', title:'Vygenerovat rozesílací seznam',
    help:'připravit rozesílání', skill:'yam|yams;fam|fams;cam|cams'
    proc onclick () {
      var conf: object
      var blokovano: number
      var pocet: number
      var err: text
      eq(dopis_var.get,'Q');
      # rozesílání podle SQL nebo podle nastavené akce
      { blokovano.set(ask('select','ikona','_cis',conc("druh='db_maily_sql' AND data=",vy.komu_Q.key)));
        blokovano.get; alert("použití skupiny <b>",vy.komu_Q.get,
          "</b> je zablokováno - asi probíhá úprava dotazu",
          ", kontaktuj administrátora aplikace ...");
      | prazdny; et_prazdy.get;
        E_info.set(ask('mail2_mai_pocet',dopis_id.get,dopis_var.get));
        confirm(E_info.get('_html'));
        E_info.get('_count');
        err.set(ask('mail2_mai_posli',dopis_id.get,E_info.get));
        [ err; alert(err) ];
        texty.browse_seek; texty.browse_focus;
      }
    | eq(dopis_var.get,'G');
      # rozesílání podle mail-listu
      { blokovano.set(ask('select','blokovano','mailist',conc("id_mailist=",vy.komu_G.key)));
        blokovano.get; alert("použití tohoto mail-listu je zablokováno - asi probíhá úprava dotazu");
      | conf.set(ask('mail2_lst_confirm_spec',vy.komu_G.key,dopis_id.get));
        conf.specialni;
        [ { not(conf.prepsat) | confirm(conf.prepsat) };
          confirm(conf.pocet);
          E_info.set(ask('mail2_lst_posli_spec',dopis_id.get));
          texty.browse_seek; texty.browse_focus;
          alert(E_info.get('msg'))
        ]
      | prazdny; et_prazdy.get;
        E_info.set(ask('mail2_mai_pocet',dopis_id.get,dopis_var.get));
        confirm(E_info.get('_html'));
        E_info.get('_count');
        err.set(ask('mail2_mai_posli',dopis_id.get,E_info.get));
        [ err; alert(err) ];
        texty.browse_seek; texty.browse_focus;
      }
    }
  }
  proc prazdny() {
    E_info.set(ask('mail2_mai_prazdny',texty.id_dopis.get));
    et_prazdy.set(E_info.get('_prazdny')); et_prazdy.get
  | et_prazdy.set(confirm(E_info.get('_html')))
  }
  # -------------------------- načtení celé karty přípravy mailů
  proc reload() {
    form.init;
    obsah.set(''); texty.browse_init;
    switch(dopis_var.get,
    // SQL
    'Q',{ //texty.komu_U.width(0);
          texty.komu_Q.width(100); texty.komu_G.width(0);
          vy.komu_Q.key;
          form_state('n','s|u|z');
          [ texty.browse_load(conc("etd.id_duakce=0 AND etd.cis_skupina=",vy.komu_Q.key)) ]
        | texty.browse_init;
          form_state('','n|s|u|z');
    },
    // mail-listy
    'G',{ //texty.komu_U.width(0);
          texty.komu_Q.width(0); texty.komu_G.width(100);
          vy.komu_G.key;
          form_state('n','s|u|z');
          [ vy.komu_G.key; texty.browse_load(conc("etd.id_mailist=",vy.komu_G.key)) ]
        | texty.browse_init;
          form_state('','n|s|u|z');
    });
    reload2
  }
  proc reload2() {
    texty.browse_count; drop.set(''); drop_init;
    { dopis_id.get; texty.raise('onrowclick',dopis_id.get) | texty.raise('onrowclick') }
  }
  # text mailu
  label obsah [0,278,645,200] { title:'zobrazení předmětu a textu mailu' }
}
# =========================================================================================> E_dopis
panel E_dopis [0,0,645,520] { title:' Úprava textu mailu', type:'popup', css:'dialog', skill:'yams;fams;cams'
  use mail: form _edopis [0,0,,],
  proc onfocus () {
    dopis_id.get; mail.load(dopis_id.get);
  | error('nedefinovaný dopis')
  }
  # ---------------------------------------------------------------------------- _edopis
  # oprava textu, data, předmětu a adresátů mailu v popup menu
  form _edopis {
    label [0,12,60,20] { title:'Předmět:' }
    field nazev [50,10,480,20] { data:dopis.nazev },
    button  [540,9,,] { title:'Uložit', help:'ukončit editor a uložit změny'
      proc onclick() { form.save; panel.hide(1); }
    }
    button  [600,9,,] { title:'Zpět', help:'ukončit editor bez uložení změn'
      proc onclick() { panel.hide(0); }
    }
    edit [0,40,645,480] {type:'html', data:dopis.obsah, par:°{toolbar:'EzerMail'} },
  }
}
# ----------------------------------------------------------------------------------------==> _esady
# rozesílání připraveného mailu - zakládání, aktualizace a rušení - obsluha front s maily
form _esady  {
  # ------------------------ připravené dopisy
  view etd: table dopis
  view etm: table mail  {join_type:'LEFT' join:'USING (id_dopis)'}
  view eta: table akce  {join_type:'LEFT' join:'USING (id_duakce)'}
  view etc: table _cis  {join_type:'LEFT' join:"ON etd.cis_skupina=etc.data AND etc.druh='db_maily_sql'"}
  view etl: table mailist {join_type:'LEFT' join:"ON etl.id_mailist=etd.id_mailist"}
  view eto: table osoba {join_type:'LEFT' join:'ON id_clen=eto.id_osoba'}
  view etr: table rodina {join_type:'LEFT' join:'ON id_clen=etr.id_rodina'}
  browse texty [0,0,150,200] { rows:9, qry_rows:1, group_by:'id_dopis', css_rows:'stav1,3:zluty,4:zeleny,5:cerveny'
    show id_dopis  { data:etd.id_dopis },
    show id_duakce { data:etd.id_duakce }
    show cis_skupina { data:etd.cis_skupina }
    show access { data:etd.access }
    show datum [,,60,] { title:'datum', data:etd.datum, format:'rs-'
      css_cell:'access,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
    //show komu_U [,,100,] { title:'účastníkům' , data:eta.nazev, format:'s' },
    show komu_Q [,,0,] { title:'skupině' , data:etc.zkratka, format:'s' },
    show komu_Qn       { data:etc.barva },
    show komu_G [,,0,] { title:'mail-list' , data:etl.ucel, format:'s' },
    show komu { data:etl.komu } // o-osoba, r-rodina
    show specialni { data:etl.specialni } // 1 => potvrzení
    show predmet [,,160,] { title:'předmět', data:etd.nazev, format:'sq', css_cell:'stav2,3:zluty,4:zeleny,5:cerveny' },
    show stav1 [,,0,] { expr:'min(etm.stav)', format:'rsq' },
    show stav2 [,,0,] { expr:'max(etm.stav)', format:'rsq' },
    show pocet [,,30,] { title:'#', data:etd.pocet, format:'rs' },
    proc onrowclick () { var old_dopis:number
      old_dopis.set(dopis_id.get);
      eq(this.browse_count,0);
      dopis_id.set(0);
    | dopis_id.set(id_dopis.get);
      regenerate.display(specialni.get);
      maily.browse_load(conc("etmm.id_dopis=",dopis_id.get));
      [ eq(dopis_id.get,old_dopis)
      | zkus.set(sys('user','options','email'));
        from.set(sys('user','options','email'));
        name.set(sys('user','options','vyrizuje'));
        [ sys('user','options','smtp'); smtp.key(sys('user','options','smtp'))
        | smtp.key(1); smtp.onchanged ];
        davka.set(20); davka.change
      ]
    }
  }
  // výběr SMTP serveru
  select smtp [105,212,202,17] { type:'map', options:map_smtp_srv.zkratka, title:'odesílat z adresy:'
    help:'smtp|použitý odesílací server', format:'t'
    proc onchanged() { var ok:text
      ask('sys_user_change',sys('user','id_user'),'opt','smtp',smtp.key);
    }
  }
  // odpovědi na adresu, použít patičku
  field from [105,231,200,17] { title:'adresa pro odpovědi:'
    skill:'yam|yams;fam|fams;cam|cams', help:'email z osobního nastavení', format:'t'  }
  field name [105,250,200,17] { title:'... jméno:'
    skill:'yam|yams;fam|fams;cam|cams', help:"'vyřizuje' z osobního nastavení", format:'t'  }
  check foo [312,230,59,] { title:'patička', value:'0', format:'t', 
    proc onchange() {
      pata.display(this.get); this.get; pata.set(sys('user','options','email_foot'));
    } 
  }
  // test
  label [0,274,380,2] { style:'border-top:1px solid green' }
  field zkus [105,280,200,17] { title:'poslat test na adresu:' 
    skill:'yam|yams;fam|fams;cam|cams', help:'email z osobního nastavení', format:'t' }
  button test [315,280,,] { title:'[fa-send-o] test', skill:'yam|yams;fam|fams;cam|cams',
    help:'pro kontrolu - posílá se 1 mail na testovací adresu'
    proc onclick () { var foot:text
      msg.set(''); foot.set('');
      confirm('Poslat zkušební mail na ',zkus.get,' ?');
      [ foo.get; foot.set(sys('user','options','email_foot')) ]; 
      E_info.set(ask('mail2_mai_send',
          dopis_id.get,0,from.get,name.get,zkus.get,maily.id_mail.get,foot.get));
      msg.set(E_info.get('_html'));
    }
  }
  // postupné odesílání
  label  [0,306,364,31] { css:'ae_parm' }
  field davka [128,313,30,17] { title:'postupně odesílat po:'
    format:'rt', value:'10', skill:'yam|yams;fam|fams;cam|cams',
    proc onchange () {
      send.set(replace_fa(conc('[fa-send-o] až ',davka.get,'  ještě neposlaných')));
    }
  }
  button send [173,313,,] { title:'xx ještě neposlaných', skill:'yam|yams;fam|fams;cam|cams',
    help:'pošle další dávku - počet lze měnit políčkem vlevo'
    proc onclick () { var foot:text
      msg.set(''); foot.set('');
      confirm(conc('Opravdu poslat dalších ',davka.get,' mailů "z adresy" ',from.get,'?'));
      [ foo.get; foot.set(sys('user','options','email_foot')) ]; 
      E_info.set(ask('mail2_mai_send',
          dopis_id.get,davka.get,from.get,name.get,0,0,foot.get));
      msg.set(E_info.get('_html'));
      maily.browse_seek; texty.browse_seek;
    }
  }
  # ------------------- přegenerování jednoho potvrzení
  button regenerate [238,375,,] { title:'přegenerovat potvrzení', style:"z-index:2"
    proc onclick() { var ret:object
      ret.set(ask('mail2_lst_regen_spec',maily.id_dopis.get,maily.id_mail.get,maily.id_clen.get));
      alert(ret.msg);
      maily.browse_row;
      maily.onrowclick;
  }}
  # ------------------- informace
  label msg [0,335,377,67]
  label info [0,403,367,90]   { style:"overflow:auto;border:1px solid grey;padding:5px" }
  label obsah [0,504,716,246] { style:"overflow:auto;border:1px solid grey;padding:5px" }
  label pata [0,761,716,50] { style:"overflow:auto;border:1px solid grey;padding:5px" }
  # ------------------- seznam adres
  view etmm: table mail
  view etmo: table osoba  {join_type:'LEFT' join:'ON id_clen=etmo.id_osoba'}
  view etmr: table rodina {join_type:'LEFT' join:'ON id_clen=etmr.id_rodina'}
  view etms: table ds_osoba_copy {join_type:'LEFT' join:'ON id_clen=etms.id_osoba'}
  view etmd: table dopis  {join_type:'LEFT' join:'USING (id_dopis)'}
  view etmc: table _cis   {join_type:'LEFT' join:"ON etmd.cis_skupina=etmc.data AND etmc.druh='db_maily_sql'"}
  browse maily [390,0,120,200] { rows:24, qry_rows:1, css_rows:'stav,3:zluty,4:zeleny,5:cerveny'
    show id_mail          { data:etmm.id_mail }
    show                  { data:etmo.id_osoba }
    show                  { data:etmr.id_rodina }
    show                  { data:etms.id_osoba }
    show id_dopis         { data:etmd.id_dopis }
    show                  { data:etmc.id_cis }
    show stav    [,,20,]  { title:'s.', data:etmm.stav, format:'rsq' },
    show access           { data:etmo.access }
    show id_clen [,,50,]  { title:'člen', data:etmm.id_clen, format:'rsq'
      css_cell:'access,0:,1:ezer_ys,2:ezer_fa,3:ezer_db' }
    show prijmeni [,,50,] { title:'příjmení', expr:"'-'", format:'s+q' },  // nastavuje se dynamicky v reload
    show email   [,,180,] { title:'email', data:etmm.email, format:'tsq' },
    show msg     [,,50,]  { title:'chyba', data:etmm.msg, format:'tsq' }
    show body             { data:etmm.body }
    proc onsubmit() {
      ask('mail2_mai_stav',id_mail.get,cconc(eq(stav.get,5),3,5));
      this.browse_row;
    }
    proc onrowclick () {
      info.set(ask('mail2_mai_info',id_clen.get,email.get,dopis_id.get,dopis_var.get,id_mail.get));
      [ body.get; obsah.set(body.get)
      | obsah.set(ask('select','obsah','dopis',conc('id_dopis=',id_dopis.get))) ]
    }
  }
  # --------------------- načtení celé karty
  proc reload() {
    form.init; davka.set(20); davka.change; msg.set(''); info.set('');
    maily.prijmeni.set_attrib('expr',"etmo.prijmeni");
    maily.browse_init;
    texty.browse_init;
    switch(dopis_var.get,
    // SQL
    'Q',{ //texty.komu_U.width(0);
          texty.komu_Q.width(100); texty.komu_G.width(0);
          maily.prijmeni.set_attrib('expr',
            "IF(etmc.barva=4,etms.prijmeni,IF(etmc.barva=3,etmr.nazev,IF(etmc.barva=2,etmo.prijmeni,'?')))");
          vy.komu_Q.key;
          texty.browse_load(conc("etd.id_duakce=0 AND etd.cis_skupina=",vy.komu_Q.key));
          maily.prijmeni.set_attrib('title',texty.komu_Qn.get);
        | texty.browse_init
    },
    // mail-listy
    'G',{ //texty.komu_U.width(0);
          texty.komu_Q.width(0); texty.komu_G.width(100);
          vy.komu_G.key;
          texty.browse_load(conc("etd.id_mailist=",vy.komu_G.key));
          { eq(texty.komu.get,'o');
            maily.prijmeni.set_attrib('title',"příjmení");
            maily.prijmeni.set_attrib('expr',"etmo.prijmeni");
          | maily.prijmeni.set_attrib('title',"rodina");
            maily.prijmeni.set_attrib('expr',"etmr.nazev");
          };
        | texty.browse_init
    });
    reload2
  }
  proc reload2() {
    texty.browse_count;
    { dopis_id.get; texty.raise('onrowclick',dopis_id.get) | texty.raise('onrowclick') }
  }
}

map map_dm_komu:      table _cis  {where:"druh='am_komu'",      order:'poradi',  key_id:'data'}
map map_db_maily_sql: table _cis  {where:"druh='db_maily_sql'", order:'zkratka', key_id:'data'}
map map_db_maily_tab: table _cis  {where:"druh='db_maily_tab'", order:'zkratka', key_id:'data'}
map map_db_mailist: table mailist {where:"1",                   order:'ucel',    key_id:'id_mailist'}
