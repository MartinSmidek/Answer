#pragma library
# ------------------------------------------------------------------------------------------------ #
# Karty pro pokladní                                                                               #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2015 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #


var d_cond=0
var d_day=''

# ===========================================================================================> BANKA
panel fio {type:'right', title:"BANKA", _sys:'fio', skill:'a'
  var ucet: number
  use info: form _right [12,4,,]
  use ucty: form _ucty [12,40,,]
  menu m {type:'left', format:'f+', active:m.p.y
    menu p {title:'Pohyby na účtech', type:'group'
      item y {title:'[fa-futbol-o] Účet YMCA Setkání', par:{rok:'2024',ucet:1} }
      item d {title:'[fa-home] Účet Dům setkání',      par:{rok:'2024',ucet:2} }
      func onclick(i:ezer) { var f:object
        info.header(i); info.fill('',' '); clear();
        ucty.display(1); 
        ucet= i.par.ucet;
        ucty.fio.browse_load(ucty.filter());
      }
    }
    menu {title:'Testy', type:'group', active:no
      item {title:'[fa-question][fa-futbol-o] YS: JOIN akce - 2024',   
        par:{fce:'join-ys', od:'2024-01-01', do:'2024-12-31'} }
      item {title:'[fa-question][fa-home] DS: JOIN objednávky - 2024', 
        par:{fce:'join-ds', od:'2024-01-01', do:'2024-12-31'} }
      item {title:'[fa-question][fa-futbol-o] YS: JOIN akce - 2023',   
        par:{fce:'join-ys', od:'2023-01-01', do:'2023-12-31'} }
      item {title:'[fa-question][fa-home] DS: JOIN objednávky - 2023', 
        par:{fce:'join-ds', od:'2023-01-01', do:'2023-12-31'} }
      item {title:'[fa-download][fa-futbol-o] YS:LOAD platby',      
        par:{fce:'load-ys', od:'*', do:'*'} }
      item {title:'[fa-download][fa-home] DS: LOAD platby',         
        par:{fce:'load-ds', od:'*', do:'*'} }
//      item {title:'[fa-download] LOAD DS - 1.3 - 1.4.2024',  par:{fce:'load-ds', od:'2024-03-01', do:'2024-04-01'} }
//      item {title:'[fa-download] LOAD YS - 1.3 - 1.4.2024',  par:{fce:'load-ys', od:'2024-03-01', do:'2024-04-01'} }
      item {title:'[fa-times][fa-futbol-o] vymaž letošní přiřazení',
        par:{fce:'clear-ys', od:'2024-01-01', do:'2024-12-31', confirm:1} }
      item {title:'[fa-times][fa-home] vymaž letošní přiřazení',    
        par:{fce:'clear-ds', od:'2024-01-01', do:'2024-12-31', confirm:1} }
//      item {title:'[fa-times fa-red] vymaž letošní',    par:{fce:'delete', confirm:1} }
//      item {title:'[fa-download] YS:LOAD 2023-2024',    par:{fce:'load-ys', od:'2023-01-01', do:'2024-12-31'} }
//      item {title:'[fa-download] DS:LOAD 2023-2024',    par:{fce:'load-ds', od:'2023-01-01', do:'2024-12-31'} }
//      item {title:'[fa-question] YS:LOAD březen',       par:{fce:'load-ys', od:'2024-03-01', do:'2024-03-31'} }
//      item {title:'[fa-question] DS:LOAD březen',       par:{fce:'load-ds', od:'2024-03-01', do:'2024-03-31'} }
//      item {title:'[fa-download] YS:LOAD 2024',         par:{fce:'load-ys', od:'2024-01-01', do:'2024-12-31'} }
//      item {title:'[fa-download] DS:LOAD 2024',         par:{fce:'load-ds', od:'2024-01-01', do:'2024-12-31'} }
    }
    func onclick(i:ezer) { var f:object
      ucty.display(0); 
      info.header(i); clear();
      if (!i.par.confirm || i.par.confirm && confirm("Opravdu provést?")) {
        f= php.ds2_fio(i.par);
        info.fill('',f.html);
        if (f.err) alert(f.err);
      }
    }
  }
  form _ucty [,,640,*] {
    func refresh() {
      if (!fio.browse_seek(`id_platba=${fio.id_platba}`,filter())) {
        fio.browse_load(filter());
      }
    }
    func filter() { var _and: text
      _and= cconc(
        ucty.jen_letosni,' AND YEAR(datum)=YEAR(NOW())',
        ucty.jen_prijmy, ' AND castka>0',
        skryt_navrzene,  ' AND stav NOT IN (6,8,10)',
        skryt_potvrzene, ' AND stav NOT IN (7,9,11)');
      return `ucet=${ucet} ${_and}`;
    }
    label popis [,,393,19] { title:"
      <span class='azurovy'>&nbsp; asi platba za akci/pobyt &nbsp;</span>&nbsp;&nbsp;
      <span class='zeleny'>&nbsp; je to platba za akci/pobyt &nbsp;</span>&nbsp;&nbsp;
      <span class='zluty'>&nbsp; asi dar &nbsp;</span>&nbsp;&nbsp;
      <span class='oranzovy'>&nbsp; je to dar &nbsp;</span>"
    }
    check jen_letosni [507,0,83,] { title:' jen letošní', value:'1', style:'margin-top:-5px' format:'t'
      func onchange() { refresh() }
    }
    check jen_prijmy [591,0,83,] { title:' jen příjmy', value:'1', style:'margin-top:-5px' format:'t'
      func onchange() { refresh() }
    }
    check skryt_navrzene [678,0,100,] { title:' skrýt navržené', value:'0', style:'margin-top:-5px' format:'t'
      func onchange() { refresh() }
    }
    check skryt_potvrzene [778,0,100,] { title:' skrýt potvrzené', value:'0', style:'margin-top:-5px' format:'t'
      func onchange() { refresh() }
    }
    browse fio [,20,,] { rows:10, qry_rows:2
      css_rows:'stav,6:azurovy,7:zeleny,8:azurovy,9:zeleny,10:zluty,11:oranzovy'
      show id_platba { data:platba.id_platba }
      show stav [,,20,] { title:'stav', data:platba.stav, format:'sqr:e' }
      show datum [,,70,] { title:'datum', data:platba.datum, format:'s-q/r' }
      show castka [,,70,] { title:'částka', data:platba.castka, format:'sq/r' }
      show id_osoba [,,40,] { title:'osoba', data:platba.id_oso, format:'sq*r:e' }
      show id_pobyt [,,40,] { title:'pobyt', data:platba.id_pob, format:'sq*r:e' }
      show id_order [,,40,] { title:'objednávka', data:platba.id_ord, format:'sq*r:e' }
      show nazev [,,120,] { title:'název', data:platba.nazev, format:'sq*' }
      show protiucet [,,145,] { title:'protiúčet', data:platba.protiucet, format:'sq*r' }
      show vs [,,70,] { title:'vs', data:platba.vs, format:'sq*r:e' }
      show ss [,,40,] { title:'ss', data:platba.ss, format:'sq*r:e' }
      show zprava [,,200,] { title:'zpráva identifikace', format:'sq*t' 
        expr:"CONCAT(platba.zprava,' ',IF(platba.ident!=platba.nazev,platba.ident,''))"}
      func onrowclick() { var _akce:array, _osoba:text, _ido:text, _pobyt:text
        form.load(id_platba);
        platba_za= '';
        if (id_osoba) {
          _osoba= php.select("CONCAT(jmeno,' ',prijmeni)",'osoba',`id_osoba=${id_osoba}`);
          _ido= php.tisk2_ukaz_osobu(id_osoba);
          platba_za= `${_ido} ${_osoba}`;
        }
        if (id_pobyt) {
          _akce= php.select('nazev,id_akce','pobyt JOIN akce ON id_akce=id_duakce',`id_pobyt=${id_pobyt}`);
          _pobyt= php.tisk2_ukaz_pobyt_akce(id_pobyt,_akce[1]);
          platba_za= `${platba_za}, ${_pobyt} ${_akce[0]}`;
        }
      }
      func onsubmit() { var f:object
        clear();
        f= php.ds2_fio({fce:ucet==1 ? 'join-ys' : 'join-ds', od:datum, do:datum});
        warning(f.html);
        if (f.err) alert(f.err);
      }
    }
    field datum [10,280,70,] { title:'^datum', data:platba.datum, format:'r' }
    field castka [90,280,70,] { title:'^částka', data:platba.castka, format:'r' }
    field nazev [170,280,150,] { title:'^název účtu', data:platba.nazev, format:'' }
    field zprava [330,280,400,] { title:'^zpráva identifikace', 
      expr:"CONCAT(platba.zprava,' ',IF(platba.ident!=platba.nazev,platba.ident,''))"}
    field id_platba [10,315,120,] { title:'^transakce Fio banky', data:platba.id_platba, format:'r' }
    field protiucet [170,315,150,] { title:'^číslo účtu', data:platba.protiucet, format:'r' }
    label [332,302,400,] { title:'osoba, účast na akci' }
    label platba_za [330,318,561,] { style:'font-size:10pt;color:black' }
    // zobrazení aktuálních nastavení
    label [10,340,100,18] { title:'AKCE' }
    label [110,340,100,18] { style:'font-size:10pt;color:black' }
  }
}
table platba {
  number id_platba
  // 0 - ?, 1 - výdaj, 5 - příjem, 
  // 6 - asi platba za id_akce, 7 - je to platba za id_akce, 
  // 8 - asi platba za id_pobyt, 9 - je to platba za id_pobyt, 
  // 10 - asi dar, 11 - je to dar
  number stav // #platba_stav: 
  number id_oso
  number id_pob
  number id_ord
  number ucet
  number ucel
  date   datum { sql_pipe:'sql_date1' }
  number castka
  number mena
  text   protiucet
  text   nazev
  text   ks
  text   vs
  text   ss
  text   ss2
  text   ident
  text   zprava
  text   provedl
  text   upresneni
  text   komentar
}
# ===========================================================================================> DENÍK
panel den {type:'plain', title:"POKLADNA", _sys:'den'

  use dd: form _d_denik [11,0,,]
  use dv: form _d_vyber [670,10,,]
  use dc: form _d_cmd [20,500,,]

  proc onfirstfocus () {
    dd.seznam.browse_focus; dv.vyber_init;
  }
  proc reload(cond) {
    dd.seznam.browse_load(cond,"datum DESC, ident DESC"); dd.seznam.raise('onrowclick')
  }
  proc d_browse_seek (k) {
    dd.seznam.raise('onrowclick',dd.seznam.browse_seek(conc("id_pokl=",k)))
  }
  # -------------------------------------------------------------------------------------==> . denik
  form _d_denik [,,539,510] {
    view v: table pdenik,
    view p: table pokladna {join:'ON id_pokladna=pdenik.org'},
    browse seznam [3,10,200,200] { rows:24, qry_rows:2, optimize:°{qry:'noseek'},
        //css_rows:'vytisten,0:kas_1'
      show ident [,,80,] { title:'ident', data:pdenik.ident, format:'sq*' },
      show cislo [,,30,] { title:'číslo', data:pdenik.cislo, format:'rsq/' },
      show datum [,,70,] { title:'datum', data:pdenik.datum, format:'rsq/'  },
      show org_id [,,0,] { title:'Org', data:pdenik.org },
      show org [,,10,] { data:p.abbr, format:'r' },
      show typ [,,10,] { data:pdenik.typ, format:'r', sql_pipe:'pipe_pdenik_typ' },
      show priloh [,,0,] { data:pdenik.priloh, format:'rsq/' },
      show castka [,,65,] { title:'částka', data:pdenik.castka, format:'rsq/'  },
      show komu [,,165,] { title:'komu', data:pdenik.komu, format:'sq*'  },
      show ucel [,,140,] { title:'účel', data:pdenik.ucel, format:'sq*'  },
      show kat [,,40,] { title:'kateg.', data:pdenik.kat, format:'sq*'  },
      show vytisten [,,0,] { data:pdenik.vytisten },
      show id [,,0,] { data:pdenik.id_pokl },
      menu { type:'context'
        item { title:'export vybraných řádků', proc onclick() {
          seznam.browse_export(°{dir:'ys2',file:'p_denik_cast',type:'xlsx'});
          alert("soubor lze stáhnout <a href='docs/ys2/p_denik_cast.xlsx'>zde</a>"); }}
      }
      proc onrowclick () {
        d_day.set(datum.get)
      }
      proc onsubmit () {
        has_skill('yp+'); d_oprava.d_load(this,id.get);
        d_oprava.modal(100,100); dd.seznam.browse_focus;
      }
    },
  #   label [8,8,116,17] { title:'<b>Pokladní deník</b>' },
  }
  # ---------------------------------------------------------------------------------------==> . cmd
  form _d_cmd [,,300,20] {
    button oprav [18,-1,,] { type:'submit', title:'Opravit', skill:'yp+|yp+'
      proc onclick () {
        d_oprava.d_load(dd.seznam,dd.seznam.id.get); d_oprava.modal(100,100)
    }}
    button kopie [123,0,,] { title:'Zkopírovat', skill:'yp+|yp+'
      proc onclick () {
        d_novy.d_copy(dd.seznam.id.get); d_novy.modal(100,100)
    }}
    button novy [214,0,,] { title:'Nový', skill:'yp+|yp+'
      proc onclick () {
        d_novy.d_init(dd.seznam,5,dv.r_typ.get); d_novy.modal(100,100)
    }}
    button smazat [272,0,,] { title:'Smazat', skill:'yp+|yp+'
      proc onclick () {
        confirm(conc('Opravdu smazat doklad ',dd.seznam.org.get,dd.seznam.typ.get,dd.seznam.cislo.get,'?'));
        pdenik.delete_record(conc('id_pokl=',dd.seznam.id.get));
        dd.seznam.raise('onrowclick',dd.seznam.browse_seek(1))
    }}
  }
  # -------------------------------------------------------------------------------------==> . výběr
  form _d_vyber [,,320,214] { css:'ae_parm'

    proc vyber_init() { r_typ.set(1); r_goa.set(1); letos.onclick; }

    var ro_pokl: text
    var rc_dat: text
    var rc_org: text
    var rc_typ: text
    var rc_sta: text
    var rc_goa: text

    button vse   [222,10,,] { title:'celá pokladna'
      proc onclick() {
        rd_od.set("1.1.2000"); rd_do.set("31.12.2020"); zmena
    }}
    button letos [7,10,,] { title:'letošní pokladna'
      proc onclick() { var rok:number
        rok.set(fdate('Y'));
        rd_od.set(conc("1.1.",rok)); rd_do.set(conc("31.12.",rok)); zmena
    }}
    button vloni [115,10,,] { title:'loňská pokladna'
      proc onclick() { var rok:number
        rok.set(sum(fdate('Y'),-1));
        rd_od.set(conc("1.1.",rok)); rd_do.set(conc("31.12.",rok)); zmena
    }}
    button vyber [8,46,,] { title:'výběr období'
      proc onclick() {
        rd_od.set(rd_od.get); rd_do.set(rd_do.get); zmena
    }}
    field rd_od [123,47,87,17] { title:"^ode dne", help:'výběr ode dne', type:'date', format:'t'
      proc onchange () { zmena
    }}
    field rd_do [217,47,87,17] { title:"^do dne", help:'výběr do dne', type:'date', format:'t'
      proc onchange () { zmena
    }}
    radio r_typ [10,80,116,65] { style:'border:1px solid #ddd', value:'1'
      case [0,3,200,16] { title:'Výdaje i příjmy', expr:'1' },
      case [0,23,200,16] { title:'Výdaje', expr:'2' },
      case [0,43,200,16] { title:'Příjmy', expr:'3' },
      proc onchange () { zmena
    }}
    radio r_goa [10,155,300,41] { style:'border:1px solid #ddd', value:'1'
      case [0,3,200,16] { title:'Pro všechny účely', expr:'1' },
      case [0,23,200,16] { title:'Jediný', expr:'2' },
      proc onchange () { zmena
    }}
    select rf_goal [136,176,170,17] { type:'map', map_pipe:p_ucel.hodnota, options:p_ucel.zkratka,
      format:'t', help:'účel|výběr účelu'
      proc onchanged () { r_goa.set(2); zmena
    }}
    proc cond () {
      rc_dat.set(conc(" datum BETWEEN '",date2sql(rd_od.get),"' AND '",date2sql(rd_do.get),"'"));
      rc_org.set(" AND org=5 ");
      rc_typ.set(cconc(eq(r_typ.get,1),'',eq(r_typ.get,2),' AND typ=1',eq(r_typ.get,3),' AND typ=2'));
      rc_goa.set(cconc(eq(r_goa.get,1),'',eq(r_goa.get,2),conc(" AND LOCATE('",rf_goal.get,"',ucel)")));
      d_cond.set(conc(rc_dat.get,rc_org.get,rc_typ.get,rc_goa.get));
      reload(d_cond.get)
    }
    proc zmena () {
      cond
    }
  }
  # ======================================================================================> . oprava
  panel d_oprava [0,0,482,370] { title:' oprava dokladu', type:'popup', css:'dialog'
    use do: form _d_doklad [2,8,,]
    proc d_load (brw,id) {
      do.brw.set(brw); do.load(id); do.sel_typ.enable(0); do.org.enable(0)
    }
  }
  # =====================================================================================> . přidání
  panel d_pridani [0,0,482,370] { title:' přidání řádku k dokladu', type:'popup', css:'dialog'
    use d: form _d_doklad [1,1,,]
    proc d_add (id) {
      d.load(id); d.castka.set(0); d.ucel.set(''); d.copy;
      d.datum.enable(0); d.sel_typ.enable(0); d.org.enable(0); d.komu.enable(0);
      d.poznamka.enable(0); d._d_clen.enable(0); d._d_zam.enable(0);
    }
  }
  # ========================================================================================> . nový
  panel d_novy [0,0,482,370] { title:' nový doklad', type:'popup', css:'dialog'
    use d: form _d_doklad [1,1,,]
    proc d_init (brw,org,typ1) { d.init;
      d.datum.set(now); d.datum.change;
      // pokud je vybrán typ, použij jej
      [ eq(typ1,2,3); d.sel_typ.key(cconc(eq(typ1,2),1,2)); d.sel_typ.change ];
      // nastav pokladnu
      [ d.org.key(org); d.org.change ];
    }
    proc d_copy (id) {
      d.load(id); d.cislo.set(0); d.vytisten.set(0); d.copy
    }
  }
  # ===================================================================================> zaměstnanec
  panel d_zam [0,0,294,370] { title:' výběr zaměstnance', type:'popup', css:'dialog'
    use dc: form _d_doklad_zam [1,1,,]
    use dcc: form _d_vyber_cmd [1,340,,]
    proc onstart() { dc.zamestnanci.browse_load }
    proc onfocus() { dc.zamestnanci.init_queries }
    proc dcc.vyber.onclick () { panel.hide(dc.zamestnanci.popis.get) }
    proc dc.zamestnanci.onsubmit () { panel.hide(dc.zamestnanci.popis.get) }
    proc dc.zamestnanci.oncancel () { panel.hide(0) }
  # --------------------------------------------------------------------------------==> . doklad_zam
    form _d_doklad_zam [,,260,320] {
      browse zamestnanci [5,20,260,300] { rows:15, qry_rows:1
        show [,,125,] { title:'Příjmení a jméno', expr:"concat(trim(person.prijmeni),' ',trim(person.jmeno))", format:'sq'  },
        show [,,125,] { title:'Obec', data:person.obec, format:'sq' },
        show popis [,,0,] { expr:"concat(trim(person.prijmeni),' ',trim(person.jmeno))" },
        show id [,,0,] { data:person.id_person },
      }
    }
  }
  # =========================================================================================> účely
  panel d_ucely [0,0,294,370] { title:' výběr účelu', type:'popup', css:'dialog'
    use dc: form _d_doklad_ucel [1,1,,]
    use dcc: form _d_vyber_cmd [1,340,,]
    proc onstart() { dc.ucely.browse_load("druh='p_ucel'","poradi") }
    proc onfocus() { dc.ucely.init_queries }
    proc dcc.vyber.onclick () { panel.hide(dc.ucely.popis.get) }
    proc dc.ucely.onsubmit () { panel.hide(dc.ucely.popis.get) }
    proc dc.ucely.oncancel () { panel.hide(0) }
  # -------------------------------------------------------------------------------==> . doklad_ucel
    form _d_doklad_ucel [,,260,320] {
      browse ucely [5,20,260,300] { rows:15, qry_rows:1
        show popis [,,250,] { title:'účel', data:_cis.hodnota, format:'sq'  },
        show id [,,0,] { data:_cis.id_cis },
      }
    }
  }
  # ======================================================================================> společné
  # ---------------------------------------------------------------------------------==> . vyber_cmd
  form _d_vyber_cmd [,,260,30] {
    button vyber [227,0,,] { type:'submit', title:'Vybrat' },
    button [152,0,,] { title:'storno',
      proc onclick () { panel.hide(0); stop}
    }
  }
  # ------------------------------------------------------------------------------------==> . doklad
  form _d_doklad [,,419,354] {
    var brw: number,
    var result: text,
    label [6,20,100,20] { title:'Datum' },
    label [6,41,50,17] { title:'Číslo' },
    label [325,23,50,17] { title:'Typ' },
    label [181,41,50,17] { title:'Částka' },
    label [181,21,50,17] { title:'Organizace' },
    label [327,43,50,17] { title:'Kategorie' },
    label [7,62,50,17] { title:'Komu' },
    label [9,112,50,17] { title:'Účel' },
    label [6,161,50,17] { title:'Poznámka' },
    label [277,315,50,17] { title:'Příloh' },
    field datum [74,19,95,17] { type:'date', data:pdenik.datum },
    field typ [74,38,13,17] { format:'d' },
    field cislo [90,38,79,17] { data:pdenik.cislo, format:'d' },
    select org [253,20,61,17] { type:'map', data:pdenik.org, options:pokl.abbr, map_pipe:pokl.abbr,
      format:'d' }
    select sel_typ [392,20,73,17] { type:'map', data:pdenik.typ, options:p_typ.hodnota
      proc onchanged () { typ.set(p_typ.get(this.key,'zkratka')) }
    },
    field castka[252,39,62,17] { data:pdenik.castka },
    field kat [392,40,73,17] { data:pdenik.kat },
    edit komu [73,62,334,46] { data:pdenik.komu },
    edit ucel [73,111,335,47] { data:pdenik.ucel },
    edit poznamka [73,161,391,143] { data:pdenik.poznamka },
    field priloh [320,311,24,17] { data:pdenik.priloh },
    check vytisten [391,313,73,17] { data:pdenik.vytisten },
    label [415,315,73,17] { title:'vytištěno' },
    button save [422,338,,] { type:'submit', title:'OK', help:'uložit změny',
      proc onclick () { _d_save }
    },
    proc _d_save () { _d_save1; panel.hide(form.key); stop }
    proc _d_save1 () {
      form.same; stop
    | form.key; form.save; brw.get.browse_seek
    | form.make('p_pdenik_insert','save:datum,castka,kat,komu,ucel,poznamka,priloh,vytisten;load:cislo'
      ,sel_typ.key,org.key,pokl.get(org.key,'abbr'),datum.get);
      form.load; den.d_browse_seek(form.key)
    }
    button cancel [316,337,,] { title:'Storno', help:'zadané údaje neukládat, vrátit se zpět'
      proc onclick () { panel.hide(0); stop}
    },
    button _d_zam [411,87,,] { title:'zam >'
      proc onclick () { result.set(d_zam.modal(584,100)); result.get; komu.set(result.get); komu.change }
    },
    button [411,138,,] { title:'účel >'
      proc onclick () { result.set(d_ucely.modal(584,100)); result.get; ucel.set(result.get); ucel.change }
    },
    # události
    proc onsubmit () { _d_save }
    proc onload () { typ.set(p_typ.get(sel_typ.key,'zkratka')) }
  }
}
# =======================================================================================> INFORMACE
panel inf {type:'right', title:"Informace", _sys:'inf'
  proc onfirstfocus () {
    d_cond.get | den.dv.vyber_init;
  }
  menu {type:'left', active:*
    menu {title:'Stavy pokladen',type:'group', _sys:'akt'
      item {title:'Aktuální stav pokladen',                     par:°{s:'stav',c:'aktualne'} }
      item {title:'Stav pokladen k datu aktuálního řádku',      par:°{s:'stav',c:'k_datu'} }
      item {title:'Stav podle nastaveného filtru',              par:°{s:'stav',c:'s_filtrem'} }
    }
    menu {title:'Exporty',type:'group', _sys:'exp'
      item {title:'Letošní pokladní deník',                     par:°{s:'export',c:'letos'} }
      item {title:'Loňský pokladní deník',                      par:°{s:'export',c:'vloni'} }
    }
    proc onclick (m) {
      clear;
      i.result.set(conc("<div id='info'>",
        ask('kasa_menu_show',
          'informace',m.par.s,m.par.c,d_cond.get,d_day.get,pokladna.db),"</div>"));
      panel.property(°{height:'*',min_height:500})
    }
  }
  use i: form _i_info [12,4,,]
  form _i_info [,,700,50] {
    label result [0,0,700,600] {
      title:"<div id='info' class='karta'>Aktuální stav pokladen ke dni d.m.y</div>" }
  }
}
# =======================================================================================> NASTAVENÍ
panel nas {type:'plain', title:"Nastavení", _sys:'nas',   skill:'yp+|yp+'

  use os: form _o_seznam [12,4,,]
  use zs: form _z_seznam [12,181,,]
  use zc: form _z_cmd [7,508,,]

  proc onstart () {
    os.seznam.browse_load; os.seznam.raise('onrowclick');
    zs.seznam.browse_load; zs.seznam.raise('onrowclick')
  }
  # ----------------------------------------------------------------------------------------==> . os
  form _o_seznam [,,348,164] { css:'ae_parm'
    browse seznam [9,27,200,200] { rows:4
      show nazev [,,100,] { title:'Název', data:pokladna.nazev, format:'s' },
      show abbr [,,30,] { title:'Org', data:pokladna.abbr, format:'s' },
      show ic [,,80,] { title:'IČ', data:pokladna.ic, format:'s' },
      show dic [,,80,] { title:'DIČ', data:pokladna.dic, format:'s' },
      show id [,,0,] { data:pokladna.id_pokladna },
    },
    label [6,6,267,17] { title:'<b>Seznam organizací a jejich pokladen</b>' },
  }
  # ----------------------------------------------------------------------------------------==> . zs
  form _z_seznam [,,708,354] { css:'ae_parm'
    browse seznam [11,29,200,200] { rows:14, qry_rows:1
      show abbr [,,30,] { title:'Org', data:person.abbr, format:'rqs' },
      show jmeno [,,200,] { title:'Příjmení a jméno',
        expr:"concat(trim(person.prijmeni),' ',trim(person.jmeno))", format:'qs' },
      show titul [,,50,] { title:'Titul', data:person.titul, format:'qs' },
      show ulice [,,100,] { title:'Ulice', data:person.ulice, format:'qs' },
      show psc [,,60,] { title:'Psč', data:person.psc, format:'rqs' },
      show obec [,,100,] { title:'Obec', data:person.obec, format:'qs' },
      show rodcis [,,100,] { title:'Rodné číslo', data:person.rodcis, format:'rqs' },
      show id [,,0,] { data:person.id_person },
      proc onsubmit () { z_oprava.modal(300,100) }
    },
    label [8,8,153,17] { title:'<b>Seznam zaměstnanců</b>' },
  }
  # ----------------------------------------------------------------------------------------==> . zc
  form _z_cmd [,,300,20] {
    button oprav [18,0,,] { type:'submit', title:'Opravit'
      proc onclick () {
        z_oprava.modal(300,100);
      }
    }
    button novy [214,0,,] { title:'Nový'
      proc onclick () {
        z_novy.modal(300,100)
      }
    }
    button smazat [272,1,,] { title:'Smazat'
      proc onclick () {
        confirm(conc('Opravdu smazat zaměstnance ',zs.seznam.jmeno.get,'?'));
        person.delete_record(conc('id_person=',zs.seznam.id.get));
        zs.seznam.raise('onrowclick',zs.seznam.browse_seek(1))
      }
    }
  }
  # ----------------------------------==> . z_oprava
  panel z_oprava [0,0,300,156] { title:'oprava zaměstnance', type:'popup', css:'dialog'
    use z: form _z_zam [1,9,,],
    proc onfocus() { z_load(zs.seznam.id.get); }
    proc z_load (id) { z.load(id) }
  }
  # ----------------------------------==> . z_novy
  panel z_novy [0,0,300,155] { title:'nový zaměstnanec', type:'popup', css:'dialog'
    use z: form _z_zam [1,9,,],
    proc onfocus() { z.init }
  }
  # ---------------------------------------------------------------------------------------==> . zam
  form _z_zam [,,300,100] {
    label [178,19,30,17] { title:'Titul' },
    field [208,16,65,17] { data:person.titul },
    label [15,20,30,17] { title:'Příjmení' },
    field [68,17,99,17] { data:person.prijmeni },
    label [16,40,30,17] { title:'Jméno' },
    field [68,37,99,17] { data:person.jmeno },
    label [15,59,30,17] { title:'Rod.čís.' },
    field [68,57,99,17] { data:person.rodcis },
    label [178,59,30,17] { title:'Organizace' },
    field [256,57,20,17] { data:person.abbr },
    label [16,79,30,17] { title:'Ulice' },
    field [68,77,208,17] { data:person.ulice },
    label [17,99,30,17] { title:'Psč' },
    field [68,97,65,17] { data:person.psc
      proc onchanged() { this.let(replace(this.get,' ','')) }
    }
    label [145,100,30,17] { title:'Obec' },
    field [187,97,89,17] { data:person.obec },
    button save [240,124,,] { type:'submit', title:'OK', help:'uložit změny',
      proc onclick () { the_formsave(form,zs.seznam); panel.hide(form.key) }
    }
    button cancel [143,124,,] { title:'Storno', help:'zadané údaje neukládat, vrátit se zpět'
      proc onclick () { panel.hide(0) }
    }
  }
}
# =================================================================================> Upomínací maily
panel maily { type:'right', title:'Upomínací maily', _sys:'*', skill:'ypm'
  use msg:  form _right [12,4,,] { tag:'R' }
  use info: form _info [12,4,,] { tag:'E' }
  form _info [,,*,50] { style:'width:calc(100% - 24px)'
    // header
    label head [0,0,*,50]  { title:'' }
    func header(i:ezer) { var i_owner:ezer
      clear(); i_owner= i.owner(); 
      head= replace_fa(`<div class='karta'>${i_owner.title} - ${i.title}</div>`);
    }
    // mail
    field id_cron { data:cron.id_cron }
    label infox [10,55,622,70] 
    field info { data:cron.info }
    edit adr [10,155,800,100] { data:cron.adr, title:'^adresáti ve formátu JSON {skupina:seznam adres,...}' }
    field replyto [10,285,800,] { data:cron.replyto, title:'^odesílací adresa pro případ odpovědi' }
    edit pozn [10,330,800,150] { data:cron.par, 
        title:'^text nahrazující v dopisu {poznamka} ve formátu JSON {skupina:poznámka,...}, poznámky jsou ve formátu HTML' }
    edit txt [10,510,800,333] { data:cron.txt, title:'^text dopisu obsahující {poznamka}', type:'html' }
    // akce
    label [692,63,120,57] { css:'parm' }
    button [702,70,,] { title:'[fa-save] Uložení změn' 
      func onclick() { var ok:object
        ok= json_decode(adr);
        if (!ok) alert('zápis adresátů nemá validní formát JSON');
        ok= json_decode(pozn);
        if (!ok) alert('zápis poznámek nemá validní formát JSON');
        if (ok) {
          form.save(1); Load()
        }
    }}
    button [702,94,,] { title:'[fa-undo] Vrácení změn' func onclick() { Load()}}
    func Load() { form.load(1); infox= info; }
  }
  // menu
  func onfirstfocus() { m.p.i.click() }
  menu m {type:'left', format:'f', active:m.p.i
    menu p {title:'Pokladní upozornění',type:'group'
      item i {title:'[fa-edit] Úprava adresátů a textu'
        func onclick(i:ezer) { 
          panel.display(2,'E');
          info.header(i); clear();
          info.Load();
        }
      }
      item {title:'[fa-question] ukázat maily bez odeslání',par:{adresy:'*',poslat:0}}
      item {title:'[fa-send] poslat nyní všem upomínku',    par:{adresy:'*',poslat:1}}
      item {title:"[fa-send] ... JEN NA ADRESU 'ja' ",      par:{adresy:'ja',poslat:1}}
      func onclick(i:ezer) { 
        panel.display(2,'R');
        msg.header(i); clear();
        if (i.par.poslat && !confirm('Opravdu mají být maily odeslány bez čekní na CRON?')) return;
        msg.fill('',php.kasa_send(i.par.adresy,i.par.poslat));
      }
    }
    menu {title:'Log file',type:'group'
      item {title:'[fa-question] log odesílání mailů',  par:{typ:'mail',subj:'pokladna'} }
      func onclick (i:ezer) { 
        panel.display(2,'R');
        clear(); msg.header(i); 
        msg.fill('',php.kasa_send_log(i.par.typ,i.par.subj));
      }
    }
  }
}
# ===================================================================================> tabulky, mapy
proc the_formsave (f,b) {
  f.same
| f.key; f.save; { b.browse_seek; f.load | f.init }
| f.insert; f.load;
  b.raise('onrowclick',b.browse_seek(conc(f.id_key,'=',f.key)))
}

form _right [,,*,50] { style:'width:calc(100% - 24px)'
  label head [0,0,*,50]  { title:'' }
  label msg  [0,35,*,20] { title:'' }
  label note [0,55,*,] { title:'' }
  func header(i:ezer) { var i_owner:ezer
    clear(); i_owner= i.owner();
    msg= ''; note= '';
    head= replace_fa(`<div class='karta'>${i_owner.title} - ${i.title}</div>`);
  }
  func fill(x,y) {
    if (x) head= `<div class='karta'>${replace_fa(x)}</div>`;
    if (y) note= y
  }
  func append(y) {
    if (y) note= conc(note,y)
  }
}

table _cis { key_id:'id_cis'
  number id_cis { key:'primary' },
  text druh,
  text data,
  text hodnota,
  text zkratka,
  number poradi,
  text barva,
  text ikona
}

table pdenik { key_id:'id_pokl'
  number id_pokl { key:'primary' },
  number ident { help:'identifikace|jednoznačná identifikace dokladu' },
  number cislo { help:'číslo|číslo dokladu' },
  date datum { help:'datum|datum proplacení', sql_pipe:'sql_date1' },
  number org { help:'pokladna|číslo pokladny' } //, sql_pipe:'pipe_pdenik_org' },
  number typ { help:'typ|výdej=1, příjem=2'} //, sql_pipe:'pipe_pdenik_typ' },
  number castka { help:'částka' },
  text komu { help:'komu' },
  text ucel { help:'účel' },
  number priloh { help:'příloh|počet příloh dokladu' },
  text poznamka { help:'poznámka' },
  number vytisten { help:'vytištěn|doklad byl vytištěn' },
  text kat { help:'kategorie' },
}

table person { key_id:'id_person'
  number id_person { key:'primary' },
  text abbr { help:'organizace|značka zaměstnavatele' },
  text jmeno { help:'jméno|křestní jméno' },
  text prijmeni { help:'příjmení' },
  text titul { help:'titul' },
  text rodcis { help:'rodné číslo' },
  text ulice { help:'ulice|ulice trvalého bydliště' },
  text psc { help:'Psč|Psč trvalého bydliště' },
  text obec { help:'obec|obec trvalého bydliště' },
}

table pokladna {  key_id:'id_pokladna'
  number id_pokladna { key:'primary' },
  text abbr { help:'označení|značka pokladny' },
  text nazev { help:'název|název organizace' },
  text ulice { help:'ulice|ulice sídla org' },
  text psc { help:'Psč|Psč sídla org' },
  text obec { help:'obec|obec sídla org' },
  text ic { help:'IČ' },
  text dic { help:'DIČ' },
}

table cron { key_id:'id_cron'
  number id_cron
  text batch
  text info
  text adr
  text replyto
  text par
  text subj
  text txt
}

map p_ucel: table _cis {where:"druh='p_ucel'", order:'poradi'/*, key:'data'*/}
map p_typ:  table _cis {where:"druh='p_typ'", order:'poradi', key_id:'data'}

map pokl:   table pokladna {where:"1", key_id:'id_pokladna' }

