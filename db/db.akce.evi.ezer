# ------------------------------------------------------------------------------------------------ #
# Karta pro evidenci členů                                                                         #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2011 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

var osoby_vyber: text           // výběrová podmínka
var the_par: object             // parametr běžného itemu menu
var the_title: text             // text běžného itemu menu
var mode: text                  // r|o -- rodiny nebo osoby

use osoby:  form _osoby  [10,10,,]        { tag:'list' }
use rodiny: form _rodiny [10,10,,]        { tag:'rodi' }
use evid:   form _evid   [355,10,,]       { tag:'evid' }
use dary:   form _dary   [355,300,,]      { tag:'dary', format:'n' }
use platby: form _platby [10,550,,]       { tag:'plat', format:'n' }

# záložky evidence
use p_oso:  form _osoba  [360,10,,]       { tag:'p_oso' }
use p_rod:  form _rodina [360,10,,]       { tag:'p_rod' }
use p_cle:  form _rcleni [360,10,,]       { tag:'p_cle' }
use p_fir:  form _firma  [360,10,,]       { tag:'p_fir' }
use p_akc:  form _oakce  [360,10,,]       { tag:'p_akc' }

# záložky členství a darů
use d_cle:  form _dcleni [360,300,,]      { tag:'d_cle', format:'n' }
use d_pri:  form _dpris  [360,300,,]      { tag:'d_pri', format:'n' }
use d_dar:  form _ddary  [360,300,,]      { tag:'d_dar', format:'n' }

use info: form right [12,4,,] {             tag:'inf'
  button export [-20,4,100,16] { title:'Excel', style:'display:block;zIndex:2',
    proc onclick() {
      var res: object
      switch(export.get,
      'Excel',{
        res.set(ask('evid_vyp_excel',the_par.get,the_title.get));
        form.msg.set(res.html);
      })
    }
  }
}
# funkce volané z panelu UCASTNICI
proc evid_show(id_osoba) {
  osoby.b.browse_seek(conc('os.id_osoba=',id_osoba));
  evid.reload; dary.reload;
}

# systémové informace
use stav: form _stav [0,550,,] { tag:'syst', skill:'m' }

proc onstart () {
  mode.set('o'); osoby_vyber.set(1);
}

proc onfirstfocus() {
#   evid.page_init; dary.page_init;
#   osoby.b.browse_load;
#   evid.oso.onclick;
  m.g.i.click;
}

proc status() {
  has_skill('m');
  switch(mode.get,
  'o',{ stav.klice.set(conc('osoby: id_osoba=',osoby.b.id_o.get,', id_rodina=',osoby.b.id_r.get)) },
  'r',{ stav.klice.set(conc('rodiny: id_rodina=',rodiny.b.id_r.get)) },
      { stav.klice.set('') }
  )
}
const LETOS = "NOW()>=od.dat_od AND (NOW()<=od.dat_do OR od.dat_do='0000-00-00')"
menu m {type:'left'
  menu g {title:'Evidence jednotlivců',type:'group', skill:'yae;fae;cae'
    item i {title:'všechny kontakty'
          par:°{cnd:"1",hav:"1"} }
    item {title:'letošní členové'
          par:°{cnd:LETOS,hav:"LOCATE('b',rel)>0 OR LOCATE('c',rel)>0"} }
    item {title:'letošní činní členové'
          par:°{cnd:LETOS,hav:"LOCATE('c',rel)>0"} }
    item {title:'letošní č.členové - dlužníci'
          par:°{cnd:LETOS,hav:"LOCATE('c',rel)>0 AND NOT LOCATE('p',rel)>0"} }
    item {title:'letošní  dárci', skill:'yae'
          par:°{cnd:LETOS,hav:"LOCATE('d',rel)>0"} }
    item {title:'letošní dárci bez potvrzení', format:'d', skill:'yae'
          par:°{cnd:"1",hav:"LOCATE('d',rel)>0"} }
    proc onclick (i) {
      mode.set('o');
      panel.display(0,'inf|rodi|plat'); panel.display(1,'evid|list|syst|p_.*');
      evid.page_init; dary.page_init;
      osoby.b.browse_load(conc("os.deleted='' AND ",i.par.cnd),"",i.par.hav);
      evid.page_show; dary.page_show;
      osoby.b.raise('onrowclick');
    }
  }
  menu {title:'Evidence rodin',type:'group', skill:'yae;fae;cae'
    item {title:'všechny rodiny'   par:°{cnd:"1",hav:"1"} }
    item {title:'... s více maily' par:°{cnd:"TRIM(emaily) REGEXP ',[^$]|;[^$]'",hav:"1"}, skill:'yae' }
    item {title:'... s více telefony' par:°{cnd:"TRIM(telefony) REGEXP ',[^$]|;[^$]'",hav:"1"}, skill:'yae' }
    proc onclick (i) {
      mode.set('r');
      panel.display(0,'inf|list|plat'); panel.display(1,'rodi|syst');
      evid.page_init; dary.page_init;
      rodiny.b.browse_load(i.par.cnd,"",i.par.hav);
      // experimentální přepnutí podle osoby
#       [ oboby.b.id_r.get; rodiny.b.browse_load(i.par.cnd,"",i.par.hav)
#       | rodiny.b.browse_load(i.par.cnd,"",i.par.hav) ]
    }
  }
  menu {title:'Přehledy a statistiky',type:'group', skill:'yae'
    item {title:'Přehled VPS od 1990',
          par:°{typ:'e-v',exp:'Excel',cnd:1, hav:"_vps>0",tit:'jméno:20,obec:20',fld:'_jmeno,obec'}}
    item {title:'Přehled všech od 1990',
          par:°{typ:'e-v',exp:'Excel',cnd:1, hav:"1",tit:'jméno:20,obec:20',fld:'_jmeno,obec'}}
    item {title:'Struktura letních kurzů MS',
          par:°{typ:'e-s',exp:'Excel'}}
  }
  menu {title:'Výpisy a exporty',type:'group', skill:'yae'
    item {title:'Členové YMCA Setkání',
          par:°{typ:'e-j',exp:'Excel',cnd:1, hav:"rel RLIKE 'b|c'",
                tit:'příjmení:15,jméno:10,ulice:20,obec:20,psč:7,datum nar.:10,čl.:3,přísp.:6,KČ:13,e-mail:30',
                fld:'prijmeni,jmeno,ulice,obec,psc,_naroz,_clen,_prisp,_kc,_email'}}
    item {title:'Činní členové YMCA Setkání',
          par:°{typ:'e-j',exp:'Excel',cnd:1, hav:"rel RLIKE 'c'",
                tit:'příjmení:15,jméno:10,ulice:20,obec:20,psč:7,datum nar.:10,čl.:3,přísp.:6,KČ:13,e-mail:30',
                fld:'prijmeni,jmeno,ulice,obec,psc,_naroz,_clen,_prisp,_kc,_email'}}
    item {title:'Členové YS podrobně',
          par:°{typ:'e-j',exp:'Excel',cnd:1, hav:"rel RLIKE 'b|c'",
                tit:'příjmení:15,jméno:10,ulice:20,obec:20,psč:7,datum nar.:10,čl.:3,přísp.:6,rok:6,KČ:13,e-mail:30',
                fld:'prijmeni,jmeno,ulice,obec,psc,_naroz,_clen,_prisp,_rok,_kc,_email'}}
    item {title:'Činní členové YS podrobně',
          par:°{typ:'e-j',exp:'Excel',cnd:1, hav:"rel RLIKE 'c'",
                tit:'příjmení:15,jméno:10,ulice:20,obec:20,psč:7,datum nar.:10,čl.:3,přísp.:6,rok:6,KČ:13,e-mail:30',
                fld:'prijmeni,jmeno,ulice,obec,psc,_naroz,_clen,_prisp,_rok,_kc,_email'}}
  }
  menu {title:'Zpracování bankovních výpisů',type:'group', skill:'yae'
    item {title:'import plateb z RB', //skill:'m'
      proc onclick (i) {
        alert(ask('akce_rb_platby'));
      }
    }
    item {title:'zpracování plateb z RB', //skill:'m'
      proc onclick (i) {
        panel.display(1,'plat'); panel.display(0,'syst');
        info.fill(conc(i.owner.title,' - ',i.title),' ');
        platby.b.browse_load
      }
    }
  }
  proc onclick (i) {
    var x: object
    panel.display(1,'inf'); panel.display(0,'evid|list|dary|plat|p_.*|d_.*');
    the_par.set(i.par); the_title.set(i.title); info.export.set(i.par.exp);
    info.fill(conc(i.owner.title,' - ',i.title),' ');
    info.msg.set('');
    x.set(ask('evid_sestava',i.par,the_title.get));
    info.fill('',x.html);
  }
}
# -------------------------------------------------------------------------------------------------- _stav
form _stav [,,380,106] {
  label klice [0,0,380,106] { skill:'m', style:'border:1px solid #bbb;padding:3px' }
}
# -------------------------------------------------------------------------------------------------- _osoby
form _osoby {
  view os: table osoba
  view ot: table tvori { join:"ON os.id_osoba=ot.id_osoba" }
  view of: table rodina { join:"USING(id_rodina)" }
  view od: table dar { join_type:'LEFT', join:"ON os.id_osoba=od.id_osoba AND od.deleted=''" }
  browse b [0,0,,] { rows:28, qry_rows:1, group_by:'os.id_osoba'
    show id_o { data:os.id_osoba }
    show id_t { data:ot.id_tvori }
    show id_r { data:of.id_rodina }
    show id_d { data:od.id_dar }
    show prijmeni [,,70,] { data:os.prijmeni, title:'příjmení', format:'q*s' }
    show jmeno [,,70,] { data:os.jmeno, title:'jméno', format:'q*s' }
    show [,,60,] { title:'obec', data:os.obec, format:'q*s' }
    show rel [,,100,] { expr:"GROUP_CONCAT(DISTINCT od.ukon ORDER BY od.ukon SEPARATOR '')", title:'YS',
      help:'b,c=běžný či činný člen, d=dar, p=příspěvek', format:'q%s' }
    show nar [,,0,] { title:'rrmmdd', data:os.narozeni, sql_pipe:'sql_yymmdd', format:'q@s'
      help:'datum narození ve tvaru rrmmdd'}
    show mail [,,0,] { expr:"CONCAT(email,IF(email='','',','),emaily)", title:'emaily',
      help:'osobní i  rodinné emaily', format:'tq%s' }
    proc onrowclick() { evid.reload; dary.reload; status }
    proc onclick() {
      rel.width; rel.width(0);   nar.width(100);
    | nar.width; nar.width(0);   mail.width(100);
    |            rel.width(100); mail.width(0);
    }
    # --------------------------------------------------  KONTEXTOVÉ MENU
    menu { type:'context'
      item { title:'ukázat všechny změny'
        proc onclick () { Ctrack.CT_tab.set('osoba'); Ctrack.CT_load(id_o.get) }
      }
    }
  }
}
# -------------------------------------------------------------------------------------------------- _rodiny
form _rodiny {
  view r: table rodina
  view t: table tvori { join:"USING(id_rodina)" }
  view o: table osoba { join:"USING(id_osoba)" }
  browse b [0,0,,] { rows:28, qry_rows:1, group_by:'r.id_rodina'
    show id_r { data:r.id_rodina }
    show id_t { data:t.id_tvori }
    show _nazev [,, 80,] { title:'rodina', format:'s+q*', data:r.nazev }
    show _jmena [,,160,] { title:'jméno/a', format:'tsq%',
      expr:"GROUP_CONCAT(DISTINCT o.jmeno ORDER BY t.role SEPARATOR ' ')" }
    show [,,60,] { title:'obec', data:r.obec, format:'q*s' }
    proc onrowclick() { evid.reload; status }
    # --------------------------------------------------  KONTEXTOVÉ MENU
    menu { type:'context'
      item { title:'všechny emaily jsou muže',          proc onclick() { sep_mail('M') } }
      item { title:'všechny emaily jsou ženy',          proc onclick() { sep_mail('Z') } }
      item { title:'rozdělit emaily na muž ; žena',     proc onclick() { sep_mail('MZ') } }
      item { title:'... na muž,muž ; žena',             proc onclick() { sep_mail('MMZ') } }
      item { title:'-ukázat všechny změny'
        proc onclick () { Ctrack.CT_tab.set('rodina'); Ctrack.CT_load(id_r.get) }
      }
    }
    proc sep_mail(typ) {
      confirm(ask('evid_separ_emaily',id_r.get,typ,'confirm'));
      ask('evid_separ_emaily',id_r.get,typ,'change');
      evid.reload
    }
  }
}
# -------------------------------------------------------------------------------------------------- _evid
form _evid { style:'z-index:1'
  var zalozka: text           // oso | rod | cle | fir | akc
  proc page_show() { tags(oso,'p_oso','p_rod|p_cle|p_fir|p_akc') }
  # --------------------------- záložky
  proc tags(a,on,off) {
    zalozka.set(on);
    form.set_css('ae_butt_off','ae_butt_on','p');
    a.set_css('ae_butt_on','ae_butt_off');
    panel.display(1,on); panel.display(0,off);
  }
  proc reload() {
    var rid: number
    eq(mode.get,'o');
    switch(zalozka.get,
    'p_oso',{ p_oso.key(osoby.b.id_o.get); p_oso.reload },
    'p_rod',{ p_rod.load(osoby.b.id_r.get) },
    'p_cle',{ p_cle.b.browse_load(conc('ox.id_rodina=',osoby.b.id_r.get)) },
    'p_akc',{ p_akc.ucasti(osoby.b.id_o.get) },
    { stop })
  | eq(mode.get,'r');
    p_rod.load(rodiny.b.id_r.get)
  }
  proc page_init() {
    eq(mode.get,'o'); zalozka.set('oso'); evid.display(1,'p');
    p_oso.init; p_rod.init; p_cle.b.browse_init; p_akc.akc.browse_init
  | eq(mode.get,'r'); zalozka.set('rod'); evid.display(0,'p'); rod.display(1);
    tags(rod,'p_rod','p_oso|p_cle|p_fir|p_akc');
    p_rod.init;
  }
  label oso [ 10,0,60,20] {tag:'p', title:'<b>Osoba</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'p_oso','p_rod|p_cle|p_fir|p_akc'); reload } }
  label rod [ 90,0,60,20] {tag:'p', title:'<b>Rodina</b>', format:'c',
    proc onclick() { tags(this,'p_rod','p_oso|p_cle|p_fir|p_akc'); reload } }
  label cle [170,0,60,20] {tag:'p', title:'<b>Členové</b>', format:'c',
    proc onclick() { tags(this,'p_cle','p_oso|p_rod|p_fir|p_akc'); reload } }
  label fir [250,0,60,20] {tag:'p', title:'<b>Firma</b>', format:'c',
    proc onclick() { tags(this,'p_fir','p_oso|p_rod|p_cle|p_akc'); reload } }
  label akc [330,0,60,20] {tag:'p', title:'<b>Akce</b>', format:'c',
    proc onclick() { tags(this,'p_akc','p_oso|p_rod|p_cle|p_fir'); reload } }
  label [0,16,400,260] { css:'ae_work'}
}
# ---------------------------------------------------------------------- _osoba
form _osoba { tag:'a'
  view o: table osoba
  view t: table tvori { join:"ON o.id_osoba=t.id_osoba" }
  view r: table rodina { join:"ON r.id_rodina=t.id_rodina" }
  # --------------------------------------------------  PROCEDURY
  proc reload() { o.key(form.key); o.load }
  # --------------------------------------------------  OSOBA
  const L=0; T=10
  field  { data:o.id_osoba }
  field  { data:t.id_tvori }
  field  { data:r.id_rodina }
#   label  [L+0,T+9,367,249] { css:'ae_part' }
#   label  [L+8,T+0,74,] { title:'osobní údaje', css:'ae_part_label' }
  label          [L+5,T+15,89,] {title:'příjmení'}
  field prijmeni [L+5,T+30,89,] {data:o.prijmeni, help:'příjmení'}
  label          [L+109,T+15,78,] {title:'jméno'}
  field jmeno    [L+109,T+30,79,] {data:o.jmeno}
  radio sex [L+200,T+15,50,35] { data:o.sex, value:'1'
    case [0,2,50,] { title:'muž', expr:'1' }
    case [0,17,50,] { title:'žena', expr:'2' }
    proc onchange() { echo('sex=',this.get) }
  }
  label          [L+256,T+16,33,] {title:'narození'}
  field narozeni [L+255,T+32,85,] {type:'date', data:o.narozeni, format:'rR:e'}
  label          [L+346,T+16,41,] {title:'nnnn rč'}
  field rodne    [L+345,T+32,37,] {data:o.rc_xxxx, format:'r:e'}
  label          [L+5,T+54,100,] {title:'ulice'}
  field ulice    [L+5,T+69,162,] {data:o.ulice}
  label          [L+179,T+54,39,] {title:'psč'}
  field psc      [L+179,T+69,40,] {data:o.psc}
  label          [L+230,T+54,100,] {title:'obec'}
  field obec     [L+229,T+69,131,] {data:o.obec}
  label          [L+13,T+101,33,] {title:'telefon'}
  field telefon  [L+51,T+97,212,] {type:'list', data:o.telefon}
  label          [L+16,T+128,30,] {title:'e-mail'}
  field email    [L+52,T+124,330,] {type:'list', data:o.email}
  label          [L+0,T+152,48,] {title:'poznámka'}
  edit  pozn     [L+52,T+151,329,60] {data:o.note}
  # --------------------------------------------------  OPRAVA
  const Lt=55
  const Tt=240
  label  [Lt+0,Tt+0,98,30] { css:'ae_parm', style:'z-index:1'  }
  button [Lt+6,Tt+5,,] {title:'Uložit', help:'Uložení změněných osobních údajů'
    proc onclick() {
      o.key;
      // oprava
      [ o.save; reload ];
      [ osoby.b.browse_row | osoby.b.browse_init ]
    | // přidání
      error('o.insert');
  }}
  button [Lt+55,Tt+5,,] {title:'Zpět', help:'Změny nebudou uloženy'
    proc onclick() {
      evid.reload;
  }}
  # --------------------------------------------------  VYTVÁŘENÍ A MAZÁNÍ
  label  [Lt+122,Tt+0,109,30] { css:'ae_parm', style:'z-index:1'  }
  button [Lt+127,Tt+5,,] {title:'Nový', help:'Založení nového kontaktu na osobu', format:'d'
    proc onclick() {  } }
  button [Lt+170,Tt+5,,] {title:'Vymazat', help:'Vymazání osobních informací z evidence', format:'d'
    proc onclick() {
      var ans: text
      confirm('Opravdu vymazat všechny údaje o ',prijmeni.get,' ',jmeno.get,' z databáze?');
  } }
  # --------------------------------------------------  KONTEXTOVÉ MENU
  menu { type:'context'
    item back { title:'ukázat všechny změny'
      proc onclick () { Ctrack.CT_tab.set('osoba'); Ctrack.CT_load(o.key) }
    }
  }
}
# ---------------------------------------------------------------------- _rodina
form _rodina {
  view r: table rodina
  # --------------------------------------------------  PROCEDURY
  proc reload() { form.load }
  # --------------------------------------------------  RODINA
  const Lr= 0; Tr= 10
#   label  [Lr+0,Tr+9,367,249] { css:'ae_part' }
#   label  [Lr+8,Tr+0,74,] { title:'rodinné údaje', css:'ae_part_label' }
  label          [Lr+5,Tr+15,100,] {title:'společné příjmení'}
  label          [Lr+181,Tr+15,75,] {title:'svatba'}
  label          [Lr+297,Tr+15,43,] {title:'SPZ'}
  label          [Lr+5,Tr+54,100,] {title:'ulice'}
  label          [Lr+179,Tr+54,39,] {title:'psč'}
  label          [Lr+230,Tr+54,100,] {title:'obec'}
  field nazev    [Lr+4,Tr+30,100,] {data:r.nazev, help:'příjmení'}
  field _spolu   [Lr+149,Tr+32,23,] {format:'o', value:'?'}
  field svatba   [Lr+178,Tr+31,36,] {data:r.svatba}
  field ulice_r  [Lr+4,Tr+69,162,] {data:r.ulice}
  field psc_r    [Lr+179,Tr+69,39,] {data:r.psc}
  field obec_r   [Lr+228,Tr+69,129,] {data:r.obec}
  field datsvatba[Lr+220,Tr+31,63,] {data:r.datsvatba}
  field spz      [Lr+297,Tr+31,62,] {data:r.spz}
  label          [Lr+13,Tr+101,33,] {title:'telefon'}
  field telefony [Lr+51,Tr+97,212,] {type:'list', data:r.telefony, par:°{delim:',|;'} }
  label          [Lr+16,Tr+128,30,] {title:'e-mail'}
  field emaily   [Lr+52,Tr+124,330,] {type:'list', data:r.emaily, par:°{delim:',|;'}}
  label          [Lr+0, Tr+152,48,] {title:'poznámka'}
  edit  note     [Lr+52,Tr+151,329,60] {data:r.note}
  # --------------------------------------------------  OPRAVA
  const Lrb=55
  const Trb=240
  label  [Lrb+0,Trb+0,98,30] { css:'ae_parm', style:'z-index:1'  }
  button [Lrb+6,Trb+5,,] {title:'Uložit', help:'Uložení změněných rodinných údajů'
    proc onclick() {
      form.key;
      // oprava
      [ form.save; reload ];
      [ osoby.b.browse_seek | osoby.b.browse_init ]
    | // přidání
      error('r.insert');
  }}
  button [Lrb+55,Trb+5,,] {title:'Zpět', help:'Změny nebudou uloženy'
    proc onclick() {
      evid.reload;
  }}
  # --------------------------------------------------  VYTVÁŘENÍ A MAZÁNÍ
  label  [Lrb+122,Trb+0,109,30] { css:'ae_parm', style:'z-index:1'  }
  button [Lrb+127,Trb+5,,] {title:'Nový', help:'Založení nového rodiny', format:'d'
    proc onclick() {  } }
  button [Lrb+170,Trb+5,,] {title:'Vymazat', help:'Vymazání rodinných informací z evidence', format:'d'
    proc onclick() {
      var ans: text
      confirm('Opravdu vymazat všechny údaje o ',nazev.get,' z databáze?');
  } }
  # --------------------------------------------------  KONTEXTOVÉ MENU
  menu { type:'context'
    item back { title:'ukázat všechny změny'
      proc onclick () { Ctrack.CT_tab.set('rodina'); Ctrack.CT_load(form.key) }
    }
  }
}
# ---------------------------------------------------------------------- _rcleni
form _rcleni {
  view ox: table rodina
  view ot: table tvori { join:"ON ox.id_rodina=ot.id_rodina AND ot.id_rodina!=1" }
  view os: table osoba { join:"USING(id_osoba)" }
  browse b [10,30,,] { rows:10, buf_rows:20, qry_rows:1
    show id_r { data:ox.id_rodina }
    show id_t { data:ot.id_tvori }
    show id_o { data:os.id_osoba }
    show [,,80,] { data:os.prijmeni, title:'příjmení', format:'q*s' }
    show [,,70,] { data:os.jmeno, title:'jméno', format:'q*s' }
    show [,,30,] { data:ot.role, title:'vztah', help:'vztah k rodině', format:'q*s' }
    proc onrowclick() { echo('onrowclick: osoba=',id_o.get,', rodina=',id_r.get) }
    proc onsubmit() { echo('onsubmit: osoba=',id_o.get,', rodina=',id_r.get);
      osoby.b.raise('onrowclick',id_o.get);
    | osoby.b.browse_seek(conc('os.id_osoba=',id_o.get));
    }
  }
}
# ---------------------------------------------------------------------- _oakce
form _oakce {
  view a: table akce
  view p: table pobyt { join:'ON a.id_duakce=p.id_akce' }
  view s: table spolu { join:'USING(id_pobyt)' }
  browse akc [10,30,,] { rows:10, qry_rows:1
    show ida { data:a.id_duakce }
    show idp { data:p.id_pobyt }
    show ids { data:s.id_spolu }
    show rok  [,, 30,] { title:'rok', expr:"YEAR(a.datum_od)", format:'q*s-' }
    show akce [,,150,] { title:'název', data:a.nazev, format:'q*s' }
    show fce  [,, 30,] { title:'fce', data:p.funkce, map_pipe:ms_akce_funkce.zkratka, format:'q*s' }
    proc onsubmit() {
      has_skill('yaa');
      ucast.akce_show(ida.get,idp.get,conc(akce.get,' ',rok.get),'EVIDENCE') }
  }
  proc ucasti(id_osoba) {
    id_osoba; akc.browse_load(conc('a.spec=0 AND s.id_osoba=',id_osoba),"datum_od DESC")
  | akc.browse_init
  }
}
# ---------------------------------------------------------------------- _firma
form _firma {
  label [10,50,,] { title:'tady bude informace o firmě, pokud se mají dary psát na ni' }
}
# -------------------------------------------------------------------------------------------------- _dary
form _dary { style:'z-index:1'
  var zalozka: text           // cle | dar
  proc page_show() { tags(cle,'d_cle','d_pri|d_dar'); }
  # --------------------------- záložky
  proc tags(a,on,off) {
    zalozka.set(on);
    form.set_css('ae_butt_off','ae_butt_on','d');
    a.set_css('ae_butt_on','ae_butt_off');
    panel.display(1,on); panel.display(0,off);
  }
  proc reload() {
    switch(zalozka.get,
    'd_cle',{
      d_cle.form_init;
      d_cle.b.browse_load(conc("da.deleted='' AND ukon IN ('b','c') AND id_osoba=",osoby.b.id_o.get)) },
    'd_pri',{
      d_pri.form_init;
      d_pri.b.browse_load(conc("da.deleted='' AND ukon='p' AND id_osoba=",osoby.b.id_o.get)) },
    'd_dar',{
      d_dar.form_init;
      d_dar.b.browse_load(conc("da.deleted='' AND ukon='d' AND id_osoba=",osoby.b.id_o.get)) },
    { stop });
  }
  proc page_init() {
    eq(mode.get,'o');
    zalozka.set('oso');
    panel.display(1,'dary|d_.*'); d_cle.form_init; d_pri.b.browse_init; d_dar.form_init
  | eq(mode.get,'r');
    panel.display(0,'dary|d_.*')
  }
  label cle [10,0,70,20] {tag:'d', title:'<b>Členství</b>', format:'c',
    proc onclick() { tags(this,'d_cle','d_pri|d_dar'); reload }}
  label pri [90,0,70,20] {tag:'d', title:'<b>Příspěvky</b>', format:'c',
    proc onclick() { tags(this,'d_pri','d_cle|d_dar'); reload }}
  label dar [170,0,70,20] {tag:'d', title:'<b>Dary</b>', format:'c',
    proc onclick() { tags(this,'d_dar','d_cle|d_pri'); reload }}
  label [0,16,400,225] { css:'ae_work'}
}
# ---------------------------------------------------------------------- _dcleni
form _dcleni [,,400,245] {
  view da: table dar
  view do: table osoba { join:"USING(id_osoba)" }
  browse b [10,30,,] { rows:8, qry_rows:1
    show id_d { data:da.id_dar }
    show id_o { data:do.id_osoba }
    show ukon [,,10,] { data:da.ukon, title:'způsob', format:'q*s' }
    show [,,70,] { data:da.dat_od, title:'vznik', format:'rq*s' }
    show [,,70,] { data:da.dat_do, title:'ukončení', format:'rq*s' }
    proc onrowclick() { form.load(id_d.get); form_state('n|s','u|z'); }
  }
  # formulář pro úpravu členství
  # skryté položky
  field id_o { data:da.id_osoba }
  field ukon { data:da.ukon }
  field del  { data:da.deleted }
  # viditelné položky
  const Lc=200
  select typ   [Lc,40,65,] {type:'map', help:'typ členství', options:ms_akce_clen.zkratka
    proc onchange() { ukon.set(cconc(typ.key,'c','b')); ukon.change(1) }
  }
  label        [Lc,typ.t+-14,,] {title:'typ členství'}
  field datum  [Lc,75,85,] {type:'date', data:da.dat_od, help:'datum přijetí', format:'RUr'}
  label        [Lc,datum.t+-14,,] {title:'člen ode dne'}
  field konec  [Lc,110,85,] {type:'date', data:da.dat_do, help:'datum zrušení', format:'RUr'}
  label        [Lc,konec.t+-14,,] {title:'členství ukončeno dne'}
  field pozn   [Lc,145,170,] {data:da.note, help:'poznámka'}
  label        [Lc,pozn.t+-14,,] {title:'poznámka'}

  # tlačítka a obslužné procedury
  proc form_init() {
    b.browse_init; typ.plain; form.init; form_state('n','u|z|s'); }
  proc form_state(on,off) {
    form.enable(1,on); form.enable(0,off); }
  proc onchanged () {
    form_state('u|z','n|s') }
  proc onload () { typ.key(cconc(eq(ukon.get,'b'),0,1)); typ.plain }
  label cmd [Lc,175,110,50] { css:'ae_parm', style:'z-index:1' }
  # Nový
  button [cmd.l+6,cmd.t+3,,] { tag:'n', title:'Nový',  help:'Vložit nový dar',
    proc onclick() {
      form.init; form_state('u|z','n|s');
      id_o.set(osoby.b.id_o.get); id_o.change(1); del.set(''); del.change(1);
      typ.key(0); typ.change; datum.set(now); datum.change(1);
  }}
  # Uložit
  button [cmd.l+50,cmd.t+3,,] {tag:'u', title:'Uložit',  help:'Uložit změněná data',
    proc onclick() {
      form.same
    | // oprava
      form.key; form.save; form.load;
      [ b.browse_seek; form_state('n|s','u|z') ];
      [ osoby.b.browse_row | osoby.b.browse_init ]
    | // přidání
      id_o.get;
      form.insert; form.load;
      b.raise('onrowclick',b.browse_seek(conc('id_dar=',form.key))); form_state('n|s','u|z');
      [ osoby.b.browse_row | osoby.b.browse_init ]
    | error('chyba při vkládání členství - nenastavený člen')
  }}
  # Zpět
  button [cmd.l+6,cmd.t+25,,] {tag:'z', title:'Zpět',  help:'Neměnit změněná data',
    proc onclick() {
      b.browse_count; form.load(b.id_d.get); form_state('n|s','u|z')
    | form.init; form_state('n','u|z|s')
  }}
  # Smazat
  button [cmd.l+50,cmd.t+25,,] {tag:'s', title:'Smazat',  help:'Zcela zrušit (ne ukončit) členství',
    proc onclick() {
      confirm("opravdu zrušit členství ",osoby.b.jmeno.get,' ',osoby.b.prijmeni.get,"?");
      del.set(conc('D ',sys('user','abbr'),' ',now)); del.change; form.save;
      dary.reload;
      [ osoby.b.browse_row | osoby.b.browse_init ]
  }}
}
# ---------------------------------------------------------------------- _dpris
form _dpris [,,400,245] {
  view da: table dar
  view do: table osoba { join:"USING(id_osoba)" }
  browse b [10,30,,] { rows:8, qry_rows:1
    show id_d { data:da.id_dar }
    show id_o { data:do.id_osoba }
    show [,,10,] { data:da.ukon, title:'způsob', format:'q*s' }
    show [,,70,] { data:da.castka, title:'částka', format:'rq*s' }
    show [,,70,] { data:da.dat_od, title:'zaplaceno', format:'rq*s' }
    show [,,70,] { expr:"YEAR(da.dat_do)", title:'zapl.do', format:'rq*s' }
    proc onrowclick() { form.load(id_d.get); form_state('n|s','u|z'); }
  }
  # formulář pro úpravu členských příspěvků
  # skryté položky
  field id_o { data:da.id_osoba }
  field ukon { data:da.ukon }
  field del  { data:da.deleted }
  # viditelné položky
  const Lp=270
  field castka [Lp,40,65,] {data:da.castka, help:'výše členského příspěvku', value:'100', format:'xr'}
  label        [Lp,castka.t+-14,,] {title:'částka'}
  field datum  [Lp,75,85,] {type:'date', data:da.dat_od, help:'datum přijetí příspěvku', format:'xRUr'}
  label        [Lp,datum.t+-14,,] {title:'příspěvek přijat dne'}
  field platnost[Lp,110,85,] {type:'date', data:da.dat_do, help:'zaplaceno do', format:'xRUr'}
  label        [Lp,platnost.t+-14,,] {title:'zaplaceno do ...'}
  field pozn   [Lp,145,100,] {data:da.note, help:'poznámka', format:'x'}
  label        [Lp,pozn.t+-14,,] {title:'poznámka'}
  # --------------------------- fixované údaje
  var _dar_fixovan: number
  proc onstart() { _dar_fixovan.set(0) }
  menu { type:'context'
    item fix { title:'zapamatuj fixované údaje'
      proc onclick () { form.option('x:1'); _dar_fixovan.set(1);  form.focus } }
    item unfix { title:'zapomeň fixované údaje'
      proc onclick () { form.option('x:0'); _dar_fixovan.set(0); form.focus } }
  }
  # tlačítka a obslužné procedury
  proc form_init() {
    b.browse_init; form.init; form_state('n','u|z|s'); }
  proc form_state(on,off) {
    form.enable(1,on); form.enable(0,off); }
  proc onchanged () {
    form_state('u|z','n|s') }
  label cmd [Lp,175,110,50] { css:'ae_parm', style:'z-index:1' }
  # -------------------------- Nový
  button [cmd.l+6,cmd.t+3,,] { tag:'n', title:'Nový',  help:'Vložit nový příspěvek',
    proc onclick() {
      form.init(2); form_state('u|z','n|s');
      id_o.set(osoby.b.id_o.get); id_o.change(1); del.set(''); del.change(1);
      ukon.set('p'); ukon.change(1);
      { _dar_fixovan.get | datum.set(now); datum.change(1) };
  }}
  # -------------------------- Uložit
  button [cmd.l+50,cmd.t+3,,] {tag:'u', title:'Uložit',  help:'Uložit změněná data',
    proc onclick() {
      form.same
    | // oprava
      form.key; form.save; form.load;
      [ b.browse_seek; form_state('n|s','u|z') ]
    | // přidání
      id_o.get;
      form.insert; form.load;
      b.raise('onrowclick',b.browse_seek(conc('id_dar=',form.key))); form_state('n|s','u|z');
      [ osoby.b.browse_row | osoby.b.browse_init ]
    | error('chyba při vkládání příspěvku - nenastavený člen')
  }}
  # -------------------------- Zpět
  button [cmd.l+6,cmd.t+25,,] {tag:'z', title:'Zpět',  help:'Neměnit změněná data',
    proc onclick() {
      b.browse_count; form.load(b.id_d.get); form_state('n|s','u|z')
    | form.init; form_state('n','u|z|s')
  }}
  # -------------------------- Smazat
  button [cmd.l+50,cmd.t+25,,] {tag:'s', title:'Smazat',  help:'Smazat tento příspěvek',
    proc onclick() {
      confirm("opravdu smazat příspěvek ",b.castka.get," od ",osoby.b.jmeno.get,' ',osoby.b.prijmeni.get,"?");
      del.set(conc('D ',sys('user','abbr'),' ',now)); del.change; form.save;
      dary.reload
  }}
}
# ---------------------------------------------------------------------- _ddary
form _ddary [,,400,245] {
  # seznam darů
  view da: table dar
  view do: table osoba { join:"USING(id_osoba)" }
  browse b [10,30,,] { rows:8, qry_rows:1
    show id_d { data:da.id_dar }
    show id_o { data:do.id_osoba }
    show [,,10,] { data:da.ukon, title:'způsob', format:'q*s' }
    show castka [,,70,] { data:da.castka, title:'částka', format:'rq*s' }
    show [,,70,] { data:da.dat_od, title:'přijetí', format:'rq*s' }
    show [,,70,] { data:da.dat_do, title:'potvrzení', format:'rq*s' }
    proc onrowclick() { form.load(id_d.get); form_state('n|s','u|z'); }
  }
  # formulář pro úpravu darů
  # skryté položky
  field id_o { data:da.id_osoba }
  field ukon { data:da.ukon }
  field del  { data:da.deleted }
  # viditelné položky
  const Ld=270
  field castka [Ld,40,65,] {data:da.castka, help:'darovaná částka', format:'xr'}
  label        [Ld,castka.t+-14,,] {title:'částka'}
  field datum  [Ld,75,85,] {type:'date', data:da.dat_od, help:'datum přijetí daru', format:'xRUr'}
  label        [Ld,datum.t+-14,,] {title:'dar přijat dne'}
  field potvrz [Ld,110,85,] {type:'date', data:da.dat_do, help:'datum zaslání potvrzení', format:'RUr'}
  label        [Ld,potvrz.t+-14,,] {title:'potvrzení zasláno dne'}
  field pozn   [Ld,145,100,] {data:da.note, help:'poznámka', format:'x'}
  label        [Ld,pozn.t+-14,,] {title:'poznámka'}
  # --------------------------- fixované údaje
  var _dar_fixovan: number
  proc onstart() { _dar_fixovan.set(0) }
  menu { type:'context'
    item fix { title:'zapamatuj fixované údaje'
      proc onclick () { form.option('x:1'); _dar_fixovan.set(1);  form.focus } }
    item unfix { title:'zapomeň fixované údaje'
      proc onclick () { form.option('x:0'); _dar_fixovan.set(0); form.focus } }
  }
  # tlačítka a obslužné procedury
  proc form_init() {
    b.browse_init; form.init; form_state('n','u|z|s'); }
  proc form_state(on,off) {
    form.enable(1,on); form.enable(0,off); }
  proc onchanged () {
    form_state('u|z','n|s') }
  label cmd [Ld,175,110,50] { css:'ae_parm', style:'z-index:1' }
  # -------------------------- Nový
  button [cmd.l+6,cmd.t+3,,] { tag:'n', title:'Nový',  help:'Vložit nový dar',
    proc onclick() {
      form.init(2); form_state('u|z','n|s');
      id_o.set(osoby.b.id_o.get); id_o.change(1); del.set(''); del.change(1);
      ukon.set('d'); ukon.change(1);
      { _dar_fixovan.get | datum.set(now); datum.change(1) };
  }}
  # -------------------------- Uložit
  button [cmd.l+50,cmd.t+3,,] {tag:'u', title:'Uložit',  help:'Uložit změněná data',
    proc onclick() {
      form.same
    | // oprava
      form.key; form.save; form.load;
      [ b.browse_seek; form_state('n|s','u|z') ]
    | // přidání
      id_o.get;
      form.insert; form.load;
      b.raise('onrowclick',b.browse_seek(conc('id_dar=',form.key))); form_state('n|s','u|z');
      [ osoby.b.browse_row | osoby.b.browse_init ]
    | error('chyba při vkládání daru - nenastavený člen')
  }}
  # -------------------------- Zpět
  button [cmd.l+6,cmd.t+25,,] {tag:'z', title:'Zpět',  help:'Neměnit změněná data',
    proc onclick() {
      b.browse_count; form.load(b.id_d.get); form_state('n|s','u|z')
    | form.init; form_state('n','u|z|s')
  }}
  # -------------------------- Smazat
  button [cmd.l+50,cmd.t+25,,] {tag:'s', title:'Smazat',  help:'Smazat tento dar',
    proc onclick() {
      confirm("opravdu smazat dar ",b.castka.get," od ",osoby.b.jmeno.get,' ',osoby.b.prijmeni.get,"?");
      del.set(conc('D ',sys('user','abbr'),' ',now)); del.change; form.save;
      dary.reload
  }}
}

# ---------------------------------------------------------------------- _platby
form _platby {
  // funkce
  proc paruj() {
    var res:object
    res.set(ask('akce_rb_urci',b.vs.get,cconc(b.ss2.get,b.ss2.get,b.ss.get),date2sql(b.datum.get)));
    echo(res.html);
    [ res.id_osoba; id_osoba.set(res.id_osoba); id_osoba.change;
      osoby.b.browse_seek(conc("os.id_osoba=",res.id_osoba)); ];
    [ res.id_duakce; id_duakce.set(res.id_duakce); id_duakce.change ];
    [ or(id_osoba.changed,id_duakce.change); form.save; b.browse_row ];
    [ res.tipy; t.browse_fill(res.tipy) ]
  }
  proc ukaz_osobu() {
    id_osoba.get; osoby.b.browse_seek(conc("os.id_osoba=",id_osoba.get));
  }
  // operace
  button [615,5,,] { title:'automatické párování'
    proc onclick() { paruj }
  }
  // tipy
  label [615,33,,] { title:"tipnutí plátci:" }
  browse t [615,50,,] { rows:3
    show id_osoba
    show jmena [,,100,]
    proc onrowclick() { form.id_osoba.set(id_osoba.get); ukaz_osobu }
  }
  button [615,155,,] { title:'spáruj nastavené'
    proc onclick() {
      form.load; id_osoba.set(osoby.b.id_o.get); id_osoba.change;
      confirm("Opravdu je ",osoby.b.prijmeni.get," ",osoby.b.jmeno.get," plátcem ",b.castka.get,"Kč?");
      form.save; b.browse_row;
  } }
  button [615,180,,] { title:'rozpoj spárované'
    proc onclick() {
      form.load; id_osoba.set(0); id_osoba.change;
      form.save; b.browse_row;
  } }
  // přehled všech plateb
  view p: table platba
  field id_platba {data:platba.id_platba}
  field id_osoba {data:platba.id_osoba}
  field id_duakce {data:platba.id_duakce}
  browse b [0,0,,] { rows:9, qry_rows:1, key_id:'id_platba'
    show id_platba { data:platba.id_platba }
    show id_osoba { data:platba.id_osoba }
    show id_rodina { data:platba.id_rodina }
    show id_duakce { data:platba.id_duakce }
    show ucet   [,,10,] { title:'b', data:platba.ucet, format:'sq=' }
    show datum  [,,65,] { title:'datum', data:platba.datum, format:'s-q*r' }
    show castka [,,60,] { title:'částka', data:platba.castka, format:'sq*r' }
    show poznamka [,,160,] { title:'poznámka', data:platba.poznamka, format:'tsq*' }
    show ucet_nazev [,,140,] { title:'název účtu', data:platba.ucet_nazev, format:'tsq*' }
    show vs [,,75,] { title:'VS', data:platba.vs, format:'sq*r', css_cell:'id_osoba,0:,:zeleny' }
    show ss [,,30,] { title:'SS', data:platba.ss, format:'sq*r', css_cell:'id_duakce,0:,:zeleny' }
    show ss2 [,,30,] { title:'oprava', data:platba.ss2, format:'sq*ru', css_cell:'id_duakce,0:,:zeleny'
      proc onsubmit() { this.save } }
    proc onsubmit() { paruj }
    proc onrowclick() {
      t.browse_init;
      form.key(id_platba.get); form.load;
      id_osoba.get; osoby.b.browse_seek(conc("os.id_osoba=",id_osoba.get));
      evid.reload; dary.reload;
    }
  }
}
/*
# ---------------------------------------------------------------------- _platba
form _platba {
  view p: table platba
  label  [0,9,367,249] { css:'ae_part' }
  label  [8,0,87,] { title:'zpracování platby', css:'ae_part_label' }
  field vs [9,36,75,] { format:'ro' }
  button [80,36,75,] { title:'urči platbu'
    proc onclick() { var res:object
      res.set(ask('akce_urci',vs.get,ss.get));
      info.set(res.html);
    }
  }
  label info [8,60,200,100]
  field ss [9,70,75,] { format:'ro' }
}
# ---------------------------------------------------------------------- _prihlasky
form _prihlasky {
  view ws: table webform
  browse b [0,0,,] { rows:28
    show id { data:ws.id_webform }
    show [,,70,] { data:ws.prijmeni, title:'příjmení', format:'q*s' }
    show [,,60,] { data:ws.jmeno, title:'jméno', format:'q*s' }
    show [,,100,] { data:ws.email, title:'email', format:'q*s' }
    show [,,120,] { data:ws.potvrzeno, title:'potvrzeno', format:'q*s' }
    proc onrowclick() {
      prihlaska.load(id.get);
    }
  }
}
# ---------------------------------------------------------------------- _prihlaska
form _prihlaska {
  var url: text
  view w: table webform
  label [10,14,,] { title:"Přihlašuji se jako *" }
  radio typ_osoby [100,10,201,20] { data:w.typ_osoby, value:'1'
    case [0,0,80,] { title:'jednotlivec', expr:'1' }
    case [80,0,61,] { title:'rodina', expr:'2' }
    case [144,0,48,] { title:'firma', expr:'3' }
  }
  label x [10,40,,] { title:"Osobní údaje" }
  // osobní
  const Tp=60; Tpf=74
  label [9,Tp+0,,] { title:"titul" }
  field [9,Tpf+0,34,]
  label [59,Tp+0,,]    { title:"* jméno" }
  field jmeno [57,Tpf+0,80,] { data:w.jmeno, value:'M' }
  label [147,Tp+0,,] { title:"* příjmení" }
  field prijmeni [148,Tpf+0,115,] { data:w.prijmeni, value:'Š' }
  label [277,Tp+0,,] { title:"narození" }
  field [274,Tpf+0,80,] { data:w.narozeni, type:'date' }
  // adresa
  const Ta=100; Taf=114
  label [9,Ta+0,,] { title:"ulice" }
  field [9,Taf+0,126,] { data:w.ulice }
  label [148,Ta+0,,] { title:"PSČ" }
  field [146,Taf+0,44,] { data:w.psc }
  label [205,Ta+0,,] { title:"obec" }
  field [206,Taf+0,149,] { data:w.obec }
  // kontakt
  const Tk=140; Tkf=154
  label [9,Tk+0,,] { title:"* email" }
  field email [9,Tkf+0,126,] { data:w.email, value:'martin@smidek.eu' }
  label [148,Tk+0,,] { title:"telefon" }
  field [146,Tkf+0,44,]
  // potvrzení
  const Tc=450
  label [9,Tc+0,,] { title:'potvrzeno zpětným mailem' }
  edit msg [9,Tc+14,300,] { data:w.potvrzeno }
}
*/
# ================================================================================================== BackTrace
# --- back_track
panel Ctrack [,,622,564] { title:'Korekce oprav databáze', type:'popup', css:'dialog'
  use CT_track: form _back [0,16,,] { tabindex:20 },
  proc CT_load (id) {
    Ctrack.popup(0,1);
    CT_track.list.browse_load(conc("kde='",CT_tab.get,"' AND klic=",id),"kdy DESC");
    CT_track.list.raise('onrowclick')
  }
  var CT_tab:text
  var CT_fld_id:text
  var CT_fld:object
#   proc CT_track.list.onsubmit () {
#     eq(CT_track.list.op.get,'c','d','p','a');
#     alert('změny v historii nelze vracet - pouze ručně opravit')
#   | eq(CT_tab.get,'chlapi');
#     CT_fld_id.set(CT_track.list.fld.get); CT_fld_id.get;
#     CT_fld.set(ch.part(CT_fld_id.get)); CT_fld.get;
#     ch.part(CT_track.list.fld.get).set(CT_track.list.old.get);
#     CT_fld.change
#   | alert('Položka ',CT_fld_id.get,' není dostupná, vraťte prosím změnu ručně')
#   }
  # ------------------------------------------------------------------------------------------------- BACK
  # id_track,kdy,kdo,kde,klic,zmena:fld,op,val,old
  form _back [,,620,570] {
    browse list [8,8,150,100] { rows:27,
      show kdy [,,100,] { title:'kdy', data:_track.kdy },
      show kdn [,,30,] { title:'kdn', data:_track.kdo },
      show op [,,10,] { title:'?', data:_track.op },
      show tab [,,60,] { title:'tabulka', data:_track.kde },
      show fld [,,60,] { title:'položka', data:_track.fld },
      show old [,,200,] { title:'původní hodnota', data:_track.old, format:'t' },
      show val [,,110,] { title:'změněná hodnota', data:_track.val, format:'t' },
      show id_track [,,0,] { data:_track.id_track },
    },
    button zpet [500,515,80,20] { title:'Zpět'
      proc onclick() { panel.close(0) }
    }
  }
}
#   menu {title:'Administrace evidence',type:'group', skill:'m'
#     item   {title:'zrušení členství, příspěvků a darů'
#       proc onclick (i) {
#         confirm('opravdu?');
#         panel.display(0,'list|evid|p_oso|p_rod|p_cle|p_fir|p_akc|dary|d_cle|d_dar|d_pri');
#         panel.display(1,'inf');
#         info.fill(conc(i.owner.title,' - ',i.title),ask('query',"TRUNCATE dar "));
#       }
#     }
#     item   {title:'vymazání všech členství a příspěvků'
#       proc onclick (i) {
#         confirm('opravdu?');
#         panel.display(0,'list|evid|p_oso|p_rod|p_cle|p_fir|p_akc|dary|d_cle|d_dar|d_pri');
#         panel.display(1,'inf');
#         info.fill(conc(i.owner.title,' - ',i.title),ask('query',"DELETE FROM dar WHERE ukon IN ('a','c','p')"));
#       }
#     }
#     item   {title:'import členů z Googlu'
#       proc onclick (i) {
#         panel.display(0,'list|evid|p_oso|p_rod|p_cle|p_fir|p_akc|dary|d_cle|d_dar|d_pri');
#         panel.display(1,'inf');
#         info.fill(conc(i.owner.title,' - ',i.title),ask('akce_google_cleni'));
#       }
#     }
#   }
#   menu {title:'Klub přátel YMCA Setkání',type:'group'
#     item {title:'přihlášky z www.setkani.org'
#       proc onclick (i) {
#         panel.display(0,'bank|pers'); panel.display(1,'app');
#         info.fill(conc(i.owner.title,' - ',i.title),' ');
#       }
#     }
#     item {title:'import plateb z RB'
#       proc onclick (i) {
#         panel.display(0,'pers|app'); panel.display(1,'bank');
#         info.fill(conc(i.owner.title,' - ',i.title),' ');
#         info.msg.set(ask('akce_rb_platby'));
#  #         info.fill(conc(i.owner.title,' - ',i.title),'staré info');
#         platby.b.browse_load
#       }
#     }
