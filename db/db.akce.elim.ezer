# ------------------------------------------------------------------------------------------------ #
# Eliminace duplicit v tabulkách OSOBA,RODINA modálním dialogem                                    #
#                                                                                                  #
#                                                        (c) 2014 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

const Lr= 5; Lcr= 242
const T = 19; Tr= 170; Ts= Tr+270; Tc= Ts+137
const Tj= 19; To= Tr            // osoby
const Wr= 400; Hr= 451

var mode: text  // osoba | rodina
var virgin= 1, virgin_r= 1, virgin_o= 1

use c: form _cmd [0,462,,]
use r1:form _rodiny [0,5,,] { format:'n' }
use r2:form _rodiny [410,5,,] { format:'n' }
use o1:form _osoby [0,5,,]  { format:'n' }
use o2:form _osoby [410,5,,]  { format:'n' }

proc osoby(ido,jmeno,prijmeni) {
  elim_init;
  elim_osoby(ido,conc(trim(prijmeni),' ',trim(jmeno)));
  panel.modal(60,20);
}
proc rodiny(idr,nazev) {
  elim_init;
  elim_rodiny(idr,nazev);
  panel.modal(60,20);
}

# proc onfirstfocus() { elim_init; onfocus }
# proc onfocus() {
#   switch(mode.get,
#     'osoba', { elim_osoby(0,'') },
#     'rodina', { elim_rodiny(0,'') }
#   )
# }
proc elim_init() {
  virgin.get;
  o1.init_all("ORIGINÁL"); o2.init_all("KOPIE"); o2.get.on_dblclk_copy_to(o1.get);
  r1.init_all("ORIGINÁL"); r2.init_all("KOPIE"); r2.get.on_dblclk_copy_to(r1.get);
  virgin.set(0);
}
proc elim_osoby(ido,nazev) {
  mode.set('osoba');
  [ virgin_o.get; virgin_o.set(0); o1.load_all; o2.load_all ];
  panel.set_attrib('title',"Eliminace kopií osob");
  r1.display(0); o1.display(1);
  r2.display(0); o2.display(1);
  [ ido;
    [ o1.bs._nazev.get_query(0,1); o1.bs._nazev.set_query(1,'',1) ];
    o1.bs.browse_seek(conc("o.id_osoba=",ido)); o1.bs.raise('onrowclick');
    o2.bs._nazev.set_query(1,trim(nazev),1)
  ];
  return(1)
}
proc elim_rodiny(idr,nazev) {
  mode.set('rodina');
  [ virgin_r.get; virgin_r.set(0); r1.load_all; r2.load_all ];
  panel.set_attrib('title',"Eliminace kopií rodin");
  r1.display(1); o1.display(0);
  r2.display(1); o2.display(0);
  [ idr;
    [ r1.br._nazev.get_query(0,1); r1.br._nazev.set_query(1,'',1) ];
    r1.br.browse_seek(conc("r.id_rodina=",idr)); r1.br.raise('onrowclick');
    r2.br._nazev.set_query(1,trim(nazev),1)
  ];
}

# ================================================================================================== _cmd
form _cmd [,,160,30] { css:'ae_parm'
  button [4,4,,] { title:"Ulož a proveď sjednocení", proc onclick() {
    switch(mode.get,
      'osoba', {
        [ o1.same | o1.save; o1.load ];
        confirm("opravdu zrušit ",o2.bs._nazev.get,"/",o2.bs.ido.get,
          " a přidat účasti,dar,... k ",o1.bs._nazev.get,"/",o1.bs.ido.get,"?");
        ask('elim_osoba',o1.bs.ido.get,o2.bs.ido.get);
        o1.bs.browse_row; o1.bs_load(o1.bs.browse_key);
        o2.bs.browse_row; o2.bs_load(o2.bs.browse_key);
      },
      'rodina', {
        [ r1.same | r1.save; r1.load ];
        confirm("opravdu sjednotit rodiny ",r2.br._nazev.get,"/",r2.br.idr.get,
          " a ",r1.br._nazev.get,"/",r1.br.idr.get,"?");
        ask('elim_rodina',r1.br.idr.get,r2.br.idr.get);
        r1.br.browse_row; r1.br_load(r1.br.browse_key);
        r2.br.browse_row; r2.br_load(r2.br.browse_key);
      }
    )
  }}
  button [500,4,,] { title:"osoby <=> rodiny", proc onclick() {
    eq(mode.get,'rodina'); elim_osoby(0,'') | elim_rodiny(0,'');
  }}
  button [610,4,,] { title:"originál <=> kopie", proc onclick() {
    var qry:text, x1:number, x2:number
    switch(mode.get,
      'osoba', {
        x1.set(o1.bs.ido.get); x2.set(o2.bs.ido.get);
        qry.set(o1.bs._nazev.get_query(0,1));
        o1.bs._nazev.set_query(1,o2.bs._nazev.get_query(0,1),1);
        o1.bs.browse_seek(conc("o.id_osoba=",x2)); o1.bs_load(x2);
        o2.bs._nazev.set_query(1,qry,1);
        o2.bs.browse_seek(conc("o.id_osoba=",x1)); o2.bs_load(x1);
      },
      'rodina', {
        x1.set(r1.br.idr.get); x2.set(r2.br.idr.get);
        qry.set(r1.br._nazev.get_query(0,1));
        r1.br._nazev.set_query(1,r2.br._nazev.get_query(0,1),1);
        r1.br.browse_seek(conc("r.id_rodina=",x2)); r1.br_load(x2);
        r2.br._nazev.set_query(1,qry,1);
        r2.br.browse_seek(conc("r.id_rodina=",x1)); r2.br_load(x1);
      }
    )
  }}
}
# ================================================================================================== _osoby
form _osoby [,,Wr,Hr] {
  view o: table osoba
  view t: table tvori
  view r: table rodina { join:"USING(id_rodina)" }
  # --------------------------------------------------  nadpis a orámování
  label     [0,0,Wr,Hr] { style:"border:1px solid olive;background-color:rgba(128,128,0,.1);z-index:0" }
  label cap [0,0,Wr-4,15] { style:"color:white;background-color:olive;padding-left:5px" }
  # --------------------------------------------------  metody
  proc init_all(tit) {
    cap.set(conc("<b>Osoby s příslušností do rodin - ",tit,"</b>"));
    form.init; bs.browse_init; rs.browse_init; }
  proc load_all() { bs.browse_load | form.init  }
  proc bs_load(ido) { var ret: object
    ret.set(ask('akce_data_single',ido));
    o.load(ido);
    o.set_notes(ret.chng,'form_note');
    posledni.set(sql2date(ret.posledni));
    rs.browse_load(conc("id_osoba=",ido));
  }
  # --------------------------------------------------  seznam osob
  browse bs [Lr,Tj,,] { rows:6, qry_rows:1, css_rows:'barva,0:neucast'
    show ido [,,40,] { title:'osoba', data:o.id_osoba, format:'sr' }
    show barva { expr:"o.deleted=''" }
    show _nazev [,, 95,] { title:'jmeno', format:'tsq*', expr:"CONCAT(o.prijmeni,' ',o.jmeno)" }
    proc onrowclick() { form.enable(barva.get,'o'); bs_load(ido.get);  }
    menu { type:'context'
      item { title:'obnovit smazanou osobu', proc onclick () {
        ask('elim_recovery_osoba',ido.get); bs.browse_row; bs.raise('onrowclick')
      | warning("POZOR - ",_nazev.get," - osoba nebyla smazána!");
      }}
    }
  }
  # --------------------------------------------------  seznam rodin
  browse rs [Lr+180,Tj,,] { rows:3
    show idr [,,40,] { title:'rodina', data:t.id_rodina, format:'r' }
    show { data:t.id_tvori }
    show nazev [,,95,] { title:'název', data:r.nazev }
    show [,, 20,] { title:'role', data:t.role }
    menu { type:'context'
      item { title:'přejít na rodinu', proc onclick () { elim_rodiny(idr.get,nazev.get) }}
    }
  }
  # --------------------------------------------------  poslední akce
  label          [Lr+180,Tj+94,153,28]  {css:'ae_part' }
  field posledni [Lr+257,Tj+98,70,]    {format:'r', title:'posl.akce'}
  # --------------------------------------------------  údaje osoby
  label          [Lr+0,To+9,390,267] { css:'ae_part' }
  field ido { data:o.id_osoba }
  field prijmeni [Lr+5,To+30,89,]    {tag:'o', data:o.prijmeni, title:'^příjmení', help:'příjmení'}
  field rodne    [Lr+5,To+64,89,]    {tag:'o', data:o.rodne, help:'rodné příjmení', title:'^rodné příjmení'}
  button         [Lr+97,To+64,,]     {tag:'o', type:'html', title:'[fa-angle-double-up]', proc onclick() {
    bs._nazev.set_query(1,conc(rodne.get,' ',jmeno.get),1); }}
  field jmeno    [Lr+109,To+30,79,]  {tag:'o', data:o.jmeno, title:'^jméno'}
  radio sex [Lr+200,To+25,50,35]     {tag:'o', data:o.sex, value:'1'
    case [0,2,50,]  { title:'muž',  expr:'1' }
    case [0,17,50,] { title:'žena', expr:'2' } }
  field narozeni [Lr+255,To+32,85,]   {tag:'o', type:'date', data:o.narozeni, format:'rR:e', title:'^narození'}
  field rc_xxxx  [Lr+345,To+32,37,]   {tag:'o', data:o.rc_xxxx, format:'r:e', title:'^nnnn rč'}
  field iniciace [Lr+345,To+64,37,]   {tag:'o', data:o.iniciace, format:'r:e', title:'mrop'}
  field ulice    [Lr+5,To+102,162,]   {tag:'o', data:o.ulice, title:'^ulice'}
  field psc      [Lr+179,To+102,40,]  {tag:'o', data:o.psc, title:'^psč'}
  field obec     [Lr+229,To+102,131,] {tag:'o', data:o.obec, title:'^obec'}
  field telefon  [Lr+51,To+135,212,]  {tag:'o', type:'list', data:o.telefon, title:'telefon'}
  select dieta   [Lr+300,To+135,82,]  {tag:'o', type:'map', data:o.dieta, options:ms_akce_dieta.zkratka, title:'dieta' }
  field email    [Lr+52,To+168,212,]  {tag:'o', type:'list', data:o.email, title:'e-mail'}
  check nomail   [Lr+268,To+165,121,] {tag:'o', title:"nechce informace", data:o.nomail,
    help:"nepoužívat mailovou adresu pro rozesílání hromadných nabídek a informací"
  }
  edit  note     [Lr+52,To+200,329,60] {tag:'o', data:o.note, title:'pozn.'}
  label idd2     [Lr+4,To+260,40,]     {tag:'o', format:'r' }
}
# ================================================================================================== _rodiny
form _rodiny [,,Wr,Hr] {
  view r: table rodina
  view rt: table tvori  { join:"USING(id_rodina)" }
  view rto: table osoba  { join:"USING(id_osoba)" }
  # --------------------------------------------------  metody
  proc init_all(tit) {
    cap.set(conc("<b>Rodiny - ",tit,"</b>"));
    form.init; br.browse_init; bro.browse_init;  }
  proc load_all() { br.browse_load | form.init }
  proc corr_id2(idd) { var ret:object
    ret.set(ask('data_eli_corr_id2',idd,'o',bro.idt.get));
    [ ret.err; warning(ret.err) ];
  }
  # br
  proc br_load(idr) { var ret: object
    ret.set(ask('akce_data_rodina',idr));
    r.load(idr); idd1.set(idr);
    r.set_notes(ret.chng,'form_note');
  }
  # bro
  proc bro_list(idr) { bro.browse_load(conc("id_rodina=",idr)); }
  # --------------------------------------------------  nadpis a orámování
  label     [0,0,Wr,Hr] { style:"border:1px solid green;background-color:rgba(0,128,0,.1);z-index:0" }
  label cap [0,0,Wr-4,15] { style:"color:white;background-color:green;padding-left:5px" }
  # --------------------------------------------------  seznam rodin
  browse br [Lr+0,19,,] { rows:6, qry_rows:1, css_rows:'barva,0:neucast'
    show idr [,,40,] { title:'id_rodina', data:r.id_rodina, format:'sr' }
    show barva { expr:"r.deleted=''" }
    show _nazev [,, 80,] { title:'rodina', format:'ts+q*', data:r.nazev }
    proc onrowclick() { form.enable(barva.get,'r'); br_load(idr.get); bro_list(idr.get) }
    menu { type:'context'
      item { title:'obnovit smazanou rodinu', proc onclick () {
        ask('elim_recovery_rodina',idr.get); br.browse_row; br.raise('onrowclick')
      | warning("POZOR - ",_nazev.get," - rodina nebyla smazána!");
      }}
    }
  }
  # --------------------------------------------------  seznam členů
  browse bro [Lr+180,19,,] { rows:6
    show idr { data:r.id_rodina}
    show idt { data:rt.id_tvori}
    show ido [,,40,] { title:'osoba', data:rto.id_osoba, format:'rq=s+'  }
    show [,, 95,] { title:'jmeno', format:'tsq*', expr:"CONCAT(rto.jmeno,' ',rto.prijmeni)" }
    show nazev {expr:"CONCAT(rto.prijmeni,' ',rto.jmeno)" }
    show [,, 20,] { title:'role', format:'rsq*', data:rt.role }
    menu { type:'context'
      item { title:'přejít na osobu', proc onclick () { elim_osoby(ido.get,nazev.get) }}
    }
  }
  # --------------------------------------------------  údaje rodiny
  label          [Lr+0,Tr+9,390,254] {css:'ae_part' }
  field nazev    [Lr+4,Tr+30,100,]   {tag:'r', data:r.nazev, help:'příjmení', title:'^společné příjmení'}
  field _spolu   [Lr+149,Tr+32,23,]  {tag:'r', format:'o', value:'?'}
  field svatba   [Lr+178,Tr+31,36,]  {tag:'r', data:r.svatba, title:'^svatba'}
  field ulice_r  [Lr+4,Tr+78,162,]   {tag:'r', data:r.ulice, title:'^ulice'}
  field psc_r    [Lr+179,Tr+78,39,]  {tag:'r', data:r.psc, title:'^psč'}
  field obec_r   [Lr+255,Tr+78,124,] {tag:'r', data:r.obec, title:'^obec'}
  field datsvatba[Lr+236,Tr+31,63,]  {tag:'r', data:r.datsvatba}
  field spz      [Lr+313,Tr+31,62,]  {tag:'r', data:r.spz, title:'^SPZ'}
  field telefony [Lr+51,Tr+115,212,] {tag:'r', type:'list', data:r.telefony, par:°{delim:',|;'}, title:'telefon' }
  field emaily   [Lr+52,Tr+150,330,] {tag:'r', type:'list', data:r.emaily, par:°{delim:',|;'}, title:'e-mail'}
  edit  note    [Lr+52,Tr+186,329,60]{tag:'r', data:r.note, title:'poznámka'}
  label idd1     [Lr+4,Tr+246,40,]   {format:'r' }
}
