# ------------------------------------------------------------------------------------------------ #
# Karta pro správu účastníků vybrané akce - "retro" frontend (a la Seyův program)                  #
#                                                                                                  #
# Ans(w)er/Ezer                                     (c) 2007-2011 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #

var the_duakce: number
var the_pobyt: number

proc onstart() {
  header.fill(the_title.get);
  reload(0);
  page.tags(page.evd,'z','h|o');
}

proc init_ucast() {
  header.fill(the_title.get);
  reload(0)
}

use header:form _header  [  4,0,,]
use u:     form _ucast   [  6,40,,]
use page:  form _page    [400,10,,]
# podkarta evidence
use evid:  form _evidence[400,10,,]
use rod:   form _rodina  [400,0,,]
use muz:   form _muz     [400,0,,]
use zen:   form _zena    [400,0,,]
use pob:   form _pobyt   [400,0,,]
use cmd:   form _cmd     [400,0,,]

proc reload(id_pobyt) {
  var id_duakce: number
  cmd.b_display(1);
  id_duakce.set(ask('select','id_duakce','ms_akce',conc('id_akce=',the_akce.get)));
  the_duakce.set(id_duakce);
  [ u.b.browse_load(conc("p.id_akce=",id_duakce),'','','','','',conc('SET @akce:=',id_duakce));
    u.b.browse_focus;
    { id_pobyt; u.b.raise('onrowclick',id_pobyt)
    | u.b.raise('onrowclick') } ]
}
var pall: object
proc pary_add(p,i) {  // používají panely PridaniJmenem a PridaniAkce
  var pk: number
  var m: number
  var z: number
  var pou: number
  p.chck.get;
  pall.set(p.all.get); m.set(pall.get('muz')); z.set(pall.get('zen'));
  // zjištění možné hodnoty 'pouze'
  pou.set(pob.pouze.key);
  [ eq(pou,0); { m;z | warning('chybí osobní údaje jednoho z manželů'); pou.set(cconc(m,1,2))}];
  [ eq(pou,1); { m   | warning('chybí osobní údaje muže, na akci přidána jen žena'); pou.set(2)}];
  [ eq(pou,2); { z   | warning('chybí osobní údaje ženy, na akci přidán jen muž'); pou.set(1)}];
  // přidání nového pobytu
  pk.set(pobyt.insert_record(object('id_akce',the_duakce.get,'pouze',pou)));
  [ m.get; spolu.insert_record(object('id_osoba',m.get,'id_pobyt',pk.get)) ];
  [ z.get; spolu.insert_record(object('id_osoba',z.get,'id_pobyt',pk.get)) ];
  reload(pk.get);
}
# -------------------------------------------------------------------------------------------------- _header
form _header [,,380,50] {
  proc fill(x) {
    head.set(conc("<div class='karta'>",x,"</div>"))
  }
  label head [0,2,*,50]  { title:'' }
}
# -------------------------------------------------------------------------------------------------- _page
form _page { //[,,*,500] {
  # --------------------------- záložky
  proc tags(a,on,off) {
    form.set_css('ae_butt_off','ae_butt_on','p');
    a.set_css('ae_butt_on','ae_butt_off');
#     form.display(1,on); form.display(0,off);
  }
  label evd [ 12,0,120,20] {tag:'p', title:'<b>Evidenční karta</b>', format:'c', css:'ae_butt_on'
    proc onclick() { tags(this,'z','h|o');
      evid.display(1); cmd.display(1);
      rod.display(1); muz.display(1); zen.display(1); pob.display(1);
    }
  }
  label plt [152,0,120,20] {tag:'p', title:'<b>Platba za akci</b>', format:'c',
    proc onclick() { tags(this,'h','z|o');
      evid.display(0); cmd.display(0);
      rod.display(0); muz.display(0); zen.display(0); pob.display(0);
    }
  }
  label jin [292,0,120,20] {tag:'p', title:'<b>Přehled aktivit</b>', format:'c',
    proc onclick() { tags(this,'o','z|h');
      evid.display(0); cmd.display(0);
      rod.display(0); muz.display(0); zen.display(0); pob.display(0);
    }
  }
  label [0,16,582,530] { css:'ae_work'}
}
# -------------------------------------------------------------------------------------------------- _evidence
form _evidence {
  # --------------------------- kontextové_menu
  menu { type:'context'
    item back { title:'ukázat všechny změny'
      proc onclick () { BackTrace.back_load(pob.key,muz.key,zen.key,rod.key) }
  } }
  label [  1,17,723,495] {title:"<img src='img/ms2.png'>" }
  label [  6,20,100,] {title:'Příjmení páru'}
  label [118,20,100,] {title:'Jméno muže'}
  label [231,20,100,] {title:'Jméno ženy'}
  label [342,20,26,] {title:'Muž'}
  label [370,20,11,] {title:'Žena'}
  label [400,20,28,] {title:'Spolu'}
  label [434,20,38,] {title:'Svatba'}
  label [481,20,38,] {title:'Funkce'}
  label [537,20,38,] {title:'Skup.'}
  label [6,54,100,] {title:'Ulice'}
  label [142,54,36,] {title:'Psč'}
  label [191,54,50,] {title:'Obec'}
  label [  6, 94,37,] {title:'Telefon'}
  label [  6,118,33,] {title:'E-mail'}
  label [6,139,33,] {title:'Poznámka'}
  label [512,139,68,] {title:'Datum svatby'}
  label [511,174,38,] {title:'Spz'}
  label [50,215,26,] {title:'Muž'}
  label [215,215,31,] {title:'Žena'}
  label [  6,237,50,] {title:'Narození'}
  label [151,237,17,] {title:'/rč:'}
  label [314,237,17,] {title:'/rč:'}
  label [  6,258,44,] {title:'Církev'}
  label [  6,279,44,] {title:'Vzdělání'}
  label [  6,300,44,] {title:'Zaměst.'}
  label [6,321,44,] {title:'Zájmy'}
  label [  6,342,44,] {title:'Jazyk'}
  label [  6,363,44,] {title:'Aktivita'}
  label [3,431,100,] {title:'Lůž. Při. Dnů Koč'}
  label [134,431,100,] {title:'Svp  Platba'}
  label [209,431,100,] {title:'Způsob platby'}
  label [300,431,100,] {title:'Dne'}
  label [391,431,100,] {title:'Budova Pokoj'}
  label [213,466,100,] {title:'Poznámka k akci'}
}
# -------------------------------------------------------------------------------------------------- _rodina
form _rodina {
  field nazev       [4,44,100,] {data:rodina.nazev, help:'příjmení'}
  field _spolu      [403,45,23,] {format:'o', value:'?'}
  field svatba      [432,44,36,] {data:rodina.svatba}
  field ulice       [4,77,126,] {data:rodina.ulice}
  field psc         [140,77,39,] {data:rodina.psc}
  field obec        [189,77,114,] {data:rodina.obec}
  field telefony    [45,102,525,] {data:rodina.telefony}
  field emaily      [45,127,525,] {data:rodina.emaily}
  edit  note        [5,163,491,52] {data:rodina.note}
  field datsvatba   [509,163,63,] {data:rodina.datsvatba}
  field spz         [510,198,62,] {data:rodina.spz}
}
# -------------------------------------------------------------------------------------------------- _muz
form _muz {
  field id_spolu_m  // id_spolu nebo 0, pokud není na akci
  field jmeno_m     [117,45,100,] {data:osoba.jmeno}
  field _vek_m      [345,46,19,] {format:'o', value:'?'}
  field prijmeni_m  [94,224,108,] {data:osoba.prijmeni}
  field narozeni_m  [51,246,93,] {type:'date', data:osoba.narozeni, sql_pipe:'sql_date1'}
  field rc_xxxx_m   [169,245,32,] {data:osoba.rc_xxxx, format:'r'}
  select cirkev_m   [51,267,152,] {type:'map', data:osoba.cirkev, options:ms_akce_cirkev.zkratka}
  select vzdelani_m [51,288,152,] {type:'map', data:osoba.vzdelani, options:ms_akce_vzdelani.zkratka}
  field zamest_m    [51,309,152,] {data:osoba.zamest}
  field zajmy_m     [51,330,152,] {data:osoba.zajmy}
  field jazyk_m     [51,351,152,] {data:osoba.jazyk}
  field aktivita_m  [51,372,152,] {data:osoba.aktivita}
  select clen_m     [79,394,58,] {type:'map', data:osoba.clen, options:ms_akce_clen.zkratka}
}
# -------------------------------------------------------------------------------------------------- _zena
form _zena {
  field id_spolu_z  // id_spolu nebo 0, pokud není na akci
  field jmeno_z     [229,45,100,] {data:osoba.jmeno}
  field _vek_z      [373,46,20,] {format:'o', value:'?'}
  field prijmeni_z  [257,224,108,] {data:osoba.prijmeni}
  field narozeni_z  [213,246,93,] {type:'date', data:osoba.narozeni, sql_pipe:'sql_date1'}
  field rc_xxxx_z   [332,245,32,] {data:osoba.rc_xxxx, format:'r'}
  select cirkev_z   [213,267,152,] {type:'map', data:osoba.cirkev, options:ms_akce_cirkev.zkratka}
  select vzdelani_z [213,288,152,] {type:'map', data:osoba.vzdelani, options:ms_akce_vzdelani.zkratka}
  field zamest_z    [213,309,152,] {data:osoba.zamest}
  field zajmy_z     [213,330,152,] {data:osoba.zajmy}
  field jazyk_z     [213,351,152,] {data:osoba.jazyk}
  field aktivita_z  [213,372,152,] {data:osoba.aktivita}
  select clen_z     [277,394,57,] {type:'map', data:osoba.clen, options:ms_akce_clen.zkratka}
}
# -------------------------------------------------------------------------------------------------- _pobyt
form _pobyt {
  field id_akce                  {data:pobyt.id_akce}
  select funkce     [480,45,50,] {type:'map', data:pobyt.funkce, options:ms_akce_funkce.zkratka }
  field skupina     [535,45,35,] {data:pobyt.skupina, format:'r'}
  select pouze      [162,395,96,] {type:'map', data:pobyt.pouze, options:ms_akce_pouze.zkratka
    proc onchange() {
      { eq(pouze.key,0,1); muz.get.display(1) | muz.get.display(0) };
      { eq(pouze.key,0,2); zen.get.display(1) | zen.get.display(0) };
  }}
  field luzka       [10,456,11,] {data:pobyt.luzka}
  field pristylky   [30,456,11,] {data:pobyt.pristylky}
  field pocetdnu    [51,456,11,] {data:pobyt.pocetdnu}
  field kocarek     [71,456,11,] {data:pobyt.kocarek}
  field strava_cel  [94,456,11,] {data:pobyt.strava_cel}
  field strava_pol  [112,456,11,] {data:pobyt.strava_pol}
  field svp         [136,456,11,] {data:pobyt.svp}
  field platba      [154,456,50,] {data:pobyt.platba}
  select zpusobplat [211,456,86,] {type:'map', data:pobyt.zpusobplat, options:ms_akce_platba.zkratka, format:'u'}
  field datplatby   [302,456,84,] {type:'date', data:pobyt.datplatby}
  field budova      [393,456,32,] {data:pobyt.budova}
  field pokoj       [433,456,40,] {data:pobyt.pokoj}
  field k_poznamka  [214,491,359,] {data:pobyt.poznamka}
  field platba1     [10,491,47,] {data:pobyt.platba1}
  field platba2     [60,491,47,] {data:pobyt.platba2}
  field platba3     [110,491,47,] {data:pobyt.platba3}
  field platba4     [160,491,47,] {data:pobyt.platba4}
  // skupinka
  browse s [375,335,,] {type:'smart', rows:4
    show id_pobyt
    show jmeno [,,170,] {title:'Skupinka'}
    proc onsubmit () {
      u.b.raise('onrowclick',id_pobyt.get);
    }
  }
  // děti
  browse d [375,224,,] {type:'smart', rows:4, css_rows:'id_spolu,0:nic,:nakursu'
    show id_osoba
    show id_spolu
    show jmeno    [,,70,] { title:'Děti' }
    show vek      [,,20,] { title:'věk', js_pipe:'roku', format:'r' }
    show narozeni
    show rc_xxxx
    show note [,,80,] { title:'poznámka' }
    proc onsubmit() {
      copy_by_name(d,Dite.dite);
      Dite.key_dite.set(id_osoba.get); Dite.key_spolu.set(id_spolu.get);
      Dite.modal(260,240)
    }
  }
}
# -------------------------------------------------------------------------------------------------- _ucast
form _ucast [,,400,] { css:'ds_form'
  view p: table pobyt
  view a: table akce{ join:'ON a.id_duakce=p.id_akce' }
  view s: table spolu  { join:'USING(id_pobyt)' }
  view o: table osoba  { join:'ON s.id_osoba=o.id_osoba' }
  view t: table tvori  { join_type:'LEFT', join:'ON t.id_osoba=o.id_osoba' }
  view r: table rodina { join_type:'LEFT', join:'USING(id_rodina)' }
  view tx:table tvori  { join_type:'LEFT', join:'USING(id_rodina)' }
  view ox:table osoba  { join:'ON tx.id_osoba=ox.id_osoba' }
  // seznam účastníků
  browse b [0,0,,] {type:'smart', buf_rows:120, rows:27, qry_rows:1, group_by:'id_pobyt',
    optimize:°{qry:'noseek'}
#     proc onclick() {
#       xfunkce.width; xfunkce.width(0);  skupina.width(33); _jmena.width(89);
#     | skupina.width; xfunkce.width(0);  skupina.width(0);  _jmena.width(123);
#     | _jmena.width(89); xfunkce.width(33);  skupina.width(0);
#     }
    // klíče
    show key_pobyt {data:p.id_pobyt}
    show key_spolu {data:s.id_spolu}
    show key_osoba {data:o.id_osoba}
    show key_tvori {data:t.id_tvori}
    show key_rodina {data:r.id_rodina}
    // akce
    show dnu      {expr:"DATEDIFF(a.datum_do,a.datum_od)+1"}
    show datum_od {data:a.datum_od, sql_pipe:'' }
    // zobrazení
    show _nazev [,,100,] { title:'rodina', format:'s+q*',
      expr:"CASE WHEN pouze=1 THEN GROUP_CONCAT(DISTINCT IF(t.role='a',o.prijmeni,'') SEPARATOR '')
                 WHEN pouze=2 THEN GROUP_CONCAT(DISTINCT IF(t.role='b',o.prijmeni,'') SEPARATOR '')
            ELSE r.nazev END" }
    show _jmena [,,180,] { title:'jméno/a', format:'ts',
      expr:"GROUP_CONCAT(DISTINCT IF(pouze=1 AND t.role='b','',IF(pouze=2 AND t.role='a','',o.jmeno)) ORDER BY t.role SEPARATOR ' ')" }
    show xfunkce [,,40,] { title:'fce', data:p.funkce, format:'rqs', map_pipe:ms_akce_funkce.zkratka}
    show skupina [,,30,] { title:'sk.', data:p.skupina, format:'rqs'}
    #show dluh    [,,40,] { title:'dluh', expr:"0", format:'rqs'}
    // muž - načte se, i když není na akci
    show id_spolu_m { expr:"GROUP_CONCAT(DISTINCT IF(t.role='a',s.id_spolu,'') SEPARATOR '')" }
    show id_m       { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.id_osoba,'') SEPARATOR '')" }
    show jmeno_m    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.jmeno,'')    SEPARATOR '')" }
    show prijmeni_m { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.prijmeni,'') SEPARATOR '')" }
    show narozeni_m { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.narozeni,'') SEPARATOR '')", sql_pipe:'sql_date1' }
    show rc_xxxx_m  { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.rc_xxxx,'')  SEPARATOR '')" }
    show vzdelani_m { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.vzdelani,'') SEPARATOR '')" }
    show zamest_m   { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.zamest,'')   SEPARATOR '')" }
    show zajmy_m    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.zajmy,'')    SEPARATOR '')" }
    show jazyk_m    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.jazyk,'')    SEPARATOR '')" }
    show aktivita_m { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.aktivita,'') SEPARATOR '')" }
    show cirkev_m   { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.cirkev,'')   SEPARATOR '')" }
    show clen_m     { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='a',ox.clen,'')     SEPARATOR '')" }
    // žena - načte se, i když není na akci
    show id_spolu_z { expr:"GROUP_CONCAT(DISTINCT IF(t.role='b',s.id_spolu,'') SEPARATOR '')" }
    show id_z       { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.id_osoba,'') SEPARATOR '')" }
    show jmeno_z    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.jmeno,'')    SEPARATOR '')" }
    show prijmeni_z { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.prijmeni,'') SEPARATOR '')" }
    show narozeni_z { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.narozeni,'') SEPARATOR '')", sql_pipe:'sql_date1' }
    show rc_xxxx_z  { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.rc_xxxx,'')  SEPARATOR '')" }
    show vzdelani_z { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.vzdelani,'') SEPARATOR '')" }
    show zamest_z   { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.zamest,'')   SEPARATOR '')" }
    show zajmy_z    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.zajmy,'')    SEPARATOR '')" }
    show jazyk_z    { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.jazyk,'')    SEPARATOR '')" }
    show aktivita_z { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.aktivita,'') SEPARATOR '')" }
    show cirkev_z   { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.cirkev,'')   SEPARATOR '')" }
    show clen_z     { expr:"GROUP_CONCAT(DISTINCT IF(tx.role='b',ox.clen,'')     SEPARATOR '')" }
    // rodina
    show nazev      { data:r.nazev }
    show svatba     { data:r.svatba}
    show ulice      { data:r.ulice}
    show psc        { data:r.psc}
    show obec       { data:r.obec}
    show telefony   { data:r.telefony}
    show emaily     { data:r.emaily}
    show note       { data:r.note}
    show datsvatba  { data:r.datsvatba}
    show spz        { data:r.spz}
    // skupinka
    show skup       { expr:"IF(p.skupina=0,'',(
        SELECT GROUP_CONCAT(DISTINCT pobyt.id_pobyt,'|',nazev SEPARATOR '|')
        FROM rodina
        JOIN tvori ON rodina.id_rodina=tvori.id_rodina
        JOIN osoba ON osoba.id_osoba=tvori.id_osoba
        JOIN spolu ON spolu.id_osoba=osoba.id_osoba
        JOIN pobyt ON pobyt.id_pobyt=spolu.id_pobyt
        WHERE pobyt.id_akce=@akce AND skupina=p.skupina))" }
    // všechny děti: (id_osoba, jsou na akci?id_spolu:0, jmeno, narozeni, note)
    show deti       {expr:"(
        SELECT GROUP_CONCAT(CONCAT(osoba.id_osoba,'|',
          (IFNULL((SELECT id_spolu FROM osoba LEFT JOIN spolu USING(id_osoba)
                   WHERE id_pobyt=p.id_pobyt AND id_osoba=tvori.id_osoba),0))
           ,'|',jmeno,'|',narozeni,'|',narozeni,'|',rc_xxxx,'|',note)
           ORDER BY osoba.id_osoba DESC SEPARATOR '|')
        FROM osoba JOIN tvori USING(id_osoba)
        WHERE id_rodina=t.id_rodina AND role='d')"}
    // pobyt
    show funkce     { data:p.funkce}
    show luzka      { data:p.luzka}
    show pristylky  { data:p.pristylky}
    show pocetdnu   { data:p.pocetdnu}
    show kocarek    { data:p.kocarek}
    show strava_cel { data:p.strava_cel}
    show strava_pol { data:p.strava_pol}
    show cstrava_cel{ data:p.cstrava_cel}
    show cstrava_pol{ data:p.cstrava_pol}
    show svp        { data:p.svp}
    show platba     { data:p.platba}
    show platba1    { data:p.platba1}
    show platba2    { data:p.platba2}
    show platba3    { data:p.platba3}
    show platba4    { data:p.platba4}
    show zpusobplat { data:p.zpusobplat}
    show datplatby  { data:p.datplatby}
    show budova     { data:p.budova}
    show pokoj      { data:p.pokoj}
    show k_poznamka { data:p.poznamka}
    show pouze      { data:p.pouze}
    // změna
    proc onrowclick() {
      // ochrana proti neuložené změně
      rod.same; pob.same; muz.same; zen.same;
      // přechod na jiný pobyt
      the_pobyt.set(key_pobyt.get);
      // načtou se všichni, ale ukážou se jen účastníci akce (pouze: 0=oba, 1=muž, 2=žena)
      copy_by_name(b,muz.get); muz.key(id_m.get); muz.get.display(eq(pouze.get,0,1));
      copy_by_name(b,zen.get); zen.key(id_z.get); zen.get.display(eq(pouze.get,0,2));
      copy_by_name(b,rod.get); rod.key(key_rodina.get);
      copy_by_name(b,pob.get); pob.key(key_pobyt.get);
      // počítané položky
      muz._vek_m.set(roku(narozeni_m.get));
      zen._vek_z.set(roku(narozeni_z.get));
      rod._spolu.set(cconc(svatba.get,roku(datsvatba.get,svatba.get),' '));
      pob.d.browse_fill(deti.get);
      pob.s.browse_fill(skup.get);
      // obarvení tlačítka [Str.pol]
      { or(cstrava_cel.get,cstrava_pol.get); cmd.stravy.set_css('cervena','cerna')
      | cmd.stravy.set_css('cerna','cervena') };
    | // varování při pokusu neuložit změny
      warning('neuložené změny'); u.b.raise('onrowclick',the_pobyt.get)
    }
  }
}
# -------------------------------------------------------------------------------------------------- _cmd
form _cmd [,,200,] { css:'ds_form'
  // příkazy
  button stravy     [89,437,37,] {title:'Str Po', style:'font-size:10px;height:19px;width:40px'
    proc onclick() {
      Strava.dnu.set(u.b.dnu.get); // pokud jsou definovány výjimky z pravidelné stravy
      lt(Strava.dnu.get,15);       // 15 je maximálně možný počet řádků vyjímek ze stravy
      Strava.modal(240,50)
  } }
  // Nový
  button [6,525,,] {title:'Nový',
    help:'Vytvoření nového jednotlivce (na akce muž) nebo páru (na akci oba) a vložení jako účastníka'
    proc onclick() {   // založení páru a jeho zařazení na akci
      var a_pouze: number
      a_pouze.set(u.b.pouze.get);
      the_pobyt.set(0);
      muz.init(1); zen.init(1); pob.init(1); rod.init(1);
      b_display(0);
      // naplnění základních (strukturotvorných) položek pro pár nebo jednotlivce podle předchozího
      pob.id_akce.set(the_duakce.get); pob.id_akce.change;
      rod.nazev.set(''); rod.nazev.change;
      pob.pouze.key(a_pouze.get); pob.pouze.change;
  } }
  // Zpět a Uložit
  label  [478,520,98,30] { css:'ae_parm' }
  button [484,525,,] {title:'Zpět',  help:'Neměnit změněná data', proc onclick() {
      #echo('ZPĚT: tab_act=',u.b.browse_active,', key=',u.b.browse_key,', nazev=',u.b.nazev.get);
    // potlačení ochrany proti neuložené změně
    rod.plain; pob.plain; muz.plain; zen.plain;
    b_display(1);
    reload(u.b.browse_key);
  } }
  button [530,525,,] {title:'Uložit',  help:'Uložit změněná data',
    proc onclick() {
      var ok: number
      the_pobyt.get;
      // oprava
      [ rod.same | rod.save; rod.plain ];
      [ pob.same
      | eq(u.b.pouze.get,pob.pouze.key);
        pob.save; pob.plain
      | // došlo ke změně počtu dospělých účastníků - nutno opravit spojku 'spolu'
        [ eq(u.b.pouze.get,2); eq(pob.pouze.key,1,0);   // +m
          spolu.insert_record(object('id_osoba',muz.key,'id_pobyt',the_pobyt.get)) ];
        [ eq(u.b.pouze.get,1); eq(pob.pouze.key,2,0);   // +z
          spolu.insert_record(object('id_osoba',zen.key,'id_pobyt',the_pobyt.get)) ];
        [ eq(u.b.pouze.get,0,1); eq(pob.pouze.key,2);   // -m
          spolu.delete_record(conc('id_spolu=',muz.id_spolu_m.get)) ];
        [ eq(u.b.pouze.get,0,2); eq(pob.pouze.key,1);   // -z
          spolu.delete_record(conc('id_spolu=',zen.id_spolu_z.get)) ];
        pob.save; pob.plain
      ];
      [ muz.same | osoba_ulozit(muz,'a',rod.key) ];
      [ zen.same | osoba_ulozit(zen,'b',rod.key) ];
      reload(the_pobyt.get);
    | // přidání - kontroly postačitelnosti údajů
      eq(pob.pouze.key,0,1); muz.same;
      warning("nelze uložit: chybí jakýkoliv údaj o muži - účastníkovi akce");
    | eq(pob.pouze.key,0,2); zen.same;
      warning("nelze uložit: chybí jakýkoliv údaj o ženě - účastnici akce");
    | eq(pob.pouze.key,0); eq(rod.nazev.get,'');
      warning("nelze uložit: chybí společný název rodiny");
    | // vlastní přidání
      rod.insert; pob.insert; the_pobyt.set(pob.key);
      osoba_ulozit(muz,'a',rod.key);
      osoba_ulozit(zen,'b',rod.key);
      rod.plain; pob.plain;
      reload(the_pobyt.get);
      b_display(1);
    }
    proc osoba_ulozit(frm,role,rod_key) {
      frm.get.same
    | frm.get.key; frm.get.save; frm.get.plain
    | frm.get.insert;
      tvori.insert_record(object('id_osoba',frm.get.key,'id_rodina',rod_key,'role',role));
      spolu.insert_record(object('id_osoba',frm.get.key,'id_pobyt',the_pobyt.get));
      frm.get.plain
    }
  }
  // PŘIDAT z AKCE
  button pridat_a   [69,525,,] {title:'Přidat: z akce', help:'Přidání účastníky jiných akcí'
    proc onclick() {
      PridaniAkce.modal(240,50)
  } }
  // PŘIDAT z JEDNOTLIVCU
  button pridat_1   [155,525,,] {title:'... jménem', help:'Přidání účastníka podle jména'
    proc onclick() {
      PridaniJmenem1.modal(240,50)
  } }
  // PŘIDAT z PARU
  button pridat_2   [226,525,,] {title:'... pár', help:'Přidání manželského páru podle jména'
    proc onclick() {
      PridaniJmenem2.modal(240,50)
  } }
  // VYŘADIT a VYMAZAT
  button [357,525,,] {title:'Vyřadit', help:'Vyřazení účastníka nebo páru z účasti na akci'
    proc onclick() {
      confirm("Opravdu vyřadit ",u.b._nazev.get,' (',u.b._jmena.get,") z této akce?");
      spolu.delete_record(conc('id_pobyt=',u.b.key_pobyt.get),9999);
      pobyt.delete_record(conc('id_pobyt=',u.b.key_pobyt.get));
      reload(0);
  } }
  button [409,525,,] {title:'Vymazat', help:'Vymazání informací o páru z evidence'
    proc onclick() {
      confirm("Opravdu vymazat z evidence ",u.b._nazev.get,' (',u.b._jmena.get,") s celou rodinou?");
      alert('není hotovo - tady bude ještě jedno varování s výčtem rodiny a akcí, kterých se zúčastnila');
      reload(0);
  } }
  // PŘIDAT DÍTĚ
  button dite       [271,525,,] {title:'Přidat dítě', help:'Přidání dalšího dítěte do rodiny'
    proc onclick() {
      Dite.dite.init(2);
      Dite.key_dite.set(0); Dite.key_spolu.set(0);
      Dite.modal(260,240)
  } }
  // procedury
  proc b_display(on) { u.b.display(on); pob.d.display(on); pob.s.display(on); }
}
# ================================================================================================== Dítě
panel Dite [,,300,115] {type:'popup', title:'Úprava dětí'
  use dite: form _dite [12,10,,]
  var key_dite: number
  var key_spolu: number
  proc onfocus() {
    dite.sebou.set(cconc(key_spolu.get,1,0))
  }
  form _dite [,,200,50] { css:'ds_form'
    view d: table osoba
    field id_osoba                 { data:d.id_osoba }
    label [0,0,,] { title:'je na akci' }
    check sebou    [0,10,90,17]
    label [60,0,,] { title:'křestní jméno' }
    field jmeno    [61,12,90,17]   { data:d.jmeno }
    label [161,0,,] { title:'narození' }
    field narozeni [161,12,80,17] { type:'date', data:d.narozeni }
    label [252,0,,] { title:'/rč' }
    field rc_xxxx  [250,12,40,17] { data:d.rc_xxxx }
    label [2,40,,] { title:'trvalá poznámka k dítěti' }
    field note     [1,52,288,17]  { data:d.note }
    // ukončení
    button [1,87,,] { title:'Vyřadit z evidence', help:'Vyřadit toto dítě z evidence', proc onclick() {
      confirm("Opravdu zrušit všechny informace o ",jmeno.get,"?");
      // případně vyjmout z kurzu
      [ spolu.delete_record(conc('id_osoba=',id_osoba.get),9999) ];
      [ tvori.delete_record(conc('id_osoba=',id_osoba.get),9999) ];
      [ osoba.delete_record(conc('id_osoba=',id_osoba.get)) ];
      reload(u.b.browse_key);
      panel.hide(1)
    }}
    button [196,87,,] { title:'Zpět', proc onclick() {
      panel.hide(0)
    }}
    button [248,87,,] { type:'submit', title:'Uložit', proc onclick() {
      { key_dite.get;
        // oprava
        d.key(key_dite.get); [ d.save ];
        [ and(key_spolu.get,not(sebou.get)); // vyjmout z kurzu
          spolu.delete_record(conc('id_spolu=',key_spolu.get))
        | and(not(key_spolu.get),sebou.get); // přidat na kurz
          dite_na_kurs
        ];
      | // nové dítě
        d.insert; key_dite.set(d.key);
        tvori.insert_record(object('id_osoba',key_dite.get,'id_rodina',u.b.key_rodina.get,'role','d'));
        dite_na_kurs
      };
      reload(u.b.browse_key);
      panel.hide(1)
    }}
    proc dite_na_kurs() {
      spolu.insert_record(object('id_pobyt',u.b.key_pobyt.get,'id_osoba',key_dite.get));
    }
  }
}
# ================================================================================================== Přidání jménem 1
panel PridaniJmenem1 [,,320,280] {type:'popup', title:'Přidání známých dospělých jménem'
  use fl: form _fl [12,10,,]
  form _fl [,,300,200] {
    var last: number
    var rod: object
    var popis: text
    button [0,250,50,16] { title:'přidat do účastníků', proc onclick() {
      each(L,pary_add); reload(0);
    } }
    button [130,250,50,16] { title:'jiná jména', proc onclick() {
      jmena.init; vse.init; L.init } }
    button [220,250,50,16] { title:'konec', proc onclick() {
      jmena.init; vse.init; L.init; panel.hide(0) } }
    // výběr z databáze MS
    select jmena [100,0,200,17] { type:'auto', par:°{fce:'akce_auto_jmena1'}, format:'t'
      proc onchanged() {
        rod.set(ask('akce_auto_jmena1L',this.key));
        each(rod.get,jmenovci); // nesmí volat asynchronní operace
      }
    }
    proc jmenovci(p,i) {
      last.set(L.add);
      popis.set(p.nazev);
      L.part(last.get).part('info').set(popis.get);
      L.part(last.get).part('all').set(p);
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t'
      proc onchange() { each(L,nastav) }
      proc nastav (x,i) { x.chck.set(form.vse.get) }
    }
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t'  /*, proc onchange() { echo('jo/ne') }*/ }
      label info [23,4,300,16] {style:'white-space:nowrap'}
      var all: object
    }
  }
}
# ================================================================================================== Přidání jménem 2
panel PridaniJmenem2 [,,320,280] {type:'popup', title:'Přidání známých párů jménem'
  use fl: form _fl [12,10,,]
  form _fl [,,300,200] {
    var last: number
    var rod: object
    var popis: text
    button [0,250,50,16] { title:'přidat do účastníků', proc onclick() {
      each(L,pary_add); reload(0);
    } }
    button [130,250,50,16] { title:'jiná jména', proc onclick() {
      jmena.init; vse.init; L.init } }
    button [220,250,50,16] { title:'konec', proc onclick() {
      jmena.init; vse.init; L.init; panel.hide(0) } }
    // výběr z databáze MS
    select jmena [100,0,200,17] { type:'auto', par:°{fce:'akce_auto_jmena2'}, format:'t'
      proc onchanged() {
        rod.set(ask('akce_auto_jmena2L',this.key));
        each(rod.get,jmenovci); // nesmí volat asynchronní operace
      }
    }
    proc jmenovci(p,i) {
      last.set(L.add);
      popis.set(p.nazev);
      L.part(last.get).part('info').set(popis.get);
      L.part(last.get).part('all').set(p);
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t'
      proc onchange() { each(L,nastav) }
      proc nastav (x,i) { x.chck.set(form.vse.get) }
    }
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t'  /*, proc onchange() { echo('jo/ne') }*/ }
      label info [23,4,300,16] {style:'white-space:nowrap'}
      var all: object
    }
  }
}
# ================================================================================================== Přidání akce
panel PridaniAkce [,,320,280] {type:'popup', title:'Přidání účastníků známých z jiných akcí'
  use fl: form _fl [12,10,,]
  form _fl [,,300,200] {
    var last: number
    var pary: object
    var popis: text
    button [0,250,50,16] { title:'přidat do účastníků', proc onclick() {
      each(L,pary_add); reload(0);
    } }
    button [130,250,50,16] { title:'jiná akce', proc onclick() {
      akce.init; vse.init; L.init } }
    button [220,250,50,16] { title:'konec', proc onclick() {
      akce.init; vse.init; L.init; panel.hide(0) } }
    // výběr z akcí
    select akce [100,0,200,17] { type:'auto', par:°{fce:'akce_auto_akce'}, format:'t'
      proc onchanged() {
        pary.set(ask('akce_auto_akceL',this.key));
        each(pary.get,ucastnici); // nesmí volat asynchronní operace
      }
    }
    proc ucastnici(p,i) {
      last.set(L.add);
      popis.set(p.nazev);
      L.part(last.get).part('info').set(popis.get);
      L.part(last.get).part('all').set(p);
    }
    // nastavení výběru
    check vse [4,0,80,16] { title:'všichni', format:'t'
      proc onchange() { each(L,nastav) }
      proc nastav (x,i) { x.chck.set(form.vse.get) }
    }
    list L [0,23,300,200] {rows:22      // anonymní group
      check chck [4,0,50,16] { title:' ', format:'t'  /*, proc onchange() { echo('jo/ne') }*/ }
      label info [23,4,300,16] {style:'white-space:nowrap'}
      var all: object
    }
  }
}
# ================================================================================================== Strava
panel Strava [,,320,280] {type:'popup', title:'Nastavení nestandardního počtu strav'
  var dnu: number
  var arr: object
  use n: form nastaveni [5,5,,]
  proc onfocus() {
    var cela: text  // řetězec strav: sov.... po dnech
    var polo: text  // řetězec strav: sov.... po dnech
    [ cela.set(u.b.cstrava_cel.get); cela.get | cela.set(strava_def(u.b.strava_cel.get)) ];
    [ polo.set(u.b.cstrava_pol.get); polo.get | polo.set(strava_def(u.b.strava_pol.get)) ];
    n.L.init;
    n.cele.set(u.b.strava_cel.get); n.polo.set(u.b.strava_pol.get);
    arr.set(ask('akce_strava_denne',u.b.datum_od.get,dnu.get,cela.get,polo.get));
    each(arr.get,den);
  }
  proc strava_def(strav) {
    return(conc('0','0',strav,
      repeat(strav,multiply(3,sum(dnu.get,minus(2)))),
      strav,strav,'0'))
  }
  proc den (p,i) {
    [ n.L.add ];
    n.L.part(i).part('den').set(p.den);
    strava_set(i,'sc',p.sc,n.cele.get);
    strava_set(i,'sp',p.sp,n.polo.get);
    strava_set(i,'oc',p.oc,n.cele.get);
    strava_set(i,'op',p.op,n.polo.get);
    strava_set(i,'vc',p.vc,n.cele.get);
    strava_set(i,'vp',p.vp,n.polo.get);
  }
  proc strava_set(i,s,val,norm) {
    var s1:text
    s1.set(substr(s,0,1));
    { or(and(eq(i,0),eq(s1,'s','o')),and(eq(i,sum(dnu.get,minus(1))),eq(s1,'v')));
      n.L.part(i).part(s).enable(0);
    | n.L.part(i).part(s).set(val);
      not(eq(val,norm));
      n.L.part(i).part(s).set_css('red')
    }
  }
  proc reset(co,jak) {
    each(arr.get,reset_den,co,jak);
  }
  proc reset_den(p,i,co,jak) {
    strava_set(i,co,jak,jak)
  }
  # ------------------------------------------------------------ počty strav
  form nastaveni [0,0,320,200] {
    // sada návratu na default
    button [0,19,40,] { title:'V'
      proc onclick() {
        reset('sc',n.cele.get); reset('oc',n.cele.get); reset('vc',n.cele.get);
        reset('sp',n.polo.get); reset('op',n.polo.get); reset('vp',n.polo.get);
    }}
    label  [ 43, 0,,] { title:'Celé'}
    field cele [39,20,13,] { proc onchange { reset_cele.onclick }}
    button reset_cele [ 55,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() {
        reset('sc',n.cele.get); reset('oc',n.cele.get); reset('vc',n.cele.get);
    }}
    label  [ 83, 0,,] { title:'Dětské'}
    field polo [83,20,13,] { proc onchange { reset_polo.onclick }}
    button reset_polo [ 99,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() {
        reset('sp',n.polo.get); reset('op',n.polo.get); reset('vp',n.polo.get);
    }}
    label  [153, 0,,] { title:'Snídaně'}
    button [155,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('sc',n.cele.get); }}
    button [175,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('sp',n.polo.get); }}
    label  [215, 0,,] { title:'Oběd' }
    button [213,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('oc',n.cele.get); }}
    button [233,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('op',n.polo.get); }}
    label  [267, 0,,] { title:'Večeře'}
    button [269,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('vc',n.cele.get); }}
    button [289,19,,] { title:'V', style:'width:17px;padding:0'
      proc onclick() { reset('vp',n.polo.get); }}
    // dny
    list L [0,50,320,200] {rows:22
      field den [4,0,140,16] {format:'o' }
      field sc  [155,0,15,] {format:':e' }
      field sp  [175,0,15,] {format:':e' }
      field oc  [213,0,15,] {format:':e' }
      field op  [233,0,15,] {format:':e' }
      field vc  [269,0,15,] {format:':e' }
      field vp  [289,0,15,] {format:':e' }
    }
    // ukončení
    button [205,255,,] { title:'Zpět', proc onclick() {
      panel.hide(0)
    }}
    var scele: text
    var spolo: text
    button [264,255,,] { type:'submit', title:'OK', proc onclick() {
      scele.set(''); spolo.set('');
      each(L,save_den);
      ask('akce_strava_denne_save',u.b.key_pobyt.get,dnu.get,
        scele.get,u.b.strava_cel.get,u.b.cstrava_cel.get,
        spolo.get,u.b.strava_pol.get,u.b.cstrava_pol.get);
      panel.hide(0);
      u.b.browse_seek;
      u.b.browse_focus; u.b.focus
    }}
    proc save_den (p,i) {
      scele.set(conc(scele.get,pocet_strav(i,'sc'),pocet_strav(i,'oc'),pocet_strav(i,'vc')));
      spolo.set(conc(spolo.get,pocet_strav(i,'sp'),pocet_strav(i,'op'),pocet_strav(i,'vp')));
    }
    proc pocet_strav(i,f) {
      var x: text
      x.set(L.part(i).part(f).get);
      return(cconc(x,x,'0'));
    }
  }
}
# ================================================================================================== BackTrace
# přehled provedených změn
panel BackTrace [,,540,250] { title:'histore oprav', type:'popup', css:'dialog'
  use back: form _back [0,16,,] { tabindex:20 },
  proc back_load(id_pobyt,id_muz,id_zen,id_rodina) {
    BackTrace.popup(0,1);
    back.list.browse_load(
      conc("(kde='pobyt' AND klic=",id_pobyt,
      ") OR (kde='osoba' AND klic IN(",id_muz,",",id_zen,")",
      ") OR (kde='rodina' AND klic=",id_rodina,")"),"kdy DESC");
    back.list.raise('onrowclick')
  }
  # ------------------------------------------------------------- _back
  # id_track,kdy,kdo,kde,klic,zmena:fld,op,val,old
  form _back [,,255,250] {
    browse list [0,0,150,100] { rows:12,
      show kdy [,,90,] { title:'kdy', data:_track.kdy, sql_pipe:'sql_time1' },
      show kdn [,,30,] { title:'kdn', data:_track.kdo },
      show op [,,12,] { title:'?', data:_track.op },
      show fld [,,60,] { title:'položka', data:_track.fld },
      show old [,,200,] { title:'původní hodnota', data:_track.old, format:'t' },
      show val [,,120,] { title:'změněná hodnota', data:_track.val, format:'t' },
      show id_track [,,0,] { data:_track.id_track },
    },
    button zpet [500,515,80,20] { title:'Zpět'
      proc onclick() { panel.close(0) }
    }
  }
}
