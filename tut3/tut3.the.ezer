#pragma strings
# ------------------------------------------------------------------------------------------------ #
# Modul pro demonstraci a testování základních komponent jádra systému Ezer3                       #
#                                                                                                  #
# Ezer3                                                  (C) 2017 Martin Šmídek <martin@smidek.eu> #
# ------------------------------------------------------------------------------------------------ #
// info.fill('',ask('tut_phpexcel',i.par));

panel lang [,,500,400] {type:'right', title:'[fa-book] Language', style:'background:white'
  var two= 'dvě'
  menu {type:'left', format:'f'
    menu {title:'group 1',type:'group'
      item {title:"[fa-at] screen size" proc onclick() {
        echo('w:',sys('screen','width'),', h:',sys('screen','height')) } }
      item {title:"[fa-at] item 1.2" proc onclick() { echo(this.title) } }
    }
    menu {title:'group 2',type:'group'
      item {title:"item 2.1"  proc onclick() { echo(this.title) } }
      item {title:"item 2.2", format:'d'  proc onclick() { echo(this.title) } }
      item {title:"item 2.3", format:'d'  proc onclick() { echo(this.title) } }
      item {title:"item 2.4", format:'d'  proc onclick() { echo(this.title) } }
      item {title:"item 2.5", format:'d'  proc onclick() { echo(this.title) } }
    }
    // reakce na změnu (tohoto) menu
    proc onresize(w) { warning('menu bylo změněno, je nyní široké: ',w,'px'); }
  }
  const one=1
  proc ahoj() { alert('ahoj') }
  use u: form f [0,0,,]
  proc onfocus() {
#     echo('one=',one.get); u.but.get; u.lab.set(conc(u.lab.get,'.'));
    u.fce_ctx.Init
  }
  proc onresize(w,h) {    // volané jádrem po změně rozměrů okna, onresize může být jen v panelu
    u.w.set(w); u.h.set(h);
  }
  form f [,,400,200] {
    // ---------------------------------------------------------------------------------==> browse
    browse br [5,92,,] { rows:6,  qry_rows:1,
      show jmena [,,50,] { title:'jmena', data:_jmena.jmeno, format:'q*s+' }
#       show hodnoty [,,40,] { title:'map', data:_jmena.cetnost, map_pipe:top_jmena.cetnost, format:'q#s+r' }
      show x [,,40,] { title:'x', data:_jmena.cetnost, format:'q=sr' }
    }
    button [130,94,,]   { title:"load", format:"q*s+"
      proc onclick() { br.browse_load }}
    button [130,124,,]   { title:"fill(1..20)", format:"q*s+"
      proc onclick() { br.browse_fill("1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20") }}
    button [130,154,,]  {title:"rows(+1)",
      proc onclick() { br.set_attrib('rows',sum(br.rows,1)) }}
    button [130,184,,]  {title:"rows(-1)",
      proc onclick() { br.set_attrib('rows',sum(br.rows,-1)) }}

    // ---------------------------------------------------------------------------------==> elementy
    // počítané [l,t,w,h]
    const PQ=-67             // posun pro nové pokoje
    const PL=0; PT=92; QT=PT+PQ-4; FT=120+PQ
    label       [320,QT+-14,80,20] { title:'nové pokoje:', style:"outline:1px dotted red" }

    // elementy
    label ram [5,5,90,20] { title:'', css:'work' }
    label lab [10,7,,] { title:"AHOJ <a href='ezer://the.lang.ahoj'>pozdrav</a>", help:'ahoj!'
      // context menu s maskou
      menu { type:'context', join:ram
        item { title:'gama' proc onclick() { echo('gama') }}
      }
    }
    button but [100,5,,] { title:"add .", help:"přidej tečku"
      proc onclick() { echo('au'); this.set(conc(this.get,'.')); }
    }

    field [396,126,84,] { type:'date', help:'one', value:'16.8.2016'
      proc onchange() { echo('? ',this.get) }
      proc onchanged() { echo('!!',this.get) }
    }
    field sel_get [396,156,20,] { title:'*.get', help:'?' }
    field sel_key [460,156,20,] { title:'*.key', help:'?' }

    # ----------------------------------------------------------------------------------==> list
    field [200,186,80,] { type:'list', format:'', help:'čísla', value:"jedna,dvě"}
    # ----------------------------------------------------------------------------------==> edit
    edit [5,255,260,100] { type:'html', data:_jmena.jmeno }
    edit e [300,186,65,30] { help:'četnost', data:_jmena.cetnost }
    button [290,216,,] { title:"L" proc onclick() { form.load(1) } }
    button [310,216,,] { title:"K" proc onclick() { sel_key.set(form.key) } }
    button [330,216,,] { title:"S" proc onclick() { form.save } }
    # ----------------------------------------------------------------------------------==> radio
    check [280,255,80,] { title:"enable",  value:'0' }
    radio [280,285,70,40]  { title:"pivo", help:"jedna-dvě", value:'1'
      case [0, 0,60,] { title:'jedna', value:'1' }
      case [0,20,60,] { title:'dvě',   value:'2' }
    }
    # ----------------------------------------------------------------------------------==> chat
    chat ch [350,230,130,90] { divide:60, skill:'m|m'
      proc onstart() { this.set("alfa|beta") }
    }
    button [350,320,,] { title:'init' proc onclick() { ch.init }}
    button [390,320,,] { title:'add' proc onclick() { ch.add(ch.get); ch.add("x|y|") }}
    button [440,320,,] { title:'del' proc onclick() { ch.let(1) }}
    # ----------------------------------------------------------------------------------==> autoselect
    proc s_show(s) { sel_get.set(s.get); sel_key.set(s.key) }
    select s3 [380,186,100,] { type:'auto', par:°{fce:'test_auto'}, format:'', help:'HELP',
      proc onchanged() { s_show(s3) }}
    button [590,886,,] {title:"key(2)",             proc onclick() { s3.key('2'); s_show(s3) }}
#     // select
#     select [340,186,40,] { help:'noimg', par:°{noimg:1}
#       proc onstart() { this.selects("x,y");  }
#       proc onchanged() { sel_get.s1et(this.get); sel_key.set(this.key) }
#     }
#     select sel [396,186,84,] { help:'sel', format:'u', title:'*'
#       proc onstart() { this.selects("a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8"); this.key(7); onchanged; }
#       proc onchanged() { sel_get.set(this.get); sel_key.set(this.key) }
#     }
#     button [483,180,14,14] { title:'i', proc onclick() { sel.init; sel.onchanged }}
#     button [483,196,14,14] { title:'s', proc onclick() { sel.key(7); sel.onchanged }}
#     button [483,212,14,14] { title:'g', proc onclick() { sel.onchanged }}
#     select [396,216,84,] { type:'multi', help:'multi', format:'u'
#       proc onstart() { this.selects("i,j,k"); }
#       proc onchanged() { sel_get.set(this.get); sel_key.set(this.key);  }
#     }

    field [320,35,20,] { title:'o', value:'A', help:'a', format:'o', id:'i_d'}
    field [360,35,20,] { title:'d', value:'B', help:'b', format:'d'}
    field [400,35,20,] { title:'p', value:'C', help:'c', format:'p'}
    field [440,35,20,] { title:'x',            help:'x'
      proc onclick() { echo('click') }
      proc onfocus() { echo('focus') }
      proc onblur()  { echo('blur') }
    }

    button [407,96,,] { title:"call onfocus",    proc onclick() { onfocus }}
    // context menu
    menu { type:'context'
      item { title:'alfa', format:'d' proc onclick() { echo('alfa') }}
      item { title:'-[fa-save] beta' proc onclick() { echo('beta') }}
      item { type:'clipboard', title:'copy to clipboard' proc onclick() { clipboard("Dobrý den!") }}
    }
    // test display
    button [5,35,,] { title:"display on/off"
      proc onclick() {
        [ lab.display; lab.display(0) | lab.display(1) ];
        [ but.display; but.display(0) | but.display(1) ];
      }
    }
    // test enable
    button [100,35,,] { title:"enable on/off"
      proc onclick() {
        [ lab.enable; lab.enable(0) | lab.enable(1) ];
        [ but.enable; but.enable(0) | but.enable(1) ];
      }
    }
    // zobrazení reakce na resize
    label [5,62,180,26] { title:'', css:'work' }
    field w [45,65,40,] { title:'width:' }
    field h [135,65,40,] { title:'height:' }

    // --------------------------------------------------------------------------- testy funkcí
    button fce_ctx [200,5,,] { title:"fce contextmenu"
      proc Init() {
        contextmenu(function(
          "return [['try',function(){alert(13)}]];"
        ),'',function("return this.DOM_Block;"))
    }}
    button [200,35,,] { title:"error",    proc onclick() {
      counter.set(sum(1,counter.get));
      error(conc('error No.',counter.get));
    }}
    button [245,35,,] { title:"warning",  proc onclick() {
      counter.set(sum(1,counter.get));
      warning('error No.',counter.get);
    }}
    var counter=0
    button [200,156,,] {   title:"ask +1",    proc onclick() { counter.set(ask('tut3_inc',counter.get)) }}
    button [255,156,,] { title:"alert(ask)", skill:'m|m'
      proc onclick() { confirm('dotaz'); alert('akce') }
    }
    proc inc() { counter.set(ask('tut3_inc',counter.get)) }
    // popup
    button [200,65,,] { title:"alert",    proc onclick() { alert('test No.1') }}
    button [245,65,,] { title:"confirm",
      proc onclick() { confirm('tučný <b>dotaz</b>');echo('ano') | echo('ne') }}
    button [305,65,,] { title:"choose",
      proc onclick() { echo(choose('Zvol, pěkně prosím, jednu ze tří nabízených variant odpovědi',
        'vlevo:to the left,rovně:0,vpravo:1')); echo('.') }}
    button [366,65,,] { title:"prompt2",  proc onclick() { echo(prompt2('jméno:','Martin')); echo('.') }}
    button [431,65,,] { title:"ALERT",    proc onclick() { javascript("alert('test')"); echo('.') }}
    // popup
    button [200,95,,] { title:"popup",    proc onclick() { pop.popup; echo('.') }}
    button [254,95,,] { title:"modal",    proc onclick() { pop.modal; echo('.') }}
    button [308,95,,] { title:"modal...", proc onclick() { pop.modal(10,10,'název'); echo('.') }}
    // ordinary panel
    button [200,125,,] { title:"show pan", proc onclick() { pan.popup(7,5) }}
    button [271,125,,] { title:"hide pan", proc onclick() { pan.hide }}
  }
  panel pan [0,0,200,100] { title:"obyčejný panel", style:"outline:1px dotted red;background:white"
    use pu: form pf
    form pf {
      button pa [0,30,,] { title:"alert!", proc onclick() { alert('z pan') }}
    }
  }
}

panel pop [,,200,100] { type:"popup", title:"Hup!"
  use pu: form pf
  form pf {
    button p1 [61,71,,] { title:"Ok",      proc onclick() { panel.hide(1) }}
    button p0 [106,71,,] { title:"Zpět",    proc onclick() { panel.hide(0) }}
    button pa [0,30,,] { title:"alert!", proc onclick() { alert('z pop') }}
  }
}

table _jmena { key_id:'id_jmena'
  number id_jmena
  text   jmeno
  number cetnost
}
map top_jmena: table _jmena {where:"cetnost>250000", order:'cetnost', key_id:'id_jmena'}

panel tree [,,500,400] {type:'plain', title:'[fa-tree] Tree', style:'background:white'
  use u: form f [0,0,,]
  form f [,,400,200] {
    # ----------------------------------------------------------------------------------------==> area
    button [200,10,,]   {tag:'a_', title:"ONE (TWO,THREE)",            proc onclick() { a.test }}
    button [200,40,,]   {tag:'a_', title:"struktura applikace (id)",   proc onclick() { a.appl('id') }}
    button [200,70,,]   {tag:'a_', title:"struktura applikace (_sys)", proc onclick() { a.appl('_sys') }}
    use a: area a_ {tag:'a_'}
    area a_ { title:"<div id='tree' class='ae_work' style='overflow:auto;position:absolute;left:10px;top:10px;width:180px;height:180px'></div>"
      proc test() { this.tree_show(°{prop:°{id:'ONE'},down:°[°{prop:°{id:'TWO'}},°{prop:°{id:'THREE'}}]},'tree',1) }
      proc appl(typ) { this.tree_show(meta_tree(typ),'tree'); this.tree_expand(1) }
      proc tree_onclick(fid,id,dat,com,x,txt,txts) { var i:text
        i.set(replace(fid,'^[^\.]+\.',''));
        echo("tree_onclick: txt=",txt," id=",i);
  #       echo("tree_onclick: fid=",fid,", id=",id,", data=",dat)
      }
    }
  }
}

